
// Code generated by tools/gen_shims. DO NOT EDIT.

package stringutil

import "github.com/microsoft/typescript-go/internal/stringutil"
import _ "unsafe"

//go:linkname CompareStringsCaseInsensitive github.com/microsoft/typescript-go/internal/stringutil.CompareStringsCaseInsensitive
func CompareStringsCaseInsensitive(a string, b string) stringutil.Comparison
//go:linkname CompareStringsCaseSensitive github.com/microsoft/typescript-go/internal/stringutil.CompareStringsCaseSensitive
func CompareStringsCaseSensitive(a string, b string) stringutil.Comparison
type Comparison = stringutil.Comparison
const ComparisonEqual = stringutil.ComparisonEqual
const ComparisonGreaterThan = stringutil.ComparisonGreaterThan
const ComparisonLessThan = stringutil.ComparisonLessThan
//go:linkname EquateStringCaseInsensitive github.com/microsoft/typescript-go/internal/stringutil.EquateStringCaseInsensitive
func EquateStringCaseInsensitive(a string, b string) bool
//go:linkname EquateStringCaseSensitive github.com/microsoft/typescript-go/internal/stringutil.EquateStringCaseSensitive
func EquateStringCaseSensitive(a string, b string) bool
//go:linkname Format github.com/microsoft/typescript-go/internal/stringutil.Format
func Format(text string, args []any) string
//go:linkname GetStringComparer github.com/microsoft/typescript-go/internal/stringutil.GetStringComparer
func GetStringComparer(ignoreCase bool) func(a string, b string) stringutil.Comparison
//go:linkname GetStringEqualityComparer github.com/microsoft/typescript-go/internal/stringutil.GetStringEqualityComparer
func GetStringEqualityComparer(ignoreCase bool) func(a string, b string) bool
//go:linkname GuessIndentation github.com/microsoft/typescript-go/internal/stringutil.GuessIndentation
func GuessIndentation(lines []string) int
//go:linkname IsASCIILetter github.com/microsoft/typescript-go/internal/stringutil.IsASCIILetter
func IsASCIILetter(ch rune) bool
//go:linkname IsDigit github.com/microsoft/typescript-go/internal/stringutil.IsDigit
func IsDigit(ch rune) bool
//go:linkname IsHexDigit github.com/microsoft/typescript-go/internal/stringutil.IsHexDigit
func IsHexDigit(ch rune) bool
//go:linkname IsLineBreak github.com/microsoft/typescript-go/internal/stringutil.IsLineBreak
func IsLineBreak(ch rune) bool
//go:linkname IsOctalDigit github.com/microsoft/typescript-go/internal/stringutil.IsOctalDigit
func IsOctalDigit(ch rune) bool
//go:linkname IsWhiteSpaceLike github.com/microsoft/typescript-go/internal/stringutil.IsWhiteSpaceLike
func IsWhiteSpaceLike(ch rune) bool
//go:linkname IsWhiteSpaceSingleLine github.com/microsoft/typescript-go/internal/stringutil.IsWhiteSpaceSingleLine
func IsWhiteSpaceSingleLine(ch rune) bool
//go:linkname SplitLines github.com/microsoft/typescript-go/internal/stringutil.SplitLines
func SplitLines(text string) []string

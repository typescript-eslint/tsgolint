
// Code generated by tools/gen_shims. DO NOT EDIT.

package parser

import "github.com/microsoft/typescript-go/internal/ast"
import "github.com/microsoft/typescript-go/internal/core"
import "github.com/microsoft/typescript-go/internal/parser"
import "github.com/microsoft/typescript-go/internal/scanner"
import "github.com/microsoft/typescript-go/internal/tspath"
import _ "unsafe"

const PCArgumentExpressions = parser.PCArgumentExpressions
const PCArrayBindingElements = parser.PCArrayBindingElements
const PCArrayLiteralMembers = parser.PCArrayLiteralMembers
const PCBlockStatements = parser.PCBlockStatements
const PCClassMembers = parser.PCClassMembers
const PCCount = parser.PCCount
const PCEnumMembers = parser.PCEnumMembers
const PCHeritageClauseElement = parser.PCHeritageClauseElement
const PCHeritageClauses = parser.PCHeritageClauses
const PCImportAttributes = parser.PCImportAttributes
const PCImportOrExportSpecifiers = parser.PCImportOrExportSpecifiers
const PCJSDocComment = parser.PCJSDocComment
const PCJSDocParameters = parser.PCJSDocParameters
const PCJsxAttributes = parser.PCJsxAttributes
const PCJsxChildren = parser.PCJsxChildren
const PCObjectBindingElements = parser.PCObjectBindingElements
const PCObjectLiteralMembers = parser.PCObjectLiteralMembers
const PCParameters = parser.PCParameters
const PCRestProperties = parser.PCRestProperties
const PCSourceElements = parser.PCSourceElements
const PCSwitchClauseStatements = parser.PCSwitchClauseStatements
const PCSwitchClauses = parser.PCSwitchClauses
const PCTupleElementTypes = parser.PCTupleElementTypes
const PCTypeArguments = parser.PCTypeArguments
const PCTypeMembers = parser.PCTypeMembers
const PCTypeParameters = parser.PCTypeParameters
const PCVariableDeclarations = parser.PCVariableDeclarations
type ParseFlags = parser.ParseFlags
const ParseFlagsAwait = parser.ParseFlagsAwait
const ParseFlagsIgnoreMissingOpenBrace = parser.ParseFlagsIgnoreMissingOpenBrace
const ParseFlagsJSDoc = parser.ParseFlagsJSDoc
const ParseFlagsNone = parser.ParseFlagsNone
const ParseFlagsType = parser.ParseFlagsType
const ParseFlagsYield = parser.ParseFlagsYield
//go:linkname ParseIsolatedEntityName github.com/microsoft/typescript-go/internal/parser.ParseIsolatedEntityName
func ParseIsolatedEntityName(text string, languageVersion core.ScriptTarget) *ast.EntityName
//go:linkname ParseJSONText github.com/microsoft/typescript-go/internal/parser.ParseJSONText
func ParseJSONText(fileName string, path tspath.Path, sourceText string) *ast.SourceFile
//go:linkname ParseSourceFile github.com/microsoft/typescript-go/internal/parser.ParseSourceFile
func ParseSourceFile(fileName string, path tspath.Path, sourceText string, languageVersion core.ScriptTarget, jsdocParsingMode scanner.JSDocParsingMode) *ast.SourceFile
type Parser = parser.Parser
type ParserState = parser.ParserState
type ParsingContext = parser.ParsingContext
type ParsingContexts = parser.ParsingContexts

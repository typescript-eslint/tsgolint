// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoExtendNativeRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "no-extend-native", []ValidTestCase{
		{Code: `x.prototype.p = 0`},
		{Code: `x.prototype['p'] = 0`},
		{Code: `Object.p = 0`},
		{Code: `Object.toString.bind = 0`},
		{Code: `Object['toString'].bind = 0`},
		{Code: `Object.defineProperty(x, 'p', {value: 0})`},
		{Code: `Object.defineProperties(x, {p: {value: 0}})`},
		{Code: `global.Object.prototype.toString = 0`},
		{Code: `this.Object.prototype.toString = 0`},
		{Code: `with(Object) { prototype.p = 0; }`},
		{Code: `o = Object; o.prototype.toString = 0`},
		{Code: `eval('Object.prototype.toString = 0')`},
		{Code: `parseFloat.prototype.x = 1`},
		{
			Code:    `Object.prototype.g = 0`,
			Options: "[{\"exceptions\":[\"Object\"]}]",
		},
		{Code: `obj[Object.prototype] = 0`},
		{Code: `Object.defineProperty()`},
		{Code: `Object.defineProperties()`},
		{Code: `function foo() { var Object = function() {}; Object.prototype.p = 0 }`},
		{
			Code:            `{ let Object = function() {}; Object.prototype.p = 0 }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
	}, []InvalidTestCase{
		{
			Code: `Object.prototype.p = 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `BigInt.prototype.p = 0`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `WeakRef.prototype.p = 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `FinalizationRegistry.prototype.p = 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `AggregateError.prototype.p = 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Function.prototype['p'] = 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `String['prototype'].p = 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Number['prototype']['p'] = 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Object.defineProperty(Array.prototype, 'p', {value: 0})`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Object.defineProperties(Array.prototype, {p: {value: 0}})`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Object.defineProperties(Array.prototype, {p: {value: 0}, q: {value: 0}})`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:    `Number['prototype']['p'] = 0`,
			Options: "[{\"exceptions\":[\"Object\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `Object.prototype.p = 0; Object.prototype.q = 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    1,
				},
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `function foo() { Object.prototype.p = 0 }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `(Object?.prototype).p = 0`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `Object.defineProperty(Object?.prototype, 'p', { value: 0 })`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `Object?.defineProperty(Object.prototype, 'p', { value: 0 })`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `(Object?.defineProperty)(Object.prototype, 'p', { value: 0 })`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `Array.prototype.p &&= 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `Array.prototype.p ||= 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `Array.prototype.p ??= 0`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

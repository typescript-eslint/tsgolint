// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestDefaultParamLastRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"parser\":{\"version\":\"8.30.1\",\"meta\":{\"name\":\"typescript-eslint/parser\",\"version\":\"8.30.1\"}}}}", "default-param-last", []ValidTestCase{
		{Code: `function foo() {}`},
		{Code: `function foo(a: number) {}`},
		{Code: `function foo(a = 1) {}`},
		{Code: `function foo(a?: number) {}`},
		{Code: `function foo(a: number, b: number) {}`},
		{Code: `function foo(a: number, b: number, c?: number) {}`},
		{Code: `function foo(a: number, b = 1) {}`},
		{Code: `function foo(a: number, b = 1, c = 1) {}`},
		{Code: `function foo(a: number, b = 1, c?: number) {}`},
		{Code: `function foo(a: number, b?: number, c = 1) {}`},
		{Code: `function foo(a: number, b = 1, ...c) {}`},
		{Code: `const foo = function () {};`},
		{Code: `const foo = function (a: number) {};`},
		{Code: `const foo = function (a = 1) {};`},
		{Code: `const foo = function (a?: number) {};`},
		{Code: `const foo = function (a: number, b: number) {};`},
		{Code: `const foo = function (a: number, b: number, c?: number) {};`},
		{Code: `const foo = function (a: number, b = 1) {};`},
		{Code: `const foo = function (a: number, b = 1, c = 1) {};`},
		{Code: `const foo = function (a: number, b = 1, c?: number) {};`},
		{Code: `const foo = function (a: number, b?: number, c = 1) {};`},
		{Code: `const foo = function (a: number, b = 1, ...c) {};`},
		{Code: `const foo = () => {};`},
		{Code: `const foo = (a: number) => {};`},
		{Code: `const foo = (a = 1) => {};`},
		{Code: `const foo = (a?: number) => {};`},
		{Code: `const foo = (a: number, b: number) => {};`},
		{Code: `const foo = (a: number, b: number, c?: number) => {};`},
		{Code: `const foo = (a: number, b = 1) => {};`},
		{Code: `const foo = (a: number, b = 1, c = 1) => {};`},
		{Code: `const foo = (a: number, b = 1, c?: number) => {};`},
		{Code: `const foo = (a: number, b?: number, c = 1) => {};`},
		{Code: `const foo = (a: number, b = 1, ...c) => {};`},
		{Code: `
    class Foo {
      constructor(a: number, b: number, c: number) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(a: number, b?: number, c = 1) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(a: number, b = 1, c?: number) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        public a: number,
        protected b: number,
        private c: number,
      ) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        public a: number,
        protected b?: number,
        private c = 10,
      ) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        public a: number,
        protected b = 10,
        private c?: number,
      ) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        a: number,
        protected b?: number,
        private c = 0,
      ) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        a: number,
        b?: number,
        private c = 0,
      ) {}
    }
        `},
		{Code: `
    class Foo {
      constructor(
        a: number,
        private b?: number,
        c = 0,
      ) {}
    }
        `},
	}, []InvalidTestCase{
		{
			Code: `function foo(a = 1, b: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `function foo(a = 1, b = 2, c: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    21,
					EndColumn: 26,
				},
			},
		},
		{
			Code: `function foo(a = 1, b: number, c = 2, d: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    32,
					EndColumn: 37,
				},
			},
		},
		{
			Code: `function foo(a = 1, b: number, c = 2) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `function foo(a = 1, b: number, ...c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `function foo(a?: number, b: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 24,
				},
			},
		},
		{
			Code: `function foo(a: number, b?: number, c: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    25,
					EndColumn: 35,
				},
			},
		},
		{
			Code: `function foo(a = 1, b?: number, c: number) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    21,
					EndColumn: 31,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b = 2, c: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    30,
					EndColumn: 35,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b: number, c = 2, d: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    41,
					EndColumn: 46,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b: number, c = 2) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b: number, ...c) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
			},
		},
		{
			Code: `const foo = function (a?: number, b: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 33,
				},
			},
		},
		{
			Code: `const foo = function (a: number, b?: number, c: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    34,
					EndColumn: 44,
				},
			},
		},
		{
			Code: `const foo = function (a = 1, b?: number, c: number) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    23,
					EndColumn: 28,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    30,
					EndColumn: 40,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b = 2, c: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    21,
					EndColumn: 26,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b: number, c = 2, d: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    32,
					EndColumn: 37,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b: number, c = 2) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b: number, ...c) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `const foo = (a?: number, b: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 24,
				},
			},
		},
		{
			Code: `const foo = (a: number, b?: number, c: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    25,
					EndColumn: 35,
				},
			},
		},
		{
			Code: `const foo = (a = 1, b?: number, c: number) => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    14,
					EndColumn: 19,
				},
				{
					MessageId: "shouldBeLast",
					Line:      1,
					Column:    21,
					EndColumn: 31,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(
        public a: number,
        protected b?: number,
        private c: number,
      ) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      5,
					Column:    9,
					EndColumn: 29,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(
        public a: number,
        protected b = 0,
        private c: number,
      ) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      5,
					Column:    9,
					EndColumn: 24,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(
        public a?: number,
        private b: number,
      ) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      4,
					Column:    9,
					EndColumn: 26,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(
        public a = 0,
        private b: number,
      ) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      4,
					Column:    9,
					EndColumn: 21,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(a = 0, b: number) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      3,
					Column:    19,
					EndColumn: 24,
				},
			},
		},
		{
			Code: `
    class Foo {
      constructor(a?: number, b: number) {}
    }
          `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shouldBeLast",
					Line:      3,
					Column:    19,
					EndColumn: 29,
				},
			},
		},
	})
}

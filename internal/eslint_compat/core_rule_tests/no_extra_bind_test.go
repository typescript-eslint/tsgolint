// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoExtraBindRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-extra-bind", []ValidTestCase{
		{Code: `var a = function(b) { return b }.bind(c, d)`},
		{
			Code:            `var a = function(b) { return b }.bind(...c)`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `var a = function() { this.b }()`},
		{Code: `var a = function() { this.b }.foo()`},
		{Code: `var a = f.bind(a)`},
		{Code: `var a = function() { return this.b }.bind(c)`},
		{
			Code:            `var a = (() => { return b }).bind(c, d)`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `(function() { (function() { this.b }.bind(this)) }.bind(c))`},
		{Code: `var a = function() { return 1; }[bind](b)`},
		{
			Code:            "var a = function() { return 1; }[`bi${n}d`](b)",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var a = function() { return () => this; }.bind(b)`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
	}, []InvalidTestCase{
		{
			Code:   `var a = function() { return 1; }.bind(b)`,
			Output: `var a = function() { return 1; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Line:      1,
					Column:    34,
					EndLine:   1,
					EndColumn: 38,
				},
			},
		},
		{
			Code:   `var a = function() { return 1; }['bind'](b)`,
			Output: `var a = function() { return 1; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Line:      1,
					Column:    34,
					EndLine:   1,
					EndColumn: 40,
				},
			},
		},
		{
			Code:            "var a = function() { return 1; }[`bind`](b)",
			Output:          `var a = function() { return 1; }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Line:      1,
					Column:    34,
					EndLine:   1,
					EndColumn: 40,
				},
			},
		},
		{
			Code:            `var a = (() => { return 1; }).bind(b)`,
			Output:          `var a = (() => { return 1; })`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = (() => { return this; }).bind(b)`,
			Output:          `var a = (() => { return this; })`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() { (function(){ this.c }) }.bind(b)`,
			Output: `var a = function() { (function(){ this.c }) }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() { function c(){ this.d } }.bind(b)`,
			Output: `var a = function() { function c(){ this.d } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() { return 1; }.bind(this)`,
			Output: `var a = function() { return 1; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() { (function(){ (function(){ this.d }.bind(c)) }) }.bind(b)`,
			Output: `var a = function() { (function(){ (function(){ this.d }.bind(c)) }) }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    71,
				},
			},
		},
		{
			Code:   `var a = (function() { return 1; }).bind(this)`,
			Output: `var a = (function() { return 1; })`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = (function() { return 1; }.bind)(this)`,
			Output: `var a = (function() { return 1; })`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b++)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b())`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b.c)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() {}/**/.bind(b)`,
			Output: `var a = function() {}/**/`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() {}/**/['bind'](b)`,
			Output: `var a = function() {}/**/`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}//comment
.bind(b)`,
			Output: `var a = function() {}//comment
`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}./**/bind(b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}[/**/'bind'](b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.//
bind(b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind/**/(b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(
/**/b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b/**/)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b//
)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var a = function() {}.bind(b
/**/)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:   `var a = function() {}.bind(b)/**/`,
			Output: `var a = function() {}/**/`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = function() { return 1; }.bind?.(b)`,
			Output:          `var a = function() { return 1; }`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = function() { return 1; }?.bind(b)`,
			Output:          `var a = function() { return 1; }`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = (function() { return 1; }?.bind)(b)`,
			Output:          `var a = (function() { return 1; })`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = function() { return 1; }['bind']?.(b)`,
			Output:          `var a = function() { return 1; }`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = function() { return 1; }?.['bind'](b)`,
			Output:          `var a = function() { return 1; }`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var a = (function() { return 1; }?.['bind'])(b)`,
			Output:          `var a = (function() { return 1; })`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

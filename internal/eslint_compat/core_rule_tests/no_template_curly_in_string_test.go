// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoTemplateCurlyInStringRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-template-curly-in-string", []ValidTestCase{
		{Code: "`Hello, ${name}`;"},
		{Code: "templateFunction`Hello, ${name}`;"},
		{Code: "`Hello, name`;"},
		{Code: `'Hello, name';`},
		{Code: `'Hello, ' + name;`},
		{Code: "`Hello, ${index + 1}`"},
		{Code: `` + "`" + `Hello, ${name + " foo"}` + "`" + ``},
		{Code: `` + "`" + `Hello, ${name || "foo"}` + "`" + ``},
		{Code: `` + "`" + `Hello, ${{foo: "bar"}.foo}` + "`" + ``},
		{Code: `'$2'`},
		{Code: `'${'`},
		{Code: `'$}'`},
		{Code: `'{foo}'`},
		{Code: `'{foo: "bar"}'`},
		{Code: `const number = 3`},
	}, []InvalidTestCase{
		{
			Code: `'Hello, ${name}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `"Hello, ${name}"`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `'${greeting}, ${name}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `'Hello, ${index + 1}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `'Hello, ${name + " foo"}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `'Hello, ${name || "foo"}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
		{
			Code: `'Hello, ${{foo: "bar"}.foo}'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTemplateExpression",
				},
			},
		},
	})
}

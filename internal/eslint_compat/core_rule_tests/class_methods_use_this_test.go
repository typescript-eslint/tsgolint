// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestClassMethodsUseThisRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"parser\":{\"version\":\"8.30.1\",\"meta\":{\"name\":\"typescript-eslint/parser\",\"version\":\"8.30.1\"}}}}", "class-methods-use-this", []ValidTestCase{
		{Code: `class A { constructor() {} }`},
		{Code: `class A { foo() {this} }`},
		{Code: `class A { foo() {this.bar = 'bar';} }`},
		{Code: `class A { foo() {bar(this);} }`},
		{Code: `class A extends B { foo() {super.foo();} }`},
		{Code: `class A { foo() { if(true) { return this; } } }`},
		{Code: `class A { static foo() {} }`},
		{Code: `({ a(){} });`},
		{Code: `class A { foo() { () => this; } }`},
		{Code: `({ a: function () {} });`},
		{
			Code:    `class A { foo() {this} bar() {} }`,
			Options: "[{\"exceptMethods\":[\"bar\"]}]",
		},
		{
			Code:    `class A { "foo"() { } }`,
			Options: "[{\"exceptMethods\":[\"foo\"]}]",
		},
		{
			Code:    `class A { 42() { } }`,
			Options: "[{\"exceptMethods\":[\"42\"]}]",
		},
		{Code: `class A { foo = function() {this} }`},
		{Code: `class A { foo = () => {this} }`},
		{Code: `class A { foo = () => {super.toString} }`},
		{Code: `class A { static foo = function() {} }`},
		{Code: `class A { static foo = () => {} }`},
		{
			Code:    `class A { #bar() {} }`,
			Options: "[{\"exceptMethods\":[\"#bar\"]}]",
		},
		{
			Code:    `class A { foo = function () {} }`,
			Options: "[{\"enforceForClassFields\":false}]",
		},
		{
			Code:    `class A { foo = () => {} }`,
			Options: "[{\"enforceForClassFields\":false}]",
		},
		{
			Code:    `class A { override foo = () => {} }`,
			Options: "[{\"enforceForClassFields\":false}]",
		},
		{
			Code:    `class Foo implements Bar { property = () => {} }`,
			Options: "[{\"enforceForClassFields\":false}]",
		},
		{Code: `class A { foo() { return class { [this.foo] = 1 }; } }`},
		{Code: `class A { static {} }`},
		{
			Code:    `class Foo { override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { private override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { protected override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { override accessor method = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { private override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { protected override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { private override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { protected override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo implements Bar { override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { private override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { protected override method() {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { private override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { protected override get getter(): number {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { private override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { protected override set setter(v: number) {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo { override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { private override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo { protected override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true}]",
		},
		{
			Code:    `class Foo implements Bar { override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { private override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { protected override property = () => {} }`,
			Options: "[{\"ignoreOverrideMethods\":true,\"ignoreClassesWithImplements\":\"public-fields\"}]",
		},
		{
			Code:    `class Foo implements Bar { method() {} }`,
			Options: "[{\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { accessor method = () => {} }`,
			Options: "[{\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { get getter() {} }`,
			Options: "[{\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { set setter() {} }`,
			Options: "[{\"ignoreClassesWithImplements\":\"all\"}]",
		},
		{
			Code:    `class Foo implements Bar { property = () => {} }`,
			Options: "[{\"ignoreClassesWithImplements\":\"all\"}]",
		},
	}, []InvalidTestCase{
		{
			Code: `
  class Foo {
    method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    private method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    protected method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Derived extends Base {
    override method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Derived extends Base {
    property = () => {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Derived extends Base {
    public property = () => {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Derived extends Base {
    override property = () => {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    #method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    private get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    protected get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    get #getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    private set setter(b: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    protected set setter(b: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    set #setter(b: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  function fn() {
    this.foo = 303;

    class Foo {
      method() {}
    }
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    override method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    override get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    override set setter(v: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    override method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    override get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    override set setter(v: number) {}
  }
            `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo {
    override property = () => {};
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    override property = () => {};
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    #method() {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    #method() {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    private method() {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    protected method() {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    get getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    get #getter(): number {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    get #getter(): number {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    private get getter(): number {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    protected get getter(): number {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    set setter(v: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    set #setter(v: number) {}
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    set #setter(v: number) {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    private set setter(v: number) {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    protected set setter(v: number) {}
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    property = () => {};
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    #property = () => {};
  }
        `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    #property = () => {};
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    private property = () => {};
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
		{
			Code: `
  class Foo implements Bar {
    protected property = () => {};
  }
        `,
			Options: "[{\"ignoreClassesWithImplements\":\"public-fields\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingThis",
				},
			},
		},
	})
}

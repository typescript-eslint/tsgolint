// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoShadowRestrictedNamesRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "no-shadow-restricted-names", []ValidTestCase{
		{Code: `function foo(bar){ var baz; }`},
		{Code: `!function foo(bar){ var baz; }`},
		{Code: `!function(bar){ var baz; }`},
		{Code: `try {} catch(e) {}`},
		{
			Code:            `export default function() {}`,
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `try {} catch {}`,
			LanguageOptions: "{\"ecmaVersion\":2019}",
		},
		{Code: `var undefined;`},
		{Code: `var undefined; doSomething(undefined);`},
		{Code: `var undefined; var undefined;`},
		{
			Code:            `let undefined`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
		},
		{
			Code:            `import { undefined as undef } from 'foo';`,
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":2015}",
		},
	}, []InvalidTestCase{
		{
			Code: `function NaN(NaN) { var NaN; !function NaN(NaN) { try {} catch(NaN) {} }; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    14,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    25,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    40,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    44,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    64,
				},
			},
		},
		{
			Code: `function undefined(undefined) { !function undefined(undefined) { try {} catch(undefined) {} }; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    20,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    43,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    53,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    79,
				},
			},
		},
		{
			Code: `function Infinity(Infinity) { var Infinity; !function Infinity(Infinity) { try {} catch(Infinity) {} }; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    19,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    35,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    55,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    64,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    89,
				},
			},
		},
		{
			Code: `function arguments(arguments) { var arguments; !function arguments(arguments) { try {} catch(arguments) {} }; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    20,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    37,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    58,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    68,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    94,
				},
			},
		},
		{
			Code: `function eval(eval) { var eval; !function eval(eval) { try {} catch(eval) {} }; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    15,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    27,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    43,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    48,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    69,
				},
			},
		},
		{
			Code:            `var eval = (eval) => { var eval; !function eval(eval) { try {} catch(eval) {} }; }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    5,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    13,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    28,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    44,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    49,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    70,
				},
			},
		},
		{
			Code:            `var [undefined] = [1]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    6,
				},
			},
		},
		{
			Code:            `var {undefined} = obj; var {a: undefined} = obj; var {a: {b: {undefined}}} = obj; var {a, ...undefined} = obj;`,
			LanguageOptions: "{\"ecmaVersion\":9}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    6,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    32,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    63,
				},
				{
					MessageId: "shadowingRestrictedName",
					Column:    94,
				},
			},
		},
		{
			Code: `var undefined; undefined = 5;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    5,
				},
			},
		},
		{
			Code:            `class undefined {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    7,
				},
			},
		},
		{
			Code:            `(class undefined {})`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    8,
				},
			},
		},
		{
			Code:            `import undefined from 'foo';`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    8,
				},
			},
		},
		{
			Code:            `import { undefined } from 'foo';`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    10,
				},
			},
		},
		{
			Code:            `import { baz as undefined } from 'foo';`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    17,
				},
			},
		},
		{
			Code:            `import * as undefined from 'foo';`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "shadowingRestrictedName",
					Column:    13,
				},
			},
		},
	})
}

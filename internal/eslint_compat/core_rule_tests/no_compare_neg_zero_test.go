// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoCompareNegZeroRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-compare-neg-zero", []ValidTestCase{
		{Code: `x === 0`},
		{Code: `0 === x`},
		{Code: `x == 0`},
		{Code: `0 == x`},
		{Code: `x === '0'`},
		{Code: `'0' === x`},
		{Code: `x == '0'`},
		{Code: `'0' == x`},
		{Code: `x === '-0'`},
		{Code: `'-0' === x`},
		{Code: `x == '-0'`},
		{Code: `'-0' == x`},
		{Code: `x === -1`},
		{Code: `-1 === x`},
		{Code: `x < 0`},
		{Code: `0 < x`},
		{Code: `x <= 0`},
		{Code: `0 <= x`},
		{Code: `x > 0`},
		{Code: `0 > x`},
		{Code: `x >= 0`},
		{Code: `0 >= x`},
		{Code: `x != 0`},
		{Code: `0 != x`},
		{Code: `x !== 0`},
		{Code: `0 !== x`},
		{Code: `Object.is(x, -0)`},
	}, []InvalidTestCase{
		{
			Code: `x === -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 === x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `x == -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 == x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `x > -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 > x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `x >= -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 >= x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `x < -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 < x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `x <= -0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `-0 <= x`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

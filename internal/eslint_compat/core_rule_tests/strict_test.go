// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestStrictRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "strict", []ValidTestCase{
		{
			Code:    `foo();`,
			Options: "[\"never\"]",
		},
		{
			Code:    `function foo() { return; }`,
			Options: "[\"never\"]",
		},
		{
			Code:    `var foo = function() { return; };`,
			Options: "[\"never\"]",
		},
		{
			Code:    `foo(); 'use strict';`,
			Options: "[\"never\"]",
		},
		{
			Code:    `function foo() { bar(); 'use strict'; return; }`,
			Options: "[\"never\"]",
		},
		{
			Code:    `var foo = function() { { 'use strict'; } return; };`,
			Options: "[\"never\"]",
		},
		{
			Code:    `(function() { bar('use strict'); return; }());`,
			Options: "[\"never\"]",
		},
		{
			Code:            `var fn = x => 1;`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var fn = x => { return; };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `foo();`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{
			Code:    `// Intentionally empty`,
			Options: "[\"global\"]",
		},
		{
			Code:    `"use strict"; foo();`,
			Options: "[\"global\"]",
		},
		{
			Code:            `foo();`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{
			Code:    `'use strict'; function foo() { return; }`,
			Options: "[\"global\"]",
		},
		{
			Code:    `'use strict'; var foo = function() { return; };`,
			Options: "[\"global\"]",
		},
		{
			Code:    `'use strict'; function foo() { bar(); 'use strict'; return; }`,
			Options: "[\"global\"]",
		},
		{
			Code:    `'use strict'; var foo = function() { bar(); 'use strict'; return; };`,
			Options: "[\"global\"]",
		},
		{
			Code:    `'use strict'; function foo() { return function() { bar(); 'use strict'; return; }; }`,
			Options: "[\"global\"]",
		},
		{
			Code:            `'use strict'; var foo = () => { return () => { bar(); 'use strict'; return; }; }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function foo() { 'use strict'; return; }`,
			Options: "[\"function\"]",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{
			Code:            `var foo = function() { return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:    `var foo = function() { 'use strict'; return; }`,
			Options: "[\"function\"]",
		},
		{
			Code:    `function foo() { 'use strict'; return; } var bar = function() { 'use strict'; bar(); };`,
			Options: "[\"function\"]",
		},
		{
			Code:    `var foo = function() { 'use strict'; function bar() { return; } bar(); };`,
			Options: "[\"function\"]",
		},
		{
			Code:            `var foo = () => { 'use strict'; var bar = () => 1; bar(); };`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = () => { var bar = () => 1; bar(); };`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `class A { constructor() { } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { foo() { } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { foo() { function bar() { } } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(function() { 'use strict'; function foo(a = 0) { } }())`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function foo() { 'use strict'; return; }`,
			Options: "[\"safe\"]",
		},
		{
			Code:            `'use strict'; function foo() { return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `function foo() { return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{Code: `function foo() { 'use strict'; return; }`},
		{
			Code:            `'use strict'; function foo() { return; }`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
		},
		{
			Code:            `function foo() { return; }`,
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `function foo() { return; }`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{
			Code:            `'use strict'; class C { static { foo; } }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `'use strict'; class C { static { 'use strict'; } }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `'use strict'; class C { static { 'use strict'; 'use strict'; } }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { foo; } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { 'use strict'; } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { 'use strict'; 'use strict'; } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { foo; } }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { 'use strict'; } }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { 'use strict'; 'use strict'; } }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { 'use strict'; } }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":2022,\"sourceType\":\"module\"}",
		},
		{
			Code:            `class C { static { 'use strict'; } }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":2022,\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
		},
		{
			Code:            `'use strict'; module.exports = function identity (value) { return value; }`,
			LanguageOptions: "{\"sourceType\":\"commonjs\"}",
		},
		{
			Code:            `'use strict'; module.exports = function identity (value) { return value; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"sourceType\":\"commonjs\"}",
		},
	}, []InvalidTestCase{
		{
			Code:    `"use strict"; foo();`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
				},
			},
		},
		{
			Code:    `function foo() { 'use strict'; return; }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
				},
			},
		},
		{
			Code:    `var foo = function() { 'use strict'; return; };`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
				},
			},
		},
		{
			Code:    `function foo() { return function() { 'use strict'; return; }; }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
				},
			},
		},
		{
			Code:    `'use strict'; function foo() { "use strict"; return; }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
				},
				{
					MessageId: "never",
				},
			},
		},
		{
			Code:            `"use strict"; foo();`,
			Output:          ` foo();`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
				},
				{
					MessageId: "implied",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\",\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:    `foo();`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:    `function foo() { 'use strict'; return; }`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:    `var foo = function() { 'use strict'; return; }`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:            `var foo = () => { 'use strict'; return () => 1; }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:    `'use strict'; function foo() { 'use strict'; return; }`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:    `'use strict'; var foo = function() { 'use strict'; return; };`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:    `'use strict'; 'use strict'; foo();`,
			Output:  `'use strict';  foo();`,
			Options: "[\"global\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "multiple",
				},
			},
		},
		{
			Code:            `'use strict'; foo();`,
			Output:          ` foo();`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
				},
				{
					MessageId: "implied",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\",\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:    `'use strict'; foo();`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `'use strict'; (function() { 'use strict'; return true; }());`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `(function() { 'use strict'; function f() { 'use strict'; return } return true; }());`,
			Output:  `(function() { 'use strict'; function f() {  return } return true; }());`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessary",
				},
			},
		},
		{
			Code:    `(function() { return true; }());`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:            `(() => { return true; })();`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:            `(() => true)();`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `var foo = function() { foo(); 'use strict'; return; }; function bar() { foo(); 'use strict'; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `function foo() { 'use strict'; 'use strict'; return; }`,
			Output:  `function foo() { 'use strict';  return; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "multiple",
				},
			},
		},
		{
			Code:    `var foo = function() { 'use strict'; 'use strict'; return; }`,
			Output:  `var foo = function() { 'use strict';  return; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "multiple",
				},
			},
		},
		{
			Code:            `var foo = function() {  'use strict'; return; }`,
			Output:          `var foo = function() {   return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
				},
				{
					MessageId: "implied",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\",\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:    `function foo() { return function() { 'use strict'; return; }; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `var foo = function() { function bar() { 'use strict'; return; } return; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `function foo() { 'use strict'; return; } var bar = function() { return; };`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `var foo = function() { 'use strict'; return; }; function bar() { return; };`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:    `function foo() { 'use strict'; return function() { 'use strict'; 'use strict'; return; }; }`,
			Output:  `function foo() { 'use strict'; return function() {   return; }; }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessary",
				},
				{
					MessageId: "multiple",
				},
			},
		},
		{
			Code:    `var foo = function() { 'use strict'; function bar() { 'use strict'; 'use strict'; return; } }`,
			Output:  `var foo = function() { 'use strict'; function bar() {   return; } }`,
			Options: "[\"function\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessary",
				},
				{
					MessageId: "multiple",
				},
			},
		},
		{
			Code:            `var foo = () => { return; };`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:            `class A { constructor() { "use strict"; } }`,
			Output:          `class A { constructor() {  } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
				},
			},
		},
		{
			Code:            `class A { foo() { "use strict"; } }`,
			Output:          `class A { foo() {  } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
				},
			},
		},
		{
			Code:            `class A { foo() { function bar() { "use strict"; } } }`,
			Output:          `class A { foo() { function bar() {  } } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
				},
			},
		},
		{
			Code:            `class A { field = () => { "use strict"; } }`,
			Output:          `class A { field = () => {  } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
				},
			},
		},
		{
			Code:            `class A { field = function() { "use strict"; } }`,
			Output:          `class A { field = function() {  } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
				},
			},
		},
		{
			Code:    `'use strict'; function foo() { return; }`,
			Options: "[\"safe\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:            `function foo() { 'use strict'; return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
				},
				{
					MessageId: "implied",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\",\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
				{
					MessageId: "module",
				},
			},
		},
		{
			Code: `'use strict'; function foo() { return; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
				{
					MessageId: "function",
				},
			},
		},
		{
			Code: `function foo() { return; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "function",
				},
			},
		},
		{
			Code:            `function foo() { 'use strict'; return; }`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
				},
				{
					MessageId: "global",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
				},
				{
					MessageId: "implied",
				},
			},
		},
		{
			Code:            `'use strict'; function foo() { 'use strict'; return; }`,
			Output:          ` function foo() {  return; }`,
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\",\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
				},
				{
					MessageId: "module",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { 'use strict' }`,
			Options:         "[]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `(function() { 'use strict'; function foo(a = 0) { 'use strict' } }())`,
			Options:         "[]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { 'use strict' }`,
			Options:         "[]",
			LanguageOptions: "{\"ecmaVersion\":6,\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
			Errors: []InvalidTestCaseError{
				{MessageDescription: "Use the global form of 'use strict'."},
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `'use strict'; function foo(a = 0) { 'use strict' }`,
			Options:         "[]",
			LanguageOptions: "{\"ecmaVersion\":6,\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { 'use strict' }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { 'use strict' }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{MessageDescription: "Use the global form of 'use strict'."},
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `'use strict'; function foo(a = 0) { 'use strict' }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { 'use strict' }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `(function() { 'use strict'; function foo(a = 0) { 'use strict' } }())`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "nonSimpleParameterList",
				},
			},
		},
		{
			Code:            `function foo(a = 0) { }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "wrap",
				},
			},
		},
		{
			Code:            `(function() { function foo(a = 0) { } }())`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{MessageDescription: "Use the function form of 'use strict'."},
			},
		},
		{
			Code: `'use strict'; class C { static { function foo() { 
'use strict'; } } }`,
			Options:         "[\"global\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
					Line:      2,
				},
			},
		},
		{
			Code: `class C { static { function foo() { 
'use strict'; } } }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "never",
					Line:      2,
				},
			},
		},
		{
			Code: `class C { static { function foo() { 
'use strict'; } } }`,
			Output: `class C { static { function foo() { 
 } } }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":2022,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "module",
					Line:      2,
				},
			},
		},
		{
			Code: `class C { static { function foo() { 
'use strict'; } } }`,
			Output: `class C { static { function foo() { 
 } } }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"ecmaVersion\":2022,\"parserOptions\":{\"ecmaFeatures\":{\"impliedStrict\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "implied",
					Line:      2,
				},
			},
		},
		{
			Code: `function foo() {'use strict'; class C { static { function foo() { 
'use strict'; } } } }`,
			Output: `function foo() {'use strict'; class C { static { function foo() { 
 } } } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessary",
					Line:      2,
				},
			},
		},
		{
			Code: `class C { static { function foo() { 
'use strict'; } } }`,
			Output: `class C { static { function foo() { 
 } } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
					Line:      2,
				},
			},
		},
		{
			Code: `class C { static { function foo() { 
'use strict';
'use strict'; } } }`,
			Output: `class C { static { function foo() { 

 } } }`,
			Options:         "[\"function\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnecessaryInClasses",
					Line:      2,
				},
				{
					MessageId: "multiple",
					Line:      3,
				},
			},
		},
		{
			Code:            `module.exports = function identity (value) { return value; }`,
			Options:         "[\"safe\"]",
			LanguageOptions: "{\"sourceType\":\"commonjs\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
					Line:      1,
				},
			},
		},
		{
			Code:            `module.exports = function identity (value) { return value; }`,
			LanguageOptions: "{\"sourceType\":\"commonjs\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "global",
					Line:      1,
				},
			},
		},
	})
}

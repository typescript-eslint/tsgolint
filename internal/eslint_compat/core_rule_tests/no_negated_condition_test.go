// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoNegatedConditionRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-negated-condition", []ValidTestCase{
		{Code: `if (a) {}`},
		{Code: `if (a) {} else {}`},
		{Code: `if (!a) {}`},
		{Code: `if (!a) {} else if (b) {}`},
		{Code: `if (!a) {} else if (b) {} else {}`},
		{Code: `if (a == b) {}`},
		{Code: `if (a == b) {} else {}`},
		{Code: `if (a != b) {}`},
		{Code: `if (a != b) {} else if (b) {}`},
		{Code: `if (a != b) {} else if (b) {} else {}`},
		{Code: `if (a !== b) {}`},
		{Code: `if (a === b) {} else {}`},
		{Code: `a ? b : c`},
	}, []InvalidTestCase{
		{
			Code: `if (!a) {;} else {;}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
		{
			Code: `if (a != b) {;} else {;}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
		{
			Code: `if (a !== b) {;} else {;}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
		{
			Code: `!a ? b : c`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
		{
			Code: `a != b ? c : d`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
		{
			Code: `a !== b ? c : d`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedNegated",
				},
			},
		},
	})
}

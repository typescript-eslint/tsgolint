// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoVoidRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"sourceType\":\"script\"}}", "no-void", []ValidTestCase{
		{Code: `var foo = bar()`},
		{Code: `foo.void()`},
		{Code: `foo.void = bar`},
		{Code: `delete foo;`},
		{
			Code:    `void 0`,
			Options: "[{\"allowAsStatement\":true}]",
		},
		{
			Code:    `void(0)`,
			Options: "[{\"allowAsStatement\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `void 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
		{
			Code:    `void 0`,
			Options: "[{}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
		{
			Code:    `void 0`,
			Options: "[{\"allowAsStatement\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
		{
			Code: `void(0)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
		{
			Code: `var foo = void 0`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
		{
			Code:    `var foo = void 0`,
			Options: "[{\"allowAsStatement\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noVoid",
				},
			},
		},
	})
}

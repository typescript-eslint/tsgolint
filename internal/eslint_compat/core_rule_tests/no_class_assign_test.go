// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoClassAssignRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":6}}", "no-class-assign", []ValidTestCase{
		{Code: `class A { } foo(A);`},
		{Code: `let A = class A { }; foo(A);`},
		{Code: `class A { b(A) { A = 0; } }`},
		{Code: `class A { b() { let A; A = 0; } }`},
		{Code: `let A = class { b() { A = 0; } }`},
		{Code: `var x = 0; x = 1;`},
		{Code: `let x = 0; x = 1;`},
		{Code: `const x = 0; x = 1;`},
		{Code: `function x() {} x = 1;`},
		{Code: `function foo(x) { x = 1; }`},
		{Code: `try {} catch (x) { x = 1; }`},
	}, []InvalidTestCase{
		{
			Code: `class A { } A = 0;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `class A { } ({A} = 0);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `class A { } ({b: A = 0} = {});`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `A = 0; class A { }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `class A { b() { A = 0; } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `let A = class A { b() { A = 0; } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
				},
			},
		},
		{
			Code: `class A { } A = 0; A = 1;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "class",
					Line:      1,
					Column:    13,
				},
				{
					MessageId: "class",
					Line:      1,
					Column:    20,
				},
			},
		},
	})
}

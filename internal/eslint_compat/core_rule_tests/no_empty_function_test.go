// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoEmptyFunctionRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"parser\":{\"version\":\"8.30.1\",\"meta\":{\"name\":\"typescript-eslint/parser\",\"version\":\"8.30.1\"}}}}", "no-empty-function", []ValidTestCase{
		{
			Code: `class A { constructor(public param: string) {} }`,
		},
		{
			Code: `class A { constructor(private param: string) {} }`,
		},
		{
			Code: `class A { constructor(protected param: string) {} }`,
		},
		{
			Code: `class A { constructor(readonly param: string) {} }`,
		},
		{
			Code:            `function foo() { bar(); }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function foo() { /* empty */ }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `function foo() {
    // empty
}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function foo() {} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function(param: string) { bar(); };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function(param: string) { /* empty */ };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = function(param: string) {
    // empty
};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {foo: function(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = (param: string) => { bar(); };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = (param: string) => { /* empty */ };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = (param: string) => {
    // empty
};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function* foo(param: string) { bar(); }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function* foo(param: string) { /* empty */ }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `function* foo(param: string) {
    // empty
}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function* foo(param: string) {} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function*(param: string) { bar(); };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function*(param: string) { /* empty */ };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = function*(param: string) {
    // empty
};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function*(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function*(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {foo: function*(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { private foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { protected foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { static foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { static foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { static foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private static foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private static foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { private static foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private static foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected static foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected static foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { protected static foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected static foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {static foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {private static foo() { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {private static foo() { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {private static foo() {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {protected static foo() { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {protected static foo() { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {protected static foo() {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B { @decorator() foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { @decorator() foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { @decorator() foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class { @decorator() foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C { override foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { @decorator() override foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { @decorator() override foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C { @decorator() override foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {*foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {*foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {*foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { *foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { *foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { *foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static *foo(param: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static *foo(param: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {static *foo(param: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {private static *foo() { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {private static *foo() { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {private static *foo() {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {private static *foo() {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {protected static *foo() { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {protected static *foo() { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {protected static *foo() {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {*foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {*foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {*foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static *foo(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static *foo(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {static *foo(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {static get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {static get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {@decorator() get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {@decorator() static get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {@decorator() get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {@decorator() static get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B {override get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B {static override get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class extends B {override get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class extends B {static override get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const obj = {set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {static set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {static set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {@decorator() set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A {@decorator() static set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {@decorator() set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {@decorator() static set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B {override set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B {static override set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class extends B {override set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class extends B {static override set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { constructor(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { constructor(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { constructor(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { private constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { private constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B { private constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { private constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { private constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { protected constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { protected constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B { protected constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { protected constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { protected constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {constructor(param: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {constructor(param: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class {constructor(param: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { private constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { private constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class { private constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { protected constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { protected constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class { protected constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = { async method(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = { async method(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = { async method(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `async function a(param: string){ bar(); }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `async function a(param: string){ /* empty */ }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `async function a(param: string){
    // empty
}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `async function a(param: string){} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async function(param: string) { bar(); }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async function(param: string) { /* empty */ }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = async function(param: string) {
    // empty
}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { async foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { async foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { async foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() async foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() async foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { @decorator() async foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override async foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override async foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B { override async foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async (): Promise<void> => { bar(); };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async (): Promise<void> => { /* empty */ };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const foo = async (): Promise<void> => {
    // empty
};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { private constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { private constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { private constructor() { bar(); } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { private constructor() { /* empty */ } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class { private constructor() {
    // empty
} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected constructor() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected constructor() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { protected constructor() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { protected constructor() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { protected constructor() { bar(); } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { protected constructor() { /* empty */ } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class { protected constructor() {
    // empty
} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A { @decorator() foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { @decorator() foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { @decorator() foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const A = class { @decorator() foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B {@decorator() get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B {@decorator() static get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class {@decorator() get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class {@decorator() static get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B {@decorator() set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B {@decorator() static set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class {@decorator() set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class {@decorator() static set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() async foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() async foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B { @decorator() async foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { @decorator() override foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { @decorator() override foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B { @decorator() override foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C {override get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override get foo(): string { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override get foo(): string { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C {static override get foo(): string {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class extends C {override get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override get foo(): string { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override get foo(): string { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class extends C {static override get foo(): string {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C {override set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override set foo(value: string) { bar(); }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override set foo(value: string) { /* empty */ }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C {static override set foo(value: string) {
    // empty
}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class extends C {override set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) { bar(); }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) { /* empty */ }};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const B = class extends C {static override set foo(value: string) {
    // empty
}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override async foo(param: string) { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override async foo(param: string) { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class B extends C { override async foo(param: string) {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends D { @decorator() override foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends D { @decorator() override foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class C extends D { @decorator() override foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override foo() { bar(); } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override foo() { /* empty */ } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `class A extends B { override foo() {
    // empty
} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
	}, []InvalidTestCase{
		{
			Code:            `function foo() {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function foo() {} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function(param: string) {}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = (param: string) => {}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `function* foo(param: string) {} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = function*(param: string) {}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo: function*(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { static foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private static foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected static foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {private static foo() {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {protected static foo() {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { @decorator() foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { @decorator() override foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {*foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { *foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static *foo(param: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {private static *foo() {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {protected static *foo() {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {*foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static *foo(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const obj = {set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {static set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {static set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A {@decorator() static set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {@decorator() static set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {override set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B {static override set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {override set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class extends B {static override set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { constructor(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { private constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { protected constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class {constructor(param: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { private constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class { protected constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = { async method(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `async function a(param: string){} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async function(param: string) {} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { async foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() async foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override async foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const foo = async (): Promise<void> => {}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { private constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { private constructor() {} }; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { protected constructor() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { protected constructor() {} }; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A { @decorator() foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const A = class { @decorator() foo() {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static get foo(): string {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static get foo(): string {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B {@decorator() static set foo(value: string) {}} // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class {@decorator() static set foo(value: string) {}}; // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B { @decorator() async foo(param: string) {} } // allow: overrideMethods`,
			Options:         "[{\"allow\":[\"overrideMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { @decorator() override foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override get foo(): string {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override get foo(): string {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {override set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C {static override set foo(value: string) {}} // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {override set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `const B = class extends C {static override set foo(value: string) {}}; // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: methods`,
			Options:         "[{\"allow\":[\"methods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class B extends C { override async foo(param: string) {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class C extends D { @decorator() override foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: functions`,
			Options:         "[{\"allow\":[\"functions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: arrowFunctions`,
			Options:         "[{\"allow\":[\"arrowFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: generatorFunctions`,
			Options:         "[{\"allow\":[\"generatorFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: generatorMethods`,
			Options:         "[{\"allow\":[\"generatorMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: getters`,
			Options:         "[{\"allow\":[\"getters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: setters`,
			Options:         "[{\"allow\":[\"setters\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: constructors`,
			Options:         "[{\"allow\":[\"constructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: asyncFunctions`,
			Options:         "[{\"allow\":[\"asyncFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: asyncMethods`,
			Options:         "[{\"allow\":[\"asyncMethods\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: privateConstructors`,
			Options:         "[{\"allow\":[\"privateConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: protectedConstructors`,
			Options:         "[{\"allow\":[\"protectedConstructors\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `class A extends B { override foo() {} } // allow: decoratedFunctions`,
			Options:         "[{\"allow\":[\"decoratedFunctions\"]}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

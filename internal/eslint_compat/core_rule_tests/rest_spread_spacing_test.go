// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestRestSpreadSpacingRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":6}}", "rest-spread-spacing", []ValidTestCase{
		{Code: `fn(...args)`},
		{Code: `fn(...(args))`},
		{Code: `fn(...( args ))`},
		{
			Code:    `fn(...args)`,
			Options: "[\"never\"]",
		},
		{
			Code:    `fn(... args)`,
			Options: "[\"always\"]",
		},
		{
			Code:    `fn(...	args)`,
			Options: "[\"always\"]",
		},
		{
			Code: `fn(...
args)`,
			Options: "[\"always\"]",
		},
		{Code: `[...arr, 4, 5, 6]`},
		{Code: `[...(arr), 4, 5, 6]`},
		{Code: `[...( arr ), 4, 5, 6]`},
		{
			Code:    `[...arr, 4, 5, 6]`,
			Options: "[\"never\"]",
		},
		{
			Code:    `[... arr, 4, 5, 6]`,
			Options: "[\"always\"]",
		},
		{
			Code:    `[...	arr, 4, 5, 6]`,
			Options: "[\"always\"]",
		},
		{
			Code: `[...
arr, 4, 5, 6]`,
			Options: "[\"always\"]",
		},
		{Code: `let [a, b, ...arr] = [1, 2, 3, 4, 5];`},
		{
			Code:    `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"never\"]",
		},
		{
			Code:    `let [a, b, ... arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"always\"]",
		},
		{
			Code:    `let [a, b, ...	arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"always\"]",
		},
		{
			Code: `let [a, b, ...
arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"always\"]",
		},
		{
			Code:            `let n = { x, y, ...z };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let n = { x, y, ...(z) };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let n = { x, y, ...( z ) };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let n = { x, y, ...z };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let n = { x, y, ... z };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let n = { x, y, ...	z };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `let n = { x, y, ...
z };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let { x, y, ... z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `let { x, y, ...	z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `let { x, y, ...
z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
	}, []InvalidTestCase{
		{
			Code:   `fn(... args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code:   `fn(...  args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 9,
				},
			},
		},
		{
			Code:   `fn(...	args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code:   `fn(... 	 args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 10,
				},
			},
		},
		{
			Code: `fn(...
args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `fn(...
    args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   2,
					EndColumn: 5,
				},
			},
		},
		{
			Code: `fn(...
	args)`,
			Output: `fn(...args)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   2,
					EndColumn: 2,
				},
			},
		},
		{
			Code:    `fn(... args)`,
			Output:  `fn(...args)`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code:    `fn(...	args)`,
			Output:  `fn(...args)`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code: `fn(...
args)`,
			Output:  `fn(...args)`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `fn(...args)`,
			Output:  `fn(... args)`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 7,
				},
			},
		},
		{
			Code:   `fn(... (args))`,
			Output: `fn(...(args))`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code:   `fn(... ( args ))`,
			Output: `fn(...( args ))`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
			},
		},
		{
			Code:    `fn(...(args))`,
			Output:  `fn(... (args))`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 7,
				},
			},
		},
		{
			Code:    `fn(...( args ))`,
			Output:  `fn(... ( args ))`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 7,
				},
			},
		},
		{
			Code:   `[... arr, 4, 5, 6]`,
			Output: `[...arr, 4, 5, 6]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code:   `[...	arr, 4, 5, 6]`,
			Output: `[...arr, 4, 5, 6]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `[...
arr, 4, 5, 6]`,
			Output: `[...arr, 4, 5, 6]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `[... arr, 4, 5, 6]`,
			Output:  `[...arr, 4, 5, 6]`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code:    `[...	arr, 4, 5, 6]`,
			Output:  `[...arr, 4, 5, 6]`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `[...
arr, 4, 5, 6]`,
			Output:  `[...arr, 4, 5, 6]`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `[...arr, 4, 5, 6]`,
			Output:  `[... arr, 4, 5, 6]`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 5,
				},
			},
		},
		{
			Code:   `[... (arr), 4, 5, 6]`,
			Output: `[...(arr), 4, 5, 6]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code:   `[... ( arr ), 4, 5, 6]`,
			Output: `[...( arr ), 4, 5, 6]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code:    `[...(arr), 4, 5, 6]`,
			Output:  `[... (arr), 4, 5, 6]`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 5,
				},
			},
		},
		{
			Code:    `[...( arr ), 4, 5, 6]`,
			Output:  `[... ( arr ), 4, 5, 6]`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 5,
				},
			},
		},
		{
			Code:   `let [a, b, ... arr] = [1, 2, 3, 4, 5];`,
			Output: `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code:   `let [a, b, ...	arr] = [1, 2, 3, 4, 5];`,
			Output: `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `let [a, b, ...
arr] = [1, 2, 3, 4, 5];`,
			Output: `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `let [a, b, ... arr] = [1, 2, 3, 4, 5];`,
			Output:  `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code:    `let [a, b, ...	arr] = [1, 2, 3, 4, 5];`,
			Output:  `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `let [a, b, ...
arr] = [1, 2, 3, 4, 5];`,
			Output:  `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `let [a, b, ...arr] = [1, 2, 3, 4, 5];`,
			Output:  `let [a, b, ... arr] = [1, 2, 3, 4, 5];`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    12,
					EndLine:   1,
					EndColumn: 15,
				},
			},
		},
		{
			Code:            `let n = { x, y, ... z };`,
			Output:          `let n = { x, y, ...z };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `let n = { x, y, ...	z };`,
			Output:          `let n = { x, y, ...z };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code: `let n = { x, y, ...
z };`,
			Output:          `let n = { x, y, ...z };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:            `let n = { x, y, ... z };`,
			Output:          `let n = { x, y, ...z };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `let n = { x, y, ...	z };`,
			Output:          `let n = { x, y, ...z };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code: `let n = { x, y, ...
z };`,
			Output:          `let n = { x, y, ...z };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:            `let n = { x, y, ...z };`,
			Output:          `let n = { x, y, ... z };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `let n = { x, y, ... (z) };`,
			Output:          `let n = { x, y, ...(z) };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `let n = { x, y, ... ( z ) };`,
			Output:          `let n = { x, y, ...( z ) };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `let n = { x, y, ...(z) };`,
			Output:          `let n = { x, y, ... (z) };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `let n = { x, y, ...( z ) };`,
			Output:          `let n = { x, y, ... ( z ) };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `let { x, y, ... z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
			},
		},
		{
			Code:            `let { x, y, ...	z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
			},
		},
		{
			Code: `let { x, y, ...
z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:            `let { x, y, ... z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
			},
		},
		{
			Code:            `let { x, y, ...	z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
			},
		},
		{
			Code: `let { x, y, ...
z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
					Line:      1,
					Column:    16,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:            `let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Output:          `let { x, y, ... z } = { x: 1, y: 2, a: 3, b: 4 };`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedWhitespace",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
	})
}

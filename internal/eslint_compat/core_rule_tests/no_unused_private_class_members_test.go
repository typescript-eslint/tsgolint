// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoUnusedPrivateClassMembersRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":2022}}", "no-unused-private-class-members", []ValidTestCase{
		{Code: `class Foo {}`},
		{Code: `class Foo {
    publicMember = 42;
}`},
		{Code: `class Foo {
    #usedMember = 42;
    method() {
        return this.#usedMember;
    }
}`},
		{Code: `class Foo {
    #usedMember = 42;
    anotherMember = this.#usedMember;
}`},
		{Code: `class Foo {
    #usedMember = 42;
    foo() {
        anotherMember = this.#usedMember;
    }
}`},
		{Code: `class C {
    #usedMember;

    foo() {
        bar(this.#usedMember += 1);
    }
}`},
		{Code: `class Foo {
    #usedMember = 42;
    method() {
        return someGlobalMethod(this.#usedMember);
    }
}`},
		{Code: `class C {
    #usedInOuterClass;

    foo() {
        return class {};
    }

    bar() {
        return this.#usedInOuterClass;
    }
}`},
		{Code: `class Foo {
    #usedInForInLoop;
    method() {
        for (const bar in this.#usedInForInLoop) {

        }
    }
}`},
		{Code: `class Foo {
    #usedInForOfLoop;
    method() {
        for (const bar of this.#usedInForOfLoop) {

        }
    }
}`},
		{Code: `class Foo {
    #usedInAssignmentPattern;
    method() {
        [bar = 1] = this.#usedInAssignmentPattern;
    }
}`},
		{Code: `class Foo {
    #usedInArrayPattern;
    method() {
        [bar] = this.#usedInArrayPattern;
    }
}`},
		{Code: `class Foo {
    #usedInAssignmentPattern;
    method() {
        [bar] = this.#usedInAssignmentPattern;
    }
}`},
		{Code: `class C {
    #usedInObjectAssignment;

    method() {
        ({ [this.#usedInObjectAssignment]: a } = foo);
    }
}`},
		{Code: `class C {
    set #accessorWithSetterFirst(value) {
        doSomething(value);
    }
    get #accessorWithSetterFirst() {
        return something();
    }
    method() {
        this.#accessorWithSetterFirst += 1;
    }
}`},
		{Code: `class Foo {
    set #accessorUsedInMemberAccess(value) {}

    method(a) {
        [this.#accessorUsedInMemberAccess] = a;
    }
}`},
		{Code: `class C {
    get #accessorWithGetterFirst() {
        return something();
    }
    set #accessorWithGetterFirst(value) {
        doSomething(value);
    }
    method() {
        this.#accessorWithGetterFirst += 1;
    }
}`},
		{Code: `class C {
    #usedInInnerClass;

    method(a) {
        return class {
            foo = a.#usedInInnerClass;
        }
    }
}`},
		{Code: `class Foo {
    #usedMethod() {
        return 42;
    }
    anotherMethod() {
        return this.#usedMethod();
    }
}`},
		{Code: `class C {
    set #x(value) {
        doSomething(value);
    }

    foo() {
        this.#x = 1;
    }
}`},
	}, []InvalidTestCase{
		{
			Code: `class Foo {
    #unusedMember = 5;
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class First {}
class Second {
    #unusedMemberInSecondClass = 5;
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class First {
    #unusedMemberInFirstClass = 5;
}
class Second {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class First {
    #firstUnusedMemberInSameClass = 5;
    #secondUnusedMemberInSameClass = 5;
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #usedOnlyInWrite = 5;
    method() {
        this.#usedOnlyInWrite = 42;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #usedOnlyInWriteStatement = 5;
    method() {
        this.#usedOnlyInWriteStatement += 42;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class C {
    #usedOnlyInIncrement;

    foo() {
        this.#usedOnlyInIncrement++;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class C {
    #unusedInOuterClass;

    foo() {
        return class {
            #unusedInOuterClass;

            bar() {
                return this.#unusedInOuterClass;
            }
        };
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class C {
    #unusedOnlyInSecondNestedClass;

    foo() {
        return class {
            #unusedOnlyInSecondNestedClass;

            bar() {
                return this.#unusedOnlyInSecondNestedClass;
            }
        };
    }

    baz() {
        return this.#unusedOnlyInSecondNestedClass;
    }

    bar() {
        return class {
            #unusedOnlyInSecondNestedClass;
        }
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedMethod() {}
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedMethod() {}
    #usedMethod() {
        return 42;
    }
    publicMethod() {
        return this.#usedMethod();
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    set #unusedSetter(value) {}
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedForInLoop;
    method() {
        for (this.#unusedForInLoop in bar) {

        }
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedForOfLoop;
    method() {
        for (this.#unusedForOfLoop of bar) {

        }
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedInDestructuring;
    method() {
        ({ x: this.#unusedInDestructuring } = bar);
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedInRestPattern;
    method() {
        [...this.#unusedInRestPattern] = bar;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedInAssignmentPattern;
    method() {
        [this.#unusedInAssignmentPattern = 1] = bar;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class Foo {
    #unusedInAssignmentPattern;
    method() {
        [this.#unusedInAssignmentPattern] = bar;
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
				},
			},
		},
		{
			Code: `class C {
    #usedOnlyInTheSecondInnerClass;

    method(a) {
        return class {
            #usedOnlyInTheSecondInnerClass;

            method2(b) {
                foo = b.#usedOnlyInTheSecondInnerClass;
            }

            method3(b) {
                foo = b.#usedOnlyInTheSecondInnerClass;
            }
        }
    }
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unusedPrivateClassMember",
					Line:      2,
				},
			},
		},
	})
}

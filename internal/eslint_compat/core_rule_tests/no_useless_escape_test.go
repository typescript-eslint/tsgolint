// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoUselessEscapeRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "no-useless-escape", []ValidTestCase{
		{Code: `var foo = /\./`},
		{Code: `var foo = /\//g`},
		{Code: `var foo = /""/`},
		{Code: `var foo = /''/`},
		{Code: `var foo = /([A-Z])\t+/g`},
		{Code: `var foo = /([A-Z])\n+/g`},
		{Code: `var foo = /([A-Z])\v+/g`},
		{Code: `var foo = /\D/`},
		{Code: `var foo = /\W/`},
		{Code: `var foo = /\w/`},
		{Code: `var foo = /\\/g`},
		{Code: `var foo = /\w\$\*\./`},
		{Code: `var foo = /\^\+\./`},
		{Code: `var foo = /\|\}\{\./`},
		{Code: `var foo = /]\[\(\)\//`},
		{Code: `var foo = "\x123"`},
		{Code: `var foo = "\u00a9"`},
		{Code: `var foo = "\377"`},
		{Code: `var foo = "\""`},
		{Code: `var foo = "xs\u2111"`},
		{Code: `var foo = "foo \\ bar";`},
		{Code: `var foo = "\t";`},
		{Code: `var foo = "foo \b bar";`},
		{Code: `var foo = '\n';`},
		{Code: `var foo = 'foo \r bar';`},
		{Code: `var foo = '\v';`},
		{Code: `var foo = '\f';`},
		{Code: `var foo = '\
';`},
		{Code: `var foo = '\` + "\r" + `
';`},
		{
			Code:            `<foo attr="\d"/>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> Testing: \ </div>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> Testing: &#x5C </div>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<foo attr='\d'></foo>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<> Testing: \ </>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<> Testing: &#x5C </>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            "var foo = `\\x123`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\u00a9`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `xs\\u2111`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `foo \\\\ bar`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\t`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `foo \\b bar`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\n`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `foo \\r bar`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\v`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\f`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = ` + "`" + `\
` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = ` + "`" + `\` + "\r" + `
` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo} \\x123`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo} \\u00a9`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo} xs\\u2111`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo} \\\\ ${bar}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo} \\b ${bar}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo}\\t`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo}\\n`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo}\\r`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo}\\v`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `${foo}\\f`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = ` + "`" + `${foo}\
` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = ` + "`" + `${foo}\` + "\r" + `
` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\``",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\`${foo}\\``",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `\\${{${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = `$\\{{${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = String.raw`\\.`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "var foo = myFunc`\\.`",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `var foo = /[\d]/`},
		{Code: `var foo = /[a\-b]/`},
		{Code: `var foo = /foo\?/`},
		{Code: `var foo = /example\.com/`},
		{Code: `var foo = /foo\|bar/`},
		{Code: `var foo = /\^bar/`},
		{Code: `var foo = /[\^bar]/`},
		{Code: `var foo = /\(bar\)/`},
		{Code: `var foo = /[[\]]/`},
		{Code: `var foo = /[[]\./`},
		{Code: `var foo = /[\]\]]/`},
		{Code: `var foo = /\[abc]/`},
		{Code: `var foo = /\[foo\.bar]/`},
		{Code: `var foo = /vi/m`},
		{Code: `var foo = /\B/`},
		{Code: `var foo = /\0/`},
		{Code: `var foo = /\1/`},
		{Code: `var foo = /(a)\1/`},
		{Code: `var foo = /(a)\12/`},
		{Code: `var foo = /[\0]/`},
		{Code: `var foo = 'foo \  bar'`},
		{Code: `var foo = 'foo \  bar'`},
		{Code: `/]/`},
		{Code: `/\]/`},
		{
			Code:            `/\]/u`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `var foo = /foo\]/`},
		{Code: `var foo = /[[]\]/`},
		{Code: `var foo = /\[foo\.bar\]/`},
		{
			Code:            `var foo = /(?<a>)\k<a>/`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var foo = /(\\?<a>)/`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var foo = /\p{ASCII}/u`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var foo = /\P{ASCII}/u`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var foo = /[\p{ASCII}]/u`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var foo = /[\P{ASCII}]/u`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{Code: `/[^^]/`},
		{
			Code:            `/[^^]/u`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
		},
		{
			Code:            `/[\q{abc}]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\(]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\)]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\{]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\]]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\}]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\/]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\-]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\|]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\$$]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\&&]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\!!]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\##]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\%%]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\**]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\++]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\,,]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\..]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\::]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\;;]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\<<]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\==]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\>>]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\??]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\@@]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            "/[\\``]/v",
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\~~]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[^\^^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[_\^^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[$\$]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[&\&]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[!\!]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[#\#]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[%\%]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[*\*]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[+\+]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[,\,]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[.\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[:\:]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[;\;]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[<\<]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[=\=]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[>\>]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[?\?]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[@\@]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            "/[`\\`]/v",
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[~\~]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[^^\^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[_^\^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\&&&\&]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[[\-]\-]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
		{
			Code:            `/[\^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
		},
	}, []InvalidTestCase{
		{
			Code: `var foo = /\#/;`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /#/;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /\\#/;`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /\;/;`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\;.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /;/;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /\\;/;`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "\'";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\'.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "'";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "\\'";`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "\#/";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "#/";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "\\#/";`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "\a"`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "a"`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "\\a"`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "\B";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\B.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "B";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "\\B";`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "\@";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\@.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "@";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "\\@";`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = "foo \a bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               1,
					Column:             16,
					EndColumn:          17,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = "foo a bar";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = "foo \\a bar";`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = '\"';`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\\".",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = '"';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\\"';`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = '\#';`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = '#';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\\#';`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = '\$';`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\$.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = '$';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\\$';`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = '\p';`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\p.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = 'p';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\\p';`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = '\p\a\@';`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\p.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = 'p\a\@';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\\p\a\@';`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               1,
					Column:             14,
					EndColumn:          15,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = '\pa\@';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\p\\a\@';`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\@.",
					Line:               1,
					Column:             16,
					EndColumn:          17,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = '\p\a@';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = '\p\a\\@';`,
						},
					},
				},
			},
		},
		{
			Code:            `<foo attr={"\d"}/>`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\d.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `<foo attr={"d"}/>`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `<foo attr={"\\d"}/>`,
						},
					},
				},
			},
		},
		{
			Code: "var foo = '\\`';",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\`.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = '`';",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = '\\\\`';",
						},
					},
				},
			},
		},
		{
			Code:            `var foo = ` + "`" + `\"` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\\".",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = ` + "`" + `"` + "`" + `;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = ` + "`" + `\\"` + "`" + `;`,
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\'`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\'.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `'`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\'`;",
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\#`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `#`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\#`;",
						},
					},
				},
			},
		},
		{
			Code: "var foo = '\\`foo\\`';",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\`.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = '`foo\\`';",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = '\\\\`foo\\`';",
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\`.",
					Line:               1,
					Column:             17,
					EndColumn:          18,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = '\\`foo`';",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = '\\`foo\\\\`';",
						},
					},
				},
			},
		},
		{
			Code:            `var foo = ` + "`" + `\"${foo}\"` + "`" + `;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\\".",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = ` + "`" + `"${foo}\"` + "`" + `;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = ` + "`" + `\\"${foo}\"` + "`" + `;`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\\".",
					Line:               1,
					Column:             20,
					EndColumn:          21,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = ` + "`" + `\"${foo}"` + "`" + `;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = ` + "`" + `\"${foo}\\"` + "`" + `;`,
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\'${foo}\\'`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\'.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `'${foo}\\'`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\'${foo}\\'`;",
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\'.",
					Line:               1,
					Column:             20,
					EndColumn:          21,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `\\'${foo}'`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\'${foo}\\\\'`;",
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\#${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `#${foo}`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\#${foo}`;",
						},
					},
				},
			},
		},
		{
			Code:            `let foo = '\ ';`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\ .",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `let foo = ' ';`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `let foo = '\\ ';`,
						},
					},
				},
			},
		},
		{
			Code:            `let foo = /\ /;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\ .",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `let foo = / /;`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `let foo = /\\ /;`,
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\$\\{{${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\$.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `$\\{{${foo}`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\$\\{{${foo}`;",
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `\\$a${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\$.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `$a${foo}`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `\\\\$a${foo}`;",
						},
					},
				},
			},
		},
		{
			Code:            "var foo = `a\\{{${foo}`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\{.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "var foo = `a{{${foo}`;",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "var foo = `a\\\\{{${foo}`;",
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[ab\-]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             15,
					EndColumn:          16,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[ab-]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[ab\\-]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\-ab]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[-ab]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\-ab]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[ab\?]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\?.",
					Line:               1,
					Column:             15,
					EndColumn:          16,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[ab?]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[ab\\?]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[ab\.]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             15,
					EndColumn:          16,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[ab.]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[ab\\.]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[a\|b]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\|.",
					Line:               1,
					Column:             14,
					EndColumn:          15,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[a|b]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[a\\|b]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /\-/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /-/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /\\-/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\-]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[-]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\-]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[ab\$]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\$.",
					Line:               1,
					Column:             15,
					EndColumn:          16,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[ab$]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[ab\\$]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\(paren]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\(.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[(paren]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\(paren]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\[]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\[.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[[]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\[]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\/]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\/.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[/]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\/]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[\B]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\B.",
					Line:               1,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[B]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[\\B]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[a][\-b]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             16,
					EndColumn:          17,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[a][-b]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[a][\\-b]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /\-[]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\-.",
					Line:               1,
					Column:             12,
					EndColumn:          13,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /-[]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /\\-[]/`,
						},
					},
				},
			},
		},
		{
			Code: `var foo = /[a\^]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\^.",
					Line:               1,
					Column:             14,
					EndColumn:          15,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `var foo = /[a^]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `var foo = /[a\\^]/`,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `multiline template
literal with useless \escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\e.",
					Line:               2,
					Column:             22,
					EndColumn:          23,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `multiline template
literal with useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `multiline template
literal with useless \\escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `multiline template` + "\r" + `
literal with useless \escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\e.",
					Line:               2,
					Column:             22,
					EndColumn:          23,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `multiline template` + "\r" + `
literal with useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `multiline template` + "\r" + `
literal with useless \\escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `template literal with line continuation \
and useless \escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\e.",
					Line:               2,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `template literal with line continuation \
and useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `template literal with line continuation \
and useless \\escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `template literal with line continuation \` + "\r" + `
and useless \escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\e.",
					Line:               2,
					Column:             13,
					EndColumn:          14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `template literal with line continuation \` + "\r" + `
and useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `template literal with line continuation \` + "\r" + `
and useless \\escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `template literal with mixed linebreaks ` + "\r" + `` + "\r" + `

\and useless escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               4,
					Column:             1,
					EndColumn:          2,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `template literal with mixed linebreaks ` + "\r" + `` + "\r" + `

and useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `template literal with mixed linebreaks ` + "\r" + `` + "\r" + `

\\and useless escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code: `` + "`" + `template literal with mixed linebreaks in line continuations \
\` + "\r" + `\` + "\r" + `
\and useless escape` + "`" + ``,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               4,
					Column:             1,
					EndColumn:          2,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output: `` + "`" + `template literal with mixed linebreaks in line continuations \
\` + "\r" + `\` + "\r" + `
and useless escape` + "`" + ``,
						},
						{
							MessageId: "escapeBackslash",
							Output: `` + "`" + `template literal with mixed linebreaks in line continuations \
\` + "\r" + `\` + "\r" + `
\\and useless escape` + "`" + ``,
						},
					},
				},
			},
		},
		{
			Code:            "`\\a```",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\a.",
					Line:               1,
					Column:             2,
					EndColumn:          3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "`a```",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "`\\\\a```",
						},
					},
				},
			},
		},
		{
			Code: `"use\ strict";`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\ .",
					Line:               1,
					Column:             5,
					EndColumn:          6,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscapeDoNotKeepSemantics",
							Output:    `"use strict";`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `"use\\ strict";`,
						},
					},
				},
			},
		},
		{
			Code:            `({ foo() { "foo"; "bar"; "ba\z" } })`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\z.",
					Line:               1,
					Column:             29,
					EndColumn:          30,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscapeDoNotKeepSemantics",
							Output:    `({ foo() { "foo"; "bar"; "baz" } })`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `({ foo() { "foo"; "bar"; "ba\\z" } })`,
						},
					},
				},
			},
		},
		{
			Code: `/[^\^]/`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\^.",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[^^]/`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[^\\^]/`,
						},
					},
				},
			},
		},
		{
			Code:            `/[^\^]/u`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\^.",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[^^]/u`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[^\\^]/u`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\$]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\$.",
					Line:               1,
					Column:             3,
					EndColumn:          4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[$]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\$]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\&\&]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\&.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[&\&]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\&\&]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\!\!]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\!.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[!\!]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\!\!]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\#\#]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\#.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[#\#]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\#\#]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\%\%]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\%.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[%\%]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\%\%]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\*\*]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\*.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[*\*]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\*\*]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\+\+]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\+.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[+\+]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\+\+]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\,\,]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\,.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[,\,]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\,\,]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\.\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[.\.]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\.\.]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\:\:]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\:.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[:\:]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\:\:]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\;\;]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\;.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[;\;]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\;\;]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\<\<]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\<.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[<\<]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\<\<]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\=\=]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\=.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[=\=]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\=\=]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\>\>]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\>.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[>\>]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\>\>]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\?\?]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\?.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[?\?]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\?\?]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\@\@]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\@.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[@\@]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\@\@]/v`,
						},
					},
				},
			},
		},
		{
			Code:            "/[\\`\\`]/v",
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\`.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    "/[`\\`]/v",
						},
						{
							MessageId: "escapeBackslash",
							Output:    "/[\\\\`\\`]/v",
						},
					},
				},
			},
		},
		{
			Code:            `/[\~\~]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\~.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[~\~]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\~\~]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[^\^\^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\^.",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[^^\^]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[^\\^\^]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[_\^\^]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\^.",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[_^\^]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[_\\^\^]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\&\&&\&]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\&.",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[&\&&\&]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[\\&\&&\&]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\p{ASCII}--\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\p{ASCII}--.]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\p{ASCII}&&\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             14,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\p{ASCII}&&.]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\.--[.&]]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[.--[.&]]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\.&&[.&]]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[.&&[.&]]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\.--\.--\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[.--\.--\.]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             7,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\.--.--\.]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             11,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\.--\.--.]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[\.&&\.&&\.]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             3,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[.&&\.&&\.]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             7,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\.&&.&&\.]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             11,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[\.&&\.&&.]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[[\.&]--[\.&]]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[[.&]--[\.&]]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[[\\.&]--[\.&]]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             11,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[[\.&]--[.&]]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[[\.&]--[\\.&]]/v`,
						},
					},
				},
			},
		},
		{
			Code:            `/[[\.&]&&[\.&]]/v`,
			LanguageOptions: "{\"ecmaVersion\":2024}",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             4,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[[.&]&&[\.&]]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[[\\.&]&&[\.&]]/v`,
						},
					},
				},
				{
					MessageDescription: "Unnecessary escape character: \\..",
					Line:               1,
					Column:             11,
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "removeEscape",
							Output:    `/[[\.&]&&[.&]]/v`,
						},
						{
							MessageId: "escapeBackslash",
							Output:    `/[[\.&]&&[\\.&]]/v`,
						},
					},
				},
			},
		},
	})
}

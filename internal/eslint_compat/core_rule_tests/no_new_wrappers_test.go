// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoNewWrappersRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-new-wrappers", []ValidTestCase{
		{Code: `var a = new Object();`},
		{Code: `var a = String('test'), b = String.fromCharCode(32);`},
		{Code: `
        function test(Number) {
            return new Number;
        }
        `},
		{
			Code: `
            import String from "./string";
            const str = new String(42);
            `,
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{Code: `
        if (foo) {
            result = new Boolean(bar);
        } else {
            var Boolean = CustomBoolean;
        }
        `},
		{
			Code:            `new String()`,
			LanguageOptions: "{\"globals\":{\"String\":\"off\"}}",
		},
		{Code: `
        /* global Boolean:off */
        assert(new Boolean);
        `},
	}, []InvalidTestCase{
		{
			Code: `var a = new String('hello');`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noConstructor",
				},
			},
		},
		{
			Code: `var a = new Number(10);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noConstructor",
				},
			},
		},
		{
			Code: `var a = new Boolean(false);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noConstructor",
				},
			},
		},
		{
			Code: `
            const a = new String('bar');
            {
                const String = CustomString;
                const b = new String('foo');
            }
            `,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noConstructor",
					Line:      2,
				},
			},
		},
	})
}

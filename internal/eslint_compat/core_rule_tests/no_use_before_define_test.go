// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoUseBeforeDefineRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "no-use-before-define", []ValidTestCase{
		{Code: `unresolved`},
		{Code: `Array`},
		{Code: `function foo () { arguments; }`},
		{Code: `var a=10; alert(a);`},
		{Code: `function b(a) { alert(a); }`},
		{Code: `Object.hasOwnProperty.call(a);`},
		{Code: `function a() { alert(arguments);}`},
		{
			Code:    `a(); function a() { alert(arguments); }`,
			Options: "[\"nofunc\"]",
		},
		{
			Code:            `(() => { var a = 42; alert(a); })();`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `a(); try { throw new Error() } catch (a) {}`},
		{
			Code:            `class A {} new A();`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `var a = 0, b = a;`},
		{
			Code:            `var {a = 0, b = a} = {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var [a = 0, b = a] = {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `function foo() { foo(); }`},
		{Code: `var foo = function() { foo(); };`},
		{Code: `var a; for (a in a) {}`},
		{
			Code:            `var a; for (a of a) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `let a; class C { static { a; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { let a; a; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `"use strict"; a(); { function a() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `"use strict"; { a(); function a() {} }`,
			Options:         "[\"nofunc\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `switch (foo) { case 1:  { a(); } default: { let a; }}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `a(); { let a = function () {}; }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `a(); function a() { alert(arguments); }`,
			Options: "[{\"functions\":false}]",
		},
		{
			Code:            `"use strict"; { a(); function a() {} }`,
			Options:         "[{\"functions\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function foo() { new A(); } class A {};`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function foo() { bar; } var bar;`,
			Options: "[{\"variables\":false}]",
		},
		{
			Code:            `var foo = () => bar; var bar;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { static { () => foo; let foo; } }`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C extends (class { method() { C; } }) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(class extends (class { method() { C; } }) {});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const C = (class extends (class { method() { C; } }) {});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C extends (class { field = C; }) {}`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class extends (class { field = C; }) {});`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = (class extends (class { field = C; }) {});`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { [() => C](){} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(class C { [() => C](){} });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const C = class { [() => C](){} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { static [() => C](){} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(class C { static [() => C](){} });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const C = class { static [() => C](){} };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { [() => C]; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { [() => C]; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { [() => C]; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static [() => C]; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static [() => C]; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { static [() => C]; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { method() { C; } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(class C { method() { C; } });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const C = class { method() { C; } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { static method() { C; } }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(class C { static method() { C; } });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const C = class { static method() { C; } };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { field = C; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { field = C; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { field = C; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = C; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static field = C; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = class { static field = C; }; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static field = class { static field = C; }; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = () => C; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { field = () => C; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { field = () => C; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = () => C; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static field = () => C; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { static field = () => C; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = class extends C {}; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { field = class extends C {}; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { field = class extends C {}; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = class extends C {}; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static field = class extends C {}; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = class { [C]; }; }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static field = class { [C]; }; });`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { static field = class { field = C; }; };`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { method() { a; } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { static method() { a; } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { field = a; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = D; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = class extends D {}; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = () => a; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = () => a; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { field = () => D; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = () => D; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static field = class { field = a; }; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { C; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { C; } static {} static { C; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static { C; } })`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { class D extends C {} } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { (class { static { C } }) } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { () => C; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class C { static { () => C; } })`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class { static { () => C; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { () => D; } } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { static { () => a; } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `const C = class C { static { C.x; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `export { a }; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export { a as b }; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export { a, b }; let a, b;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export { a }; var a;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export { f }; function f() {}`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export { C }; class C {}`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
		},
	}, []InvalidTestCase{
		{
			Code:            `a++; var a=19;`,
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `a++; var a=19;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `a++; var a=19;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `a(); var a=function() {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `alert(a[1]); var a=[1,3];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `a(); function a() { alert(b); var b=10; a(); }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:    `a(); var a=function() {};`,
			Options: "[\"nofunc\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(() => { alert(a); var a = 42; })();`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(() => a())(); function a() { }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `"use strict"; a(); { function a() {} }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `a(); try { throw new Error() } catch (foo) {var a;}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var f = () => a; var a;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `new A(); class A {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `function foo() { new A(); } class A {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `new A(); var A = class {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `function foo() { new A(); } var A = class {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `a++; { var a; }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `"use strict"; { a(); function a() {} }`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `{a; let a = 1}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `switch (foo) { case 1: a();
 default: 
 let a;}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `if (true) { function foo() { a; } let a;}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:    `a(); var a=function() {};`,
			Options: "[{\"functions\":false,\"classes\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `new A(); class A {};`,
			Options:         "[{\"functions\":false,\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `new A(); var A = class {};`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `function foo() { new A(); } var A = class {};`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `var a = a;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `let a = a + b;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const a = foo(a);`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `function foo(a = a) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var {a = a} = [];`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var [a = a] = [];`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var {b = a, a} = {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var [b = a, a] = {};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var {a = 0} = a;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `var [a = 0] = a;`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code: `for (var a in a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `for (var a of a) {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:    `function foo() { bar; var bar = 1; } var bar;`,
			Options: "[{\"variables\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:    `foo; var foo;`,
			Options: "[{\"variables\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `for (let x = x;;); let x = 0`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `for (let x in xs); let xs = []`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `for (let x of xs); let xs = []`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `try {} catch ({message = x}) {} let x = ''`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `with (obj) x; let x = {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `with (x); let x = {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `with (obj) { x } let x = {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `with (obj) { if (a) { x } } let x = {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `with (obj) { (() => { if (a) { x } })() } let x = {}`,
			LanguageOptions: "{\"ecmaVersion\":2015}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends C {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class extends C {};`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends (class { [C](){} }) {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class extends (class { [C](){} }) {};`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends (class { static field = C; }) {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class extends (class { static field = C; }) {};`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [C](){} }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { [C](){} });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { [C](){} };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [C](){} }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { static [C](){} });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static [C](){} };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [C]; }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { [C]; });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { [C]; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [C] = foo; }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { [C] = foo; });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { [C] = foo; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [C]; }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { static [C]; });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static [C]; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [C] = foo; }`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C { static [C] = foo; });`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static [C] = foo; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static field = C; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static field = class extends C {}; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static field = class { [C]; } };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static field = class { static field = C; }; };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends D {} class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends (class { [a](){} }) {} let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C extends (class { static field = a; }) {} let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [a]() {} } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [a]() {} } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [a]; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [a]; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { [a] = foo; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static [a] = foo; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static field = a; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static field = D; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static field = class extends D {}; } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static field = class { [a](){} } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static field = class { static field = a; }; } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static { C; } };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `const C = class { static { (class extends C {}); } };`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static { a; } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static { D; } } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static { (class extends D {}); } } class D {}`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static { (class { [a](){} }); } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `class C { static { (class { static field = a; }); } } let a;`,
			Options:         "[{\"variables\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C extends C {});`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C extends (class { [C](){} }) {});`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `(class C extends (class { static field = C; }) {});`,
			Options:         "[{\"classes\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a }; const a = 1;`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a }; const a = 1;`,
			Options:         "[{}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a }; const a = 1;`,
			Options:         "[{\"allowNamedExports\":false}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a }; const a = 1;`,
			Options:         "[\"nofunc\"]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a as b }; const a = 1;`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a, b }; let a, b;`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { a }; var a;`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { f }; function f() {}`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export { C }; class C {}`,
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export const foo = a; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export default a; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export function foo() { return a; }; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
		{
			Code:            `export class C { foo() { return a; } }; const a = 1;`,
			Options:         "[{\"allowNamedExports\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2015,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "usedBeforeDefined",
				},
			},
		},
	})
}

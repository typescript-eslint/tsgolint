// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoSpacedFuncRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-spaced-func", []ValidTestCase{
		{Code: `f();`},
		{Code: `f(a, b);`},
		{Code: `f.b();`},
		{Code: `f.b().c();`},
		{Code: `f()()`},
		{Code: `(function() {}())`},
		{Code: `var f = new Foo()`},
		{Code: `var f = new Foo`},
		{Code: `f( (0) )`},
		{Code: `( f )( 0 )`},
		{Code: `( (f) )( (0) )`},
		{Code: `( f()() )(0)`},
		{Code: `(function(){ if (foo) { bar(); } }());`},
		{Code: `f(0, (1))`},
		{Code: `describe/**/('foo', function () {});`},
		{Code: `new (foo())`},
	}, []InvalidTestCase{
		{
			Code:   `f ();`,
			Output: `f();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `f (a, b);`,
			Output: `f(a, b);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code: `f
();`,
			Output: `f();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `f.b ();`,
			Output: `f.b();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
					Column:    3,
				},
			},
		},
		{
			Code:   `f.b().c ();`,
			Output: `f.b().c();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
					Column:    7,
				},
			},
		},
		{
			Code:   `f() ()`,
			Output: `f()()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `(function() {} ())`,
			Output: `(function() {}())`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `var f = new Foo ()`,
			Output: `var f = new Foo()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `f ( (0) )`,
			Output: `f( (0) )`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `f(0) (1)`,
			Output: `f(0)(1)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code:   `(f) (0)`,
			Output: `(f)(0)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
		{
			Code: `f ();
 t   ();`,
			Output: `f();
 t();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noSpacedFunction",
				},
				{
					MessageId: "noSpacedFunction",
				},
			},
		},
	})
}

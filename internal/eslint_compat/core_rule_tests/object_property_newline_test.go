// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestObjectPropertyNewlineRule(t *testing.T) {
	RunRuleTester(t, "{}", "object-property-newline", []ValidTestCase{
		{Code: `var obj = {
k1: 'val1',
k2: 'val2',
k3: 'val3',
k4: 'val4'
};`},
		{Code: `var obj = {
k1: 'val1'
, k2: 'val2'
, k3: 'val3'
, k4: 'val4'
};`},
		{Code: `var obj = { k1: 'val1',
k2: 'val2',
k3: 'val3',
k4: 'val4' };`},
		{Code: `var obj = { k1: 'val1'
, k2: 'val2'
, k3: 'val3'
, k4: 'val4' };`},
		{Code: `var obj = { k1: 'val1' };`},
		{Code: `var obj = {
k1: 'val1'
};`},
		{Code: `var obj = {};`},
		{
			Code: `var obj = {
[bar]: 'baz',
baz
};`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var obj = {
k1: 'val1',
k2: 'val2',
...{}
};`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `var obj = { k1: 'val1',
k2: 'val2',
...{} };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `var obj = { ...{} };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{Code: `foo({ k1: 'val1',
k2: 'val2' });`},
		{Code: `foo({
k1: 'val1',
k2: 'val2'
});`},
		{
			Code: `foo({
a,
b
});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `foo({
a,
b,
});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `foo({
bar() {},
baz
});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `foo({
[bar]: 'baz',
baz 
})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `foo({
k1: 'val1',
k2: 'val2',
...{}
});`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `foo({ k1: 'val1',
k2: 'val2',
...{} });`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:            `foo({ ...{} });`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:    `var obj = { k1: 'val1', k2: 'val2', k3: 'val3' };`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code: `var obj = {
k1: 'val1', k2: 'val2', k3: 'val3'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code:    `var obj = { k1: 'val1' };`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code: `var obj = {
k1: 'val1'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code:    `var obj = {};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code:            `var obj = { 'k1': 'val1', k2: 'val2', ...{} };`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `var obj = {
'k1': 'val1', k2: 'val2', ...{}
};`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:    `foo({ k1: 'val1', k2: 'val2' });`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code: `foo({
k1: 'val1', k2: 'val2'
});`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code:            `foo({ a, b });`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `foo({ bar() {}, baz });`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `foo({ [bar]: 'baz', baz })`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `foo({ 'k1': 'val1', k2: 'val2', ...{} });`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code: `foo({
'k1': 'val1', k2: 'val2', ...{}
});`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:    `var obj = {k1: ['foo', 'bar'], k2: 'val1', k3: 'val2'};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code: `var obj = {
k1: ['foo', 'bar'], k2: 'val1', k3: 'val2'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code: `var obj = {
k1: 'val1', k2: {e1: 'foo', e2: 'bar'}, k3: 'val2'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
		},
		{
			Code:    `var obj = { k1: 'val1', k2: 'val2', k3: 'val3' };`,
			Options: "[{\"allowMultiplePropertiesPerLine\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `var obj = { k1: 'val1', k2: 'val2', k3: 'val3' };`,
			Output: `var obj = { k1: 'val1',
k2: 'val2',
k3: 'val3' };`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    25,
					EndLine:   1,
					EndColumn: 27,
				},
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    37,
					EndLine:   1,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var obj = { k1: 'val1', k2: 
'val2', 
k3: 'val3' };`,
			Output: `var obj = { k1: 'val1',
k2: 
'val2', 
k3: 'val3' };`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    25,
					EndLine:   1,
					EndColumn: 27,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1', k2: 'val2'
};`,
			Output: `var obj = {
k1: 'val1',
k2: 'val2'
};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1', k2: 'val2',
k3: 'val3', k4: 'val4'
};`,
			Output: `var obj = {
k1: 'val1',
k2: 'val2',
k3: 'val3',
k4: 'val4'
};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 15,
				},
				{
					MessageId: "propertiesOnNewline",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `var obj = {k1: ['foo', 'bar'], k2: 'val1'};`,
			Output: `var obj = {k1: ['foo', 'bar'],
k2: 'val1'};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    32,
					EndLine:   1,
					EndColumn: 34,
				},
			},
		},
		{
			Code: `var obj = {k1: [
'foo', 'bar'
], k2: 'val1'};`,
			Output: `var obj = {k1: [
'foo', 'bar'
],
k2: 'val1'};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      3,
					Column:    4,
					EndLine:   3,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1', k2: {e1: 'foo', e2: 'bar'}, k3: 'val2'
};`,
			Output: `var obj = {
k1: 'val1',
k2: {e1: 'foo',
e2: 'bar'},
k3: 'val2'
};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 15,
				},
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    29,
					EndLine:   2,
					EndColumn: 31,
				},
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    41,
					EndLine:   2,
					EndColumn: 43,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1',
k2: {e1: 'foo', e2: 'bar'},
k3: 'val2'
};`,
			Output: `var obj = {
k1: 'val1',
k2: {e1: 'foo',
e2: 'bar'},
k3: 'val2'
};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      3,
					Column:    17,
					EndLine:   3,
					EndColumn: 19,
				},
			},
		},
		{
			Code: `var obj = { k1: 'val1',
k2: [
'val2a', 'val2b', 'val2c'
], k3: 'val3' };`,
			Output: `var obj = { k1: 'val1',
k2: [
'val2a', 'val2b', 'val2c'
],
k3: 'val3' };`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      4,
					Column:    4,
					EndLine:   4,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = { k1: 'val1', [
k2]: 'val2' };`,
			Output: `var obj = { k1: 'val1',
[
k2]: 'val2' };`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    25,
					EndLine:   1,
					EndColumn: 26,
				},
			},
		},
		{
			Code: `var obj = { k1: 'val1', ...{} };`,
			Output: `var obj = { k1: 'val1',
...{} };`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    25,
					EndLine:   1,
					EndColumn: 28,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1', ...{}
};`,
			Output: `var obj = {
k1: 'val1',
...{}
};`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `foo({ k1: 'val1', k2: 'val2' });`,
			Output: `foo({ k1: 'val1',
k2: 'val2' });`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    19,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code: `foo({
k1: 'val1', k2: 'val2'
});`,
			Output: `foo({
k1: 'val1',
k2: 'val2'
});`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `foo({ a, b });`,
			Output: `foo({ a,
b });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 11,
				},
			},
		},
		{
			Code: `foo({
a, b
});`,
			Output: `foo({
a,
b
});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    4,
					EndLine:   2,
					EndColumn: 5,
				},
			},
		},
		{
			Code: `foo({
bar() {}, baz
});`,
			Output: `foo({
bar() {},
baz
});`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    11,
					EndLine:   2,
					EndColumn: 14,
				},
			},
		},
		{
			Code: `foo({
[bar]: 'baz', baz
})`,
			Output: `foo({
[bar]: 'baz',
baz
})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    15,
					EndLine:   2,
					EndColumn: 18,
				},
			},
		},
		{
			Code: `foo({ k1: 'val1', [
k2]: 'val2' })`,
			Output: `foo({ k1: 'val1',
[
k2]: 'val2' })`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    19,
					EndLine:   1,
					EndColumn: 20,
				},
			},
		},
		{
			Code: `foo({ k1: 'val1', ...{} })`,
			Output: `foo({ k1: 'val1',
...{} })`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    19,
					EndLine:   1,
					EndColumn: 22,
				},
			},
		},
		{
			Code: `foo({
k1: 'val1', ...{}
})`,
			Output: `foo({
k1: 'val1',
...{}
})`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `var obj = {
a: {
b: 1,
c: 2
}, d: 2
};`,
			Output: `var obj = {
a: {
b: 1,
c: 2
},
d: 2
};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      5,
					Column:    4,
					EndLine:   5,
					EndColumn: 5,
				},
			},
		},
		{
			Code: `({ foo: 1 /* comment */, bar: 2 })`,
			Output: `({ foo: 1 /* comment */,
bar: 2 })`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    26,
					EndLine:   1,
					EndColumn: 29,
				},
			},
		},
		{
			Code: `({ foo: 1, /* comment */ bar: 2 })`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewline",
					Line:      1,
					Column:    26,
					EndLine:   1,
					EndColumn: 29,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1',
k2: 'val2', k3: 'val3'
};`,
			Output: `var obj = {
k1: 'val1',
k2: 'val2',
k3: 'val3'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `var obj = {
k1:
'val1', k2: 'val2', k3:
'val3'
};`,
			Output: `var obj = {
k1:
'val1',
k2: 'val2',
k3:
'val3'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    9,
					EndLine:   3,
					EndColumn: 11,
				},
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    21,
					EndLine:   3,
					EndColumn: 23,
				},
			},
		},
		{
			Code: `var obj = {k1: [
'foo',
'bar'
], k2: 'val1'};`,
			Output: `var obj = {k1: [
'foo',
'bar'
],
k2: 'val1'};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      4,
					Column:    4,
					EndLine:   4,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = {k1: [
'foo', 'bar'
], k2: 'val1'};`,
			Output: `var obj = {k1: [
'foo', 'bar'
],
k2: 'val1'};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    4,
					EndLine:   3,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1', k2: {
e1: 'foo', e2: 'bar'
}, k3: 'val2'
};`,
			Output: `var obj = {
k1: 'val1',
k2: {
e1: 'foo', e2: 'bar'
},
k3: 'val2'
};`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 15,
				},
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      4,
					Column:    4,
					EndLine:   4,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = { k1: 'val1',
k2: [
'val2a', 'val2b', 'val2c'
], k3: 'val3' };`,
			Output: `var obj = { k1: 'val1',
k2: [
'val2a', 'val2b', 'val2c'
],
k3: 'val3' };`,
			Options: "[{\"allowAllPropertiesOnSameLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      4,
					Column:    4,
					EndLine:   4,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `var obj = { [
k1]: 'val1', k2: 'val2' };`,
			Output: `var obj = { [
k1]: 'val1',
k2: 'val2' };`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      2,
					Column:    14,
					EndLine:   2,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1',
k2: 'val2', ...{}
};`,
			Output: `var obj = {
k1: 'val1',
k2: 'val2',
...{}
};`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `var obj = {
...{},
k1: 'val1', k2: 'val2'
};`,
			Output: `var obj = {
...{},
k1: 'val1',
k2: 'val2'
};`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `foo({ [
k1]: 'val1', k2: 'val2' })`,
			Output: `foo({ [
k1]: 'val1',
k2: 'val2' })`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      2,
					Column:    14,
					EndLine:   2,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `foo({
k1: 'val1',
k2: 'val2', ...{}
})`,
			Output: `foo({
k1: 'val1',
k2: 'val2',
...{}
})`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `foo({
...{},
k1: 'val1', k2: 'val2'
})`,
			Output: `foo({
...{},
k1: 'val1',
k2: 'val2'
})`,
			Options:         "[{\"allowAllPropertiesOnSameLine\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 15,
				},
			},
		},
		{
			Code: `var obj = {
k1: 'val1',
k2: 'val2', k3: 'val3'
};`,
			Output: `var obj = {
k1: 'val1',
k2: 'val2',
k3: 'val3'
};`,
			Options: "[{\"allowMultiplePropertiesPerLine\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "propertiesOnNewlineAll",
					Line:      3,
					Column:    13,
					EndLine:   3,
					EndColumn: 15,
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoWarningCommentsRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-warning-comments", []ValidTestCase{
		{
			Code:    `// any comment`,
			Options: "[{\"terms\":[\"fixme\"]}]",
		},
		{
			Code:    `// any comment`,
			Options: "[{\"terms\":[\"fixme\",\"todo\"]}]",
		},
		{Code: `// any comment`},
		{
			Code:    `// any comment`,
			Options: "[{\"location\":\"anywhere\"}]",
		},
		{
			Code:    `// any comment with TODO, FIXME or XXX`,
			Options: "[{\"location\":\"start\"}]",
		},
		{Code: `// any comment with TODO, FIXME or XXX`},
		{
			Code:    `/* any block comment */`,
			Options: "[{\"terms\":[\"fixme\"]}]",
		},
		{
			Code:    `/* any block comment */`,
			Options: "[{\"terms\":[\"fixme\",\"todo\"]}]",
		},
		{Code: `/* any block comment */`},
		{
			Code:    `/* any block comment */`,
			Options: "[{\"location\":\"anywhere\"}]",
		},
		{
			Code:    `/* any block comment with TODO, FIXME or XXX */`,
			Options: "[{\"location\":\"start\"}]",
		},
		{Code: `/* any block comment with TODO, FIXME or XXX */`},
		{Code: `/* any block comment with (TODO, FIXME's or XXX!) */`},
		{
			Code:    `// comments containing terms as substrings like TodoMVC`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"anywhere\"}]",
		},
		{
			Code:    `// special regex characters don't cause a problem`,
			Options: "[{\"terms\":[\"[aeiou]\"],\"location\":\"anywhere\"}]",
		},
		{Code: `/*eslint no-warning-comments: [2, { "terms": ["todo", "fixme", "any other term"], "location": "anywhere" }]*/

var x = 10;
`},
		{
			Code: `/*eslint no-warning-comments: [2, { "terms": ["todo", "fixme", "any other term"], "location": "anywhere" }]*/

var x = 10;
`,
			Options: "[{\"location\":\"anywhere\"}]",
		},
		{
			Code:    `// foo`,
			Options: "[{\"terms\":[\"foo-bar\"]}]",
		},
		{Code: `/** multi-line block comment with lines starting with
TODO
FIXME or
XXX
*/`},
		{
			Code:    `//!TODO `,
			Options: "[{\"decoration\":[\"*\"]}]",
		},
	}, []InvalidTestCase{
		{
			Code: `// fixme`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any fixme`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any fixme`,
			Options: "[{\"terms\":[\"fixme\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any FIXME`,
			Options: "[{\"terms\":[\"fixme\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any fIxMe`,
			Options: "[{\"terms\":[\"fixme\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any fixme */`,
			Options: "[{\"terms\":[\"FIXME\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any FIXME */`,
			Options: "[{\"terms\":[\"FIXME\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any fIxMe */`,
			Options: "[{\"terms\":[\"FIXME\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any fixme or todo`,
			Options: "[{\"terms\":[\"fixme\",\"todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any fixme or todo */`,
			Options: "[{\"terms\":[\"fixme\",\"todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any fixme or todo */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `/* fixme and todo */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* fixme and todo */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any fixme */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* fixme! */`,
			Options: "[{\"terms\":[\"fixme\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// regex [litera|$]`,
			Options: "[{\"terms\":[\"[litera|$]\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* eslint one-var: 2 */`,
			Options: "[{\"terms\":[\"eslint\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* eslint one-var: 2 */`,
			Options: "[{\"terms\":[\"one\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any block comment with TODO, FIXME or XXX */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `/* any block comment with (TODO, FIXME's or XXX!) */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `/** 
 *any block comment 
*with (TODO, FIXME's or XXX!) **/`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// any comment with TODO, FIXME or XXX`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// TODO: something small`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// TODO: something really longer than 40 characters`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `/* TODO: something 
 really longer than 40 characters 
 and also a new line */`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// TODO: small`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// https://github.com/eslint/eslint/pull/13522#discussion_r470293411 TODO`,
			Options: "[{\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// Comment ending with term followed by punctuation TODO!`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// Comment ending with term including punctuation TODO!`,
			Options: "[{\"terms\":[\"todo!\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// Comment ending with term including punctuation followed by more TODO!!!`,
			Options: "[{\"terms\":[\"todo!\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// !TODO comment starting with term preceded by punctuation`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// !TODO comment starting with term including punctuation`,
			Options: "[{\"terms\":[\"!todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// !!!TODO comment starting with term including punctuation preceded by more`,
			Options: "[{\"terms\":[\"!todo\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// FIX!term ending with punctuation followed word character`,
			Options: "[{\"terms\":[\"FIX!\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `// Term starting with punctuation preceded word character!FIX`,
			Options: "[{\"terms\":[\"!FIX\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `//!XXX comment starting with no spaces (anywhere)`,
			Options: "[{\"terms\":[\"!xxx\"],\"location\":\"anywhere\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `//!XXX comment starting with no spaces (start)`,
			Options: "[{\"terms\":[\"!xxx\"],\"location\":\"start\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `/*
TODO undecorated multi-line block comment (start)
*/`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"start\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `///// TODO decorated single-line comment with decoration array 
 /////`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"start\",\"decoration\":[\"*\",\"/\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code: `///*/*/ TODO decorated single-line comment with multiple decoration characters (start) 
 /////`,
			Options: "[{\"terms\":[\"todo\"],\"location\":\"start\",\"decoration\":[\"*\",\"/\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
		{
			Code:    `//**TODO term starts with a decoration character`,
			Options: "[{\"terms\":[\"*todo\"],\"location\":\"start\",\"decoration\":[\"*\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedComment",
				},
			},
		},
	})
}

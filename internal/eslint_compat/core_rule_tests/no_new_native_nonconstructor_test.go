// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoNewNativeNonconstructorRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":2022}}", "no-new-native-nonconstructor", []ValidTestCase{
		{Code: `var foo = Symbol('foo');`},
		{Code: `function bar(Symbol) { var baz = new Symbol('baz');}`},
		{Code: `function Symbol() {} new Symbol();`},
		{Code: `new foo(Symbol);`},
		{Code: `new foo(bar, Symbol);`},
		{Code: `var foo = BigInt(9007199254740991);`},
		{Code: `function bar(BigInt) { var baz = new BigInt(9007199254740991);}`},
		{Code: `function BigInt() {} new BigInt();`},
		{Code: `new foo(BigInt);`},
		{Code: `new foo(bar, BigInt);`},
	}, []InvalidTestCase{
		{
			Code: `var foo = new Symbol('foo');`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "`Symbol` cannot be called as a constructor.",
				},
			},
		},
		{
			Code: `function bar() { return function Symbol() {}; } var baz = new Symbol('baz');`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "`Symbol` cannot be called as a constructor.",
				},
			},
		},
		{
			Code: `var foo = new BigInt(9007199254740991);`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "`BigInt` cannot be called as a constructor.",
				},
			},
		},
		{
			Code: `function bar() { return function BigInt() {}; } var baz = new BigInt(9007199254740991);`,
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "`BigInt` cannot be called as a constructor.",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestTemplateCurlySpacingRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":6}}", "template-curly-spacing", []ValidTestCase{
		{Code: `{ foo }`},
		{Code: "`${foo} ${bar}`"},
		{
			Code: `` + "`" + `${foo} ${bar} ${
  baz
}` + "`" + ``,
			Options: "[\"never\"]",
		},
		{
			Code: `` + "`" + `${ foo } ${ bar } ${
  baz
}` + "`" + ``,
			Options: "[\"always\"]",
		},
		{Code: "tag`${foo} ${bar}`"},
		{
			Code: `tag` + "`" + `${foo} ${bar} ${
  baz
}` + "`" + ``,
			Options: "[\"never\"]",
		},
		{
			Code: `tag` + "`" + `${ foo } ${ bar } ${
  baz
}` + "`" + ``,
			Options: "[\"always\"]",
		},
		{Code: "`${/*  */ foo} ${bar /*  */}`"},
		{Code: "`${/*  */foo/*  */} ${/*  */  bar  /*  */}`"},
		{Code: `` + "`" + `${
  /*  */  foo  /*  */  
} ${/*
  */  bar  /*  
*/}` + "`" + ``},
		{Code: "tag`${/*  */ foo} ${bar /*  */}}`"},
		{Code: "tag`${/*  */foo/*  */} ${/*  */  bar  /*  */}`"},
		{Code: `tag` + "`" + `${
  /*  */  foo  /*  */  
} ${/*
  */  bar  /*  
*/}` + "`" + ``},
		{Code: `` + "`" + `${// comment
 foo} ${bar // comment 
}` + "`" + ``},
		{
			Code:    "`${/*  */ foo} ${bar /*  */}`",
			Options: "[\"never\"]",
		},
		{
			Code:    "`${/*  */foo/*  */} ${/*  */  bar  /*  */}`",
			Options: "[\"never\"]",
		},
		{
			Code: `` + "`" + `${
  /*  */  foo  /*  */  
} ${/*
  */  bar  /*  
*/}` + "`" + ``,
			Options: "[\"never\"]",
		},
		{
			Code:    "tag`${/*  */ foo} ${bar /*  */}}`",
			Options: "[\"never\"]",
		},
		{
			Code:    "tag`${/*  */foo/*  */} ${/*  */  bar  /*  */}`",
			Options: "[\"never\"]",
		},
		{
			Code: `tag` + "`" + `${
  /*  */  foo  /*  */  
} ${/*
  */  bar  /*  
*/}` + "`" + ``,
			Options: "[\"never\"]",
		},
		{
			Code: `` + "`" + `${// comment
 foo} ${bar // comment 
}` + "`" + ``,
			Options: "[\"never\"]",
		},
		{
			Code:    "`${ /*  */ foo } ${ bar /*  */ }`",
			Options: "[\"always\"]",
		},
		{
			Code:    "`${ /*  */foo/*  */ } ${ /*  */  bar  /*  */ }`",
			Options: "[\"always\"]",
		},
		{
			Code: `` + "`" + `${
  /*  */  foo  /*  */  
} ${ /*
  */  bar  /*  
*/ }` + "`" + ``,
			Options: "[\"always\"]",
		},
		{
			Code:    "tag`${ /*  */ foo } ${ bar /*  */ }`",
			Options: "[\"always\"]",
		},
		{
			Code:    "tag`${ /*  */foo/*  */ } ${ /*  */  bar  /*  */ }`",
			Options: "[\"always\"]",
		},
		{
			Code: `tag` + "`" + `${
  /*  */  foo  /*  */  
} ${ /*
  */  bar  /*  
*/ }` + "`" + ``,
			Options: "[\"always\"]",
		},
		{
			Code: `` + "`" + `${ // comment
 foo } ${ bar // comment 
}` + "`" + ``,
			Options: "[\"always\"]",
		},
	}, []InvalidTestCase{
		{
			Code:   "`${ foo } ${ bar }`",
			Output: "`${foo} ${bar}`",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    8,
					EndLine:   1,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
			},
		},
		{
			Code:    "`${ foo } ${ bar }`",
			Output:  "`${foo} ${bar}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    8,
					EndLine:   1,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
			},
		},
		{
			Code:    "` ${ foo }${ bar }` ",
			Output:  "` ${foo}${bar}` ",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    9,
					EndLine:   1,
					EndColumn: 10,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
			},
		},
		{
			Code:    "`${  foo } ${ bar  }`",
			Output:  "`${foo} ${bar}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 6,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    9,
					EndLine:   1,
					EndColumn: 10,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    14,
					EndLine:   1,
					EndColumn: 15,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    18,
					EndLine:   1,
					EndColumn: 20,
				},
			},
		},
		{
			Code:    "`${foo   }${   bar}`",
			Output:  "`${foo}${bar}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 10,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code:    "`${   foo \t}${\t\tbar   }`",
			Output:  "`${foo}${bar}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 7,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 17,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 23,
				},
			},
		},
		{
			Code:    "`${foo} ${bar}`",
			Output:  "`${ foo } ${ bar }`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 4,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    9,
					EndLine:   1,
					EndColumn: 11,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    14,
					EndLine:   1,
					EndColumn: 15,
				},
			},
		},
		{
			Code:    "`${foo}${bar}`",
			Output:  "`${ foo }${ bar }`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 4,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    8,
					EndLine:   1,
					EndColumn: 10,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
			},
		},
		{
			Code:    "`a${foo}b${bar}c`",
			Output:  "`a${ foo }b${ bar }c`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    3,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    8,
					EndLine:   1,
					EndColumn: 9,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code:   "tag`${ foo } ${ bar }`",
			Output: "tag`${foo} ${bar}`",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:    "tag`${ foo } ${ bar }`",
			Output:  "tag`${foo} ${bar}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:    "tag`${foo} ${bar}`",
			Output:  "tag`${ foo } ${ bar }`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 7,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 11,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    12,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
			},
		},
		{
			Code:   "`${ /*  */foo } ${ bar/*  */ }`",
			Output: "`${/*  */foo} ${bar/*  */}`",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    14,
					EndLine:   1,
					EndColumn: 15,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    19,
					EndLine:   1,
					EndColumn: 20,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    29,
					EndLine:   1,
					EndColumn: 30,
				},
			},
		},
		{
			Code: `` + "`" + `${ /*
  */foo } ${ bar/*  
*/ }` + "`" + ``,
			Output: `` + "`" + `${/*
  */foo} ${bar/*  
*/}` + "`" + ``,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      2,
					Column:    8,
					EndLine:   2,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code:    "`${ /*  */ foo } ${ bar /*  */ }`",
			Output:  "`${/*  */ foo} ${bar /*  */}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    20,
					EndLine:   1,
					EndColumn: 21,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    31,
					EndLine:   1,
					EndColumn: 32,
				},
			},
		},
		{
			Code: `` + "`" + `${ /*
  */ foo } ${ bar /*  
*/ }` + "`" + ``,
			Output: `` + "`" + `${/*
  */ foo} ${bar /*  
*/}` + "`" + ``,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      2,
					Column:    9,
					EndLine:   2,
					EndColumn: 10,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      2,
					Column:    14,
					EndLine:   2,
					EndColumn: 15,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code:    "`${/*  */foo} ${bar/*  */}`",
			Output:  "`${ /*  */foo } ${ bar/*  */ }`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 4,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 17,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    26,
					EndLine:   1,
					EndColumn: 27,
				},
			},
		},
		{
			Code: `` + "`" + `${/*
  */foo} ${bar/*  
*/}` + "`" + ``,
			Output: `` + "`" + `${ /*
  */foo } ${ bar/*  
*/ }` + "`" + ``,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 4,
				},
				{
					MessageId: "expectedBefore",
					Line:      2,
					Column:    8,
					EndLine:   2,
					EndColumn: 9,
				},
				{
					MessageId: "expectedAfter",
					Line:      2,
					Column:    10,
					EndLine:   2,
					EndColumn: 12,
				},
				{
					MessageId: "expectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code:   "tag`${ /*  */foo } ${ bar/*  */ }`",
			Output: "tag`${/*  */foo} ${bar/*  */}`",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    22,
					EndLine:   1,
					EndColumn: 23,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    32,
					EndLine:   1,
					EndColumn: 33,
				},
			},
		},
		{
			Code: `tag` + "`" + `${ /*
  */foo } ${ bar/*  
*/ }` + "`" + ``,
			Output: `tag` + "`" + `${/*
  */foo} ${bar/*  
*/}` + "`" + ``,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      2,
					Column:    8,
					EndLine:   2,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code:    "tag`${ /*  */foo } ${ bar/*  */ }`",
			Output:  "tag`${/*  */foo} ${bar/*  */}`",
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    22,
					EndLine:   1,
					EndColumn: 23,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      1,
					Column:    32,
					EndLine:   1,
					EndColumn: 33,
				},
			},
		},
		{
			Code: `tag` + "`" + `${ /*
  */foo } ${ bar/*  
*/ }` + "`" + ``,
			Output: `tag` + "`" + `${/*
  */foo} ${bar/*  
*/}` + "`" + ``,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    7,
					EndLine:   1,
					EndColumn: 8,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      2,
					Column:    8,
					EndLine:   2,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedAfter",
					Line:      2,
					Column:    13,
					EndLine:   2,
					EndColumn: 14,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code:    "tag`${/*  */foo} ${bar/*  */}`",
			Output:  "tag`${ /*  */foo } ${ bar/*  */ }`",
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 7,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    16,
					EndLine:   1,
					EndColumn: 17,
				},
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    18,
					EndLine:   1,
					EndColumn: 20,
				},
				{
					MessageId: "expectedBefore",
					Line:      1,
					Column:    29,
					EndLine:   1,
					EndColumn: 30,
				},
			},
		},
		{
			Code: `tag` + "`" + `${/*
  */foo} ${bar/*  
*/}` + "`" + ``,
			Output: `tag` + "`" + `${ /*
  */foo } ${ bar/*  
*/ }` + "`" + ``,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 7,
				},
				{
					MessageId: "expectedBefore",
					Line:      2,
					Column:    8,
					EndLine:   2,
					EndColumn: 9,
				},
				{
					MessageId: "expectedAfter",
					Line:      2,
					Column:    10,
					EndLine:   2,
					EndColumn: 12,
				},
				{
					MessageId: "expectedBefore",
					Line:      3,
					Column:    3,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code: `` + "`" + `${ // comment
 foo} ${bar // comment 
}` + "`" + ``,
			Output: `` + "`" + `${// comment
 foo} ${bar // comment 
}` + "`" + ``,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
			},
		},
		{
			Code: `` + "`" + `${ // comment
 foo} ${bar // comment 
}` + "`" + ``,
			Output: `` + "`" + `${// comment
 foo} ${bar // comment 
}` + "`" + ``,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
			},
		},
		{
			Code: `` + "`" + `${// comment
 foo } ${ bar // comment 
}` + "`" + ``,
			Output: `` + "`" + `${ // comment
 foo } ${ bar // comment 
}` + "`" + ``,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      1,
					Column:    2,
					EndLine:   1,
					EndColumn: 4,
				},
			},
		},
		{
			Code: `` + "`" + `
${ foo }
` + "`" + ``,
			Output: `` + "`" + `
${foo}
` + "`" + ``,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
					Line:      2,
					Column:    3,
					EndLine:   2,
					EndColumn: 4,
				},
				{
					MessageId: "unexpectedBefore",
					Line:      2,
					Column:    7,
					EndLine:   2,
					EndColumn: 8,
				},
			},
		},
		{
			Code: `` + "`" + `
${foo}
` + "`" + ``,
			Output: `` + "`" + `
${ foo }
` + "`" + ``,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "expectedAfter",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 3,
				},
				{
					MessageId: "expectedBefore",
					Line:      2,
					Column:    6,
					EndLine:   2,
					EndColumn: 7,
				},
			},
		},
	})
}

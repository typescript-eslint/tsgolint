// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoArrayConstructorRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"parser\":{\"version\":\"8.30.1\",\"meta\":{\"name\":\"typescript-eslint/parser\",\"version\":\"8.30.1\"}}}}", "no-array-constructor", []ValidTestCase{
		{Code: `new Array(x);`},
		{Code: `Array(x);`},
		{Code: `new Array(9);`},
		{Code: `Array(9);`},
		{Code: `new foo.Array();`},
		{Code: `foo.Array();`},
		{Code: `new Array.foo();`},
		{Code: `Array.foo();`},
		{Code: `new Array<Foo>(1, 2, 3);`},
		{Code: `new Array<Foo>();`},
		{Code: `Array<Foo>(1, 2, 3);`},
		{Code: `Array<Foo>();`},
		{Code: `Array<Foo>(3);`},
		{Code: `Array?.(x);`},
		{Code: `Array?.(9);`},
		{Code: `foo?.Array();`},
		{Code: `Array?.foo();`},
		{Code: `foo.Array?.();`},
		{Code: `Array.foo?.();`},
		{Code: `Array?.<Foo>(1, 2, 3);`},
		{Code: `Array?.<Foo>();`},
	}, []InvalidTestCase{
		{
			Code: `new Array();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[];`,
						},
					},
				},
			},
		},
		{
			Code: `Array();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[];`,
						},
					},
				},
			},
		},
		{
			Code: `new Array(x, y);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[x, y];`,
						},
					},
				},
			},
		},
		{
			Code: `Array(x, y);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[x, y];`,
						},
					},
				},
			},
		},
		{
			Code: `new Array(0, 1, 2);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[0, 1, 2];`,
						},
					},
				},
			},
		},
		{
			Code: `Array(0, 1, 2);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[0, 1, 2];`,
						},
					},
				},
			},
		},
		{
			Code: `Array?.(0, 1, 2);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[0, 1, 2];`,
						},
					},
				},
			},
		},
		{
			Code: `Array?.(x, y);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferLiteral",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "useLiteral",
							Output:    `[x, y];`,
						},
					},
				},
			},
		},
	})
}

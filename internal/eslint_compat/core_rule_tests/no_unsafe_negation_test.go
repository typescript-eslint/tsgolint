// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoUnsafeNegationRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-unsafe-negation", []ValidTestCase{
		{Code: `a in b`},
		{Code: `a in b === false`},
		{Code: `!(a in b)`},
		{Code: `(!a) in b`},
		{Code: `a instanceof b`},
		{Code: `a instanceof b === false`},
		{Code: `!(a instanceof b)`},
		{Code: `(!a) instanceof b`},
		{Code: `if (! a < b) {}`},
		{Code: `while (! a > b) {}`},
		{Code: `foo = ! a <= b;`},
		{Code: `foo = ! a >= b;`},
		{
			Code:    `! a <= b`,
			Options: "[{}]",
		},
		{
			Code:    `foo = ! a >= b;`,
			Options: "[{\"enforceForOrderingRelations\":false}]",
		},
		{
			Code:    `foo = (!a) >= b;`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
		},
		{
			Code:    `a <= b`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
		},
		{
			Code:    `!(a < b)`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
		},
		{
			Code:    `foo = a > b;`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `!a in b`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							Output: `!(a in b)`,
						},
						{
							Output: `(!a) in b`,
						},
					},
				},
			},
		},
		{
			Code: `(!a in b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `(!(a in b))`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `((!a) in b)`,
						},
					},
				},
			},
		},
		{
			Code: `!(a) in b`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `!((a) in b)`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `(!(a)) in b`,
						},
					},
				},
			},
		},
		{
			Code: `!a instanceof b`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `!(a instanceof b)`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `(!a) instanceof b`,
						},
					},
				},
			},
		},
		{
			Code: `(!a instanceof b)`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `(!(a instanceof b))`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `((!a) instanceof b)`,
						},
					},
				},
			},
		},
		{
			Code: `!(a) instanceof b`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `!((a) instanceof b)`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `(!(a)) instanceof b`,
						},
					},
				},
			},
		},
		{
			Code:    `if (! a < b) {}`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `if (!( a < b)) {}`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `if ((! a) < b) {}`,
						},
					},
				},
			},
		},
		{
			Code:    `while (! a > b) {}`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `while (!( a > b)) {}`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `while ((! a) > b) {}`,
						},
					},
				},
			},
		},
		{
			Code:    `foo = ! a <= b;`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `foo = !( a <= b);`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `foo = (! a) <= b;`,
						},
					},
				},
			},
		},
		{
			Code:    `foo = ! a >= b;`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `foo = !( a >= b);`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `foo = (! a) >= b;`,
						},
					},
				},
			},
		},
		{
			Code:    `! a <= b`,
			Options: "[{\"enforceForOrderingRelations\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Suggestions: []InvalidTestCaseSuggestion{
						{
							MessageId: "suggestNegatedExpression",
							Output:    `!( a <= b)`,
						},
						{
							MessageId: "suggestParenthesisedNegation",
							Output:    `(! a) <= b`,
						},
					},
				},
			},
		},
	})
}

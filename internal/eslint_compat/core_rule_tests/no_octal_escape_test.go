// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoOctalEscapeRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "no-octal-escape", []ValidTestCase{
		{Code: `var foo = "\x51";`},
		{Code: `var foo = "foo \\251 bar";`},
		{Code: `var foo = /([abc]) \1/g;`},
		{Code: `var foo = '\0';`},
		{Code: `'\0'`},
		{Code: `'\8'`},
		{Code: `'\9'`},
		{Code: `'\0 '`},
		{Code: `' \0'`},
		{Code: `'a\0'`},
		{Code: `'\0a'`},
		{Code: `'a\8a'`},
		{Code: `'\0\8'`},
		{Code: `'\8\0'`},
		{Code: `'\80'`},
		{Code: `'\81'`},
		{Code: `'\\'`},
		{Code: `'\\0'`},
		{Code: `'\\08'`},
		{Code: `'\\1'`},
		{Code: `'\\01'`},
		{Code: `'\\12'`},
		{Code: `'\\\0'`},
		{Code: `'\\\8'`},
		{Code: `'\0\\'`},
		{Code: `'0'`},
		{Code: `'1'`},
		{Code: `'8'`},
		{Code: `'01'`},
		{Code: `'08'`},
		{Code: `'80'`},
		{Code: `'12'`},
		{Code: `'\a'`},
		{Code: `'\n'`},
	}, []InvalidTestCase{
		{
			Code: `var foo = "foo \01 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \000 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \377 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \378 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \37a bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \381 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \3a1 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \251 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \258 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \25a bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\3s51";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\77";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\78";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\5a";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\751";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "foo \400 bar";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\t\1";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `var foo = "\\\751";`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0 \1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0 \01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0a\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0a\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\0\08'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\2'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\7'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\00'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\02'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\07'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\08'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\09'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\10'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\12'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `' \1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\1 '`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'a\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\1a'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'a\1a'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `' \01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\01 '`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'a\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\01a'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'a\01a'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'a\08a'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\n\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\n\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\n\08'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\\\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\\\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\\\08'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\
\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\01\02'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\02\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\01\2'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\2\01'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'\08\1'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
		{
			Code: `'foo \1 bar \2'`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "octalEscapeSequence",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoWhitespaceBeforePropertyRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-whitespace-before-property", []ValidTestCase{
		{Code: `foo.bar`},
		{Code: `foo.bar()`},
		{Code: `foo[bar]`},
		{Code: `foo['bar']`},
		{Code: `foo[0]`},
		{Code: `foo[ bar ]`},
		{Code: `foo[ 'bar' ]`},
		{Code: `foo[ 0 ]`},
		{Code: `foo
.bar`},
		{Code: `foo.
bar`},
		{Code: `foo
.bar()`},
		{Code: `foo.
bar()`},
		{Code: `foo
[bar]`},
		{Code: `foo
['bar']`},
		{Code: `foo
[0]`},
		{Code: `foo
[ bar ]`},
		{Code: `foo.
 bar`},
		{Code: `foo
. bar`},
		{Code: `foo.
 bar()`},
		{Code: `foo
. bar()`},
		{Code: `foo
 [bar]`},
		{Code: `foo
 ['bar']`},
		{Code: `foo
 [0]`},
		{Code: `foo
 [ bar ]`},
		{Code: `foo.
	bar`},
		{Code: `foo
.	bar`},
		{Code: `foo.
	bar()`},
		{Code: `foo
.	bar()`},
		{Code: `foo
	[bar]`},
		{Code: `foo
	['bar']`},
		{Code: `foo
	[0]`},
		{Code: `foo
	[ bar ]`},
		{Code: `foo.bar.baz`},
		{Code: `foo
.bar
.baz`},
		{Code: `foo.
bar.
baz`},
		{Code: `foo.bar().baz()`},
		{Code: `foo
.bar()
.baz()`},
		{Code: `foo.
bar().
baz()`},
		{Code: `foo
.bar
[baz]`},
		{Code: `foo
.bar
['baz']`},
		{Code: `foo
.bar
[0]`},
		{Code: `foo
.bar
[ baz ]`},
		{Code: `foo
 .bar
 .baz`},
		{Code: `foo.
 bar.
 baz`},
		{Code: `foo
 .bar()
 .baz()`},
		{Code: `foo.
 bar().
 baz()`},
		{Code: `foo
 .bar
 [baz]`},
		{Code: `foo
 .bar
 ['baz']`},
		{Code: `foo
 .bar
 [0]`},
		{Code: `foo
 .bar
 [ baz ]`},
		{Code: `foo
	.bar
	.baz`},
		{Code: `foo.
	bar.
	baz`},
		{Code: `foo
	.bar()
	.baz()`},
		{Code: `foo.
	bar().
	baz()`},
		{Code: `foo
	.bar
	[baz]`},
		{Code: `foo
	.bar
	['baz']`},
		{Code: `foo
	.bar
	[0]`},
		{Code: `foo
	.bar
	[ baz ]`},
		{Code: `foo['bar' + baz]`},
		{Code: `foo[ 'bar' + baz ]`},
		{Code: `(foo + bar).baz`},
		{Code: `( foo + bar ).baz`},
		{Code: `(foo ? bar : baz).qux`},
		{Code: `( foo ? bar : baz ).qux`},
		{Code: `(foo ? bar : baz)[qux]`},
		{Code: `( foo ? bar : baz )[qux]`},
		{Code: `( foo ? bar : baz )[0].qux`},
		{Code: `foo.bar[('baz')]`},
		{Code: `foo.bar[ ('baz') ]`},
		{Code: `foo[[bar]]`},
		{Code: `foo[ [ bar ] ]`},
		{Code: `foo[['bar']]`},
		{Code: `foo[ [ 'bar' ] ]`},
		{Code: `foo[(('baz'))]`},
		{Code: `foo[ (('baz'))]`},
		{Code: `foo[0][[('baz')]]`},
		{Code: `foo[bar.baz('qux')]`},
		{Code: `foo[(bar.baz() + 0) + qux]`},
		{Code: `foo['bar ' + 1 + ' baz']`},
		{Code: `5['toExponential']()`},
		{
			Code:            `obj?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code:            `( obj )?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code: `obj
  ?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code: `obj?.
  prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code:            `obj?.[key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code:            `( obj )?.[ key ]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code: `obj
  ?.[key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code: `obj?.
  [key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
		{
			Code: `obj
  ?.
  [key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
	}, []InvalidTestCase{
		{
			Code:   `foo. bar`,
			Output: `foo.bar`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo .bar`,
			Output: `foo.bar`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [bar]`,
			Output: `foo[bar]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [0]`,
			Output: `foo[0]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo ['bar']`,
			Output: `foo['bar']`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo. bar. baz`,
			Output: `foo.bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo .bar. baz`,
			Output: `foo.bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [bar] [baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [bar][baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[bar] [baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.bar [baz]`,
			Output: `foo.bar[baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo. bar[baz]`,
			Output: `foo.bar[baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[bar]. baz`,
			Output: `foo[bar].baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[ bar ] [ baz ]`,
			Output: `foo[ bar ][ baz ]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [ 0 ][ baz ]`,
			Output: `foo[ 0 ][ baz ]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[ 0 ] [ 'baz' ]`,
			Output: `foo[ 0 ][ 'baz' ]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	.bar`,
			Output: `foo.bar`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.	bar`,
			Output: `foo.bar`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	.bar()`,
			Output: `foo.bar()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.	bar()`,
			Output: `foo.bar()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	[bar]`,
			Output: `foo[bar]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	[0]`,
			Output: `foo[0]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	['bar']`,
			Output: `foo['bar']`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.	bar.	baz`,
			Output: `foo.bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	.bar.	baz`,
			Output: `foo.bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.	bar().	baz()`,
			Output: `foo.bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	.bar().	baz()`,
			Output: `foo.bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	[bar]	[baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo	[bar][baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[bar]	[baz]`,
			Output: `foo[bar][baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.bar	[baz]`,
			Output: `foo.bar[baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.	bar[baz]`,
			Output: `foo.bar[baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[bar].	baz`,
			Output: `foo[bar].baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo [bar]
 .baz`,
			Output: `foo[bar]
 .baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo. bar
 .baz`,
			Output: `foo.bar
 .baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo .bar
.baz`,
			Output: `foo.bar
.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
 bar. baz`,
			Output: `foo.
 bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
bar . baz`,
			Output: `foo.
bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo. bar()
 .baz()`,
			Output: `foo.bar()
 .baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo .bar()
.baz()`,
			Output: `foo.bar()
.baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
 bar(). baz()`,
			Output: `foo.
 bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
bar() . baz()`,
			Output: `foo.
bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo	[bar]
	.baz`,
			Output: `foo[bar]
	.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.	bar
	.baz`,
			Output: `foo.bar
	.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo	.bar
.baz`,
			Output: `foo.bar
.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
	bar.	baz`,
			Output: `foo.
	bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
bar	.	baz`,
			Output: `foo.
bar.baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.	bar()
	.baz()`,
			Output: `foo.bar()
	.baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo	.bar()
.baz()`,
			Output: `foo.bar()
.baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
	bar().	baz()`,
			Output: `foo.
	bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `foo.
bar()	.	baz()`,
			Output: `foo.
bar().baz()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo ['bar' + baz]`,
			Output: `foo['bar' + baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo + bar) .baz`,
			Output: `(foo + bar).baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo + bar). baz`,
			Output: `(foo + bar).baz`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo + bar) [baz]`,
			Output: `(foo + bar)[baz]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo ? bar : baz) .qux`,
			Output: `(foo ? bar : baz).qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo ? bar : baz). qux`,
			Output: `(foo ? bar : baz).qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `(foo ? bar : baz) [qux]`,
			Output: `(foo ? bar : baz)[qux]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `( foo ? bar : baz ) [0].qux`,
			Output: `( foo ? bar : baz )[0].qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `( foo ? bar : baz )[0] .qux`,
			Output: `( foo ? bar : baz )[0].qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `( foo ? bar : baz )[0]. qux`,
			Output: `( foo ? bar : baz )[0].qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `( foo ? bar : baz ) [0]. qux`,
			Output: `( foo ? bar : baz )[0].qux`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo.bar [('baz')]`,
			Output: `foo.bar[('baz')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo .bar[('baz')]`,
			Output: `foo.bar[('baz')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo .bar [('baz')]`,
			Output: `foo.bar[('baz')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [(('baz'))]`,
			Output: `foo[(('baz'))]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [[baz]]`,
			Output: `foo[[baz]]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [ [ baz ] ]`,
			Output: `foo[ [ baz ] ]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [['baz']]`,
			Output: `foo[['baz']]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [ [ 'baz' ] ]`,
			Output: `foo[ [ 'baz' ] ]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[0] [[('baz')]]`,
			Output: `foo[0][[('baz')]]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [0][[('baz')]]`,
			Output: `foo[0][[('baz')]]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [0] [[('baz')]]`,
			Output: `foo[0][[('baz')]]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [bar.baz('qux')]`,
			Output: `foo[bar.baz('qux')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[bar .baz('qux')]`,
			Output: `foo[bar.baz('qux')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [bar . baz('qux')]`,
			Output: `foo[bar.baz('qux')]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [(bar.baz() + 0) + qux]`,
			Output: `foo[(bar.baz() + 0) + qux]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo[(bar. baz() + 0) + qux]`,
			Output: `foo[(bar.baz() + 0) + qux]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo [(bar. baz() + 0) + qux]`,
			Output: `foo[(bar.baz() + 0) + qux]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `foo ['bar ' + 1 + ' baz']`,
			Output: `foo['bar ' + 1 + ' baz']`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `5 .toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code: `5       .toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `08      .toExponential()`,
			LanguageOptions: "{\"sourceType\":\"script\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `0192    .toExponential()`,
			LanguageOptions: "{\"sourceType\":\"script\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `5_000       .toExponential()`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `5_000_00       .toExponential()`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `5. .toExponential()`,
			Output: `5..toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `5.0 .toExponential()`,
			Output: `5.0.toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `5.0_0 .toExponential()`,
			Output:          `5.0_0.toExponential()`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `0x5 .toExponential()`,
			Output: `0x5.toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `0x56_78 .toExponential()`,
			Output:          `0x56_78.toExponential()`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `5e0 .toExponential()`,
			Output: `5e0.toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `5e-0 .toExponential()`,
			Output: `5e-0.toExponential()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:   `5 ['toExponential']()`,
			Output: `5['toExponential']()`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `05 .toExponential()`,
			Output:          `05.toExponential()`,
			LanguageOptions: "{\"sourceType\":\"script\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj?. prop`,
			Output:          `obj?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj ?.prop`,
			Output:          `obj?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj?. [key]`,
			Output:          `obj?.[key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj ?.[key]`,
			Output:          `obj?.[key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `5 ?. prop`,
			Output:          `5?.prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `5 ?. [key]`,
			Output:          `5?.[key]`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj/* comment */?. prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
		{
			Code:            `obj ?./* comment */prop`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedWhitespace",
				},
			},
		},
	})
}

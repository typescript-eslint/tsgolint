// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoIrregularWhitespaceRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-irregular-whitespace", []ValidTestCase{
		{Code: `'\u000B';`},
		{Code: `'\u000C';`},
		{Code: `'\u0085';`},
		{Code: `'\u00A0';`},
		{Code: `'\u180E';`},
		{Code: `'\ufeff';`},
		{Code: `'\u2000';`},
		{Code: `'\u2001';`},
		{Code: `'\u2002';`},
		{Code: `'\u2003';`},
		{Code: `'\u2004';`},
		{Code: `'\u2005';`},
		{Code: `'\u2006';`},
		{Code: `'\u2007';`},
		{Code: `'\u2008';`},
		{Code: `'\u2009';`},
		{Code: `'\u200A';`},
		{Code: `'\u200B';`},
		{Code: `'\u2028';`},
		{Code: `'\u2029';`},
		{Code: `'\u202F';`},
		{Code: `'\u205f';`},
		{Code: `'\u3000';`},
		{Code: `'';`},
		{Code: `'';`},
		{Code: `'';`},
		{Code: `' ';`},
		{Code: `'᠎';`},
		{Code: `'` + "\xef\xbb\xbf" + `';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `'​';`},
		{Code: `'\ ';`},
		{Code: `'\ ';`},
		{Code: `' ';`},
		{Code: `' ';`},
		{Code: `'　';`},
		{
			Code:    `// `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code: `// `, Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `// `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `// ᠎`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `// ` + "\xef\xbb\xbf" + ``,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `// ​`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//  `,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `// 　`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*  */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code: `/*  */`, Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*  */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/* ᠎ */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/* ` + "\xef\xbb\xbf" + ` */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/* ​ */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/*   */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `/* 　 */`,
			Options: "[{\"skipComments\":true}]",
		},
		{
			Code:    `//`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code: `//`, Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `//`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/᠎/`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/` + "\xef\xbb\xbf" + `/`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/​/`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/ /`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:    `/　/`,
			Options: "[{\"skipRegExps\":true}]",
		},
		{
			Code:            "`\u000b`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "`\f`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "``",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "`᠎`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `` + "`" + `` + "\xef\xbb\xbf" + `` + "`" + ``,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "`​`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "` `",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "`　`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "`　${foo}　`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "const error = ` 　 `;",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const error = ` + "`" + `
　` + "`" + `;`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const error = ` + "`" + `　
` + "`" + `;`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const error = ` + "`" + `
　
` + "`" + `;`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `const error = ` + "`" + `foo　bar
foo　bar` + "`" + `;`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `<div></div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `<div></div>;`, Options: "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div></div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div>᠎</div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div>` + "\xef\xbb\xbf" + `</div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div>​</div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div> </div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code:            `<div>　</div>;`,
			Options:         "[{\"skipJSXText\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{Code: `` + "\xef\xbb\xbf" + `console.log('hello BOM');`},
	}, []InvalidTestCase{
		{
			Code: `var any  = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any  = 'thing';`, Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any ` + "\xef\xbb\xbf" + ` = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any   = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var any 　 = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
				},
			},
		},
		{
			Code: `var a = 'b', c = 'd',
e = 'f' `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    13,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      3,
					Column:    8,
				},
			},
		},
		{
			Code: `var any 　 = 'thing', other 　 = 'thing';
var third 　 = 'thing';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    9,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    28,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    11,
				},
			},
		},
		{
			Code: `// `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// `, Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// ᠎`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// ` + "\xef\xbb\xbf" + ``,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// ​`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `//  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `// 　`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*  */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*  */`, Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*  */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/* ᠎ */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/* ` + "\xef\xbb\xbf" + ` */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/* ​ */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/*   */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `/* 　 */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
				},
			},
		},
		{
			Code: `var any = /　/, other = //;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    25,
				},
			},
		},
		{
			Code:    `var any = '　', other = '';`,
			Options: "[{\"skipStrings\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    25,
				},
			},
		},
		{
			Code:            "var any = `　`, other = `\u000b`;",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    25,
				},
			},
		},
		{
			Code:            "var any = `　`, other = `\u000b`;",
			Options:         "[{\"skipTemplates\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    25,
				},
			},
		},
		{
			Code:            "`something ${　 10} another thing`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    14,
				},
			},
		},
		{
			Code:            "`something ${10　} another thing`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    16,
				},
			},
		},
		{
			Code: `　
` + "`" + `　template` + "`" + ``,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
				},
			},
		},
		{
			Code: `　
` + "`" + `　multiline
template` + "`" + ``,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
				},
			},
		},
		{
			Code:            "　`　template`",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
				},
			},
		},
		{
			Code: `　` + "`" + `　multiline
template` + "`" + ``,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
				},
			},
		},
		{
			Code:            "`　template`　",
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    12,
				},
			},
		},
		{
			Code: `` + "`" + `　multiline
template` + "`" + `　`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    10,
				},
			},
		},
		{
			Code: `` + "`" + `　template` + "`" + `
　`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
				},
			},
		},
		{
			Code: `` + "`" + `　multiline
template` + "`" + `
　`,
			Options:         "[{\"skipTemplates\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      3,
					Column:    1,
				},
			},
		},
		{
			Code: `var foo =  bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
			},
		},
		{
			Code: `var foo =bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 11,
				},
			},
		},
		{
			Code: `var foo =  bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 13,
				},
			},
		},
		{
			Code: `var foo =  bar;`, Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 13,
				},
			},
		},
		{
			Code: `var foo =   bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    13,
					EndLine:   1,
					EndColumn: 14,
				},
			},
		},
		{
			Code: `var foo = bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   1,
					EndColumn: 16,
				},
			},
		},
		{
			Code: ``,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `   `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 4,
				},
			},
		},
		{
			Code: `var foo = 
bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 12,
				},
			},
		},
		{
			Code: `var foo =
bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    10,
					EndLine:   1,
					EndColumn: 11,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `var foo = 
bar
;
`, Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   1,
					EndColumn: 13,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 4,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      3,
					Column:    2,
					EndLine:   3,
					EndColumn: 4,
				},
			},
		},
		{
			Code: `var foo =  bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    11,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var foo =  bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    10,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var foo = bar; `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    15,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: ` `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    1,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `foo  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   2,
					EndColumn: 1,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
					EndLine:   3,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `foo  `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   2,
					EndColumn: 1,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
					EndLine:   3,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `foo 
 `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   2,
					EndColumn: 1,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `foo `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    4,
					EndLine:   1,
					EndColumn: 5,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    5,
					EndLine:   2,
					EndColumn: 1,
				},
				{
					MessageId: "noIrregularWhitespace",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 2,
				},
			},
		},
		{
			Code:            `<div></div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code: `<div></div>;`, LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div></div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div>᠎</div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div>` + "\xef\xbb\xbf" + `</div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div>​</div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div> </div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:            `<div>　</div>;`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "noIrregularWhitespace",
					Line:      1,
					Column:    6,
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestYieldStarSpacingRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":6}}", "yield-star-spacing", []ValidTestCase{
		{Code: `function *foo(){ yield foo; }`},
		{Code: `function *foo(){ yield* foo; }`},
		{
			Code:    `function *foo(){ yield foo; }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ yield* foo; }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ yield* foo(); }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ yield* 0 }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ yield* []; }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ var result = yield* foo(); }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ var result = yield* (foo()); }`,
			Options: "[\"after\"]",
		},
		{
			Code:    `function *foo(){ yield foo; }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ yield *foo; }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ yield *foo(); }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ yield *0 }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ yield *[]; }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ var result = yield *foo(); }`,
			Options: "[\"before\"]",
		},
		{
			Code:    `function *foo(){ yield foo; }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ yield * foo(); }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ yield * 0 }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ yield * []; }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ var result = yield * foo(); }`,
			Options: "[\"both\"]",
		},
		{
			Code:    `function *foo(){ yield foo; }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ yield*foo; }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ yield*foo(); }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ yield*0 }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ yield*[]; }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ var result = yield*foo(); }`,
			Options: "[\"neither\"]",
		},
		{
			Code:    `function *foo(){ yield* foo; }`,
			Options: "[{\"before\":false,\"after\":true}]",
		},
		{
			Code:    `function *foo(){ yield *foo; }`,
			Options: "[{\"before\":true,\"after\":false}]",
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Options: "[{\"before\":true,\"after\":true}]",
		},
		{
			Code:    `function *foo(){ yield*foo; }`,
			Options: "[{\"before\":false,\"after\":false}]",
		},
	}, []InvalidTestCase{
		{
			Code:   `function *foo(){ yield *foo1; }`,
			Output: `function *foo(){ yield* foo1; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield *foo1; }`,
			Output:  `function *foo(){ yield* foo1; }`,
			Options: "[\"after\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Output:  `function *foo(){ yield* foo; }`,
			Options: "[\"after\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
			},
		},
		{
			Code:    `function *foo(){ yield*foo2; }`,
			Output:  `function *foo(){ yield* foo2; }`,
			Options: "[\"after\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield* foo; }`,
			Output:  `function *foo(){ yield *foo; }`,
			Options: "[\"before\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingBefore",
				},
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Output:  `function *foo(){ yield *foo; }`,
			Options: "[\"before\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield*foo; }`,
			Output:  `function *foo(){ yield *foo; }`,
			Options: "[\"before\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingBefore",
				},
			},
		},
		{
			Code:    `function *foo(){ yield* foo; }`,
			Output:  `function *foo(){ yield * foo; }`,
			Options: "[\"both\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingBefore",
				},
			},
		},
		{
			Code:    `function *foo(){ yield *foo3; }`,
			Output:  `function *foo(){ yield * foo3; }`,
			Options: "[\"both\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield*foo4; }`,
			Output:  `function *foo(){ yield * foo4; }`,
			Options: "[\"both\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingBefore",
				},
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield* foo; }`,
			Output:  `function *foo(){ yield*foo; }`,
			Options: "[\"neither\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield *foo; }`,
			Output:  `function *foo(){ yield*foo; }`,
			Options: "[\"neither\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
			},
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Output:  `function *foo(){ yield*foo; }`,
			Options: "[\"neither\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield*foo; }`,
			Output:  `function *foo(){ yield* foo; }`,
			Options: "[{\"before\":false,\"after\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Output:  `function *foo(){ yield *foo; }`,
			Options: "[{\"before\":true,\"after\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield*foo; }`,
			Output:  `function *foo(){ yield * foo; }`,
			Options: "[{\"before\":true,\"after\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingBefore",
				},
				{
					MessageId: "missingAfter",
				},
			},
		},
		{
			Code:    `function *foo(){ yield * foo; }`,
			Output:  `function *foo(){ yield*foo; }`,
			Options: "[{\"before\":false,\"after\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedBefore",
				},
				{
					MessageId: "unexpectedAfter",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoConstructorReturnRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":2015,\"sourceType\":\"script\"}}", "no-constructor-return", []ValidTestCase{
		{Code: `function fn() { return }`},
		{Code: `function fn(kumiko) { if (kumiko) { return kumiko } }`},
		{Code: `const fn = function () { return }`},
		{Code: `const fn = function () { if (kumiko) { return kumiko } }`},
		{Code: `const fn = () => { return }`},
		{Code: `const fn = () => { if (kumiko) { return kumiko } }`},
		{
			Code:            `return 'Kumiko Oumae'`,
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"globalReturn\":true}}}",
		},
		{Code: `class C {  }`},
		{Code: `class C { constructor() {} }`},
		{Code: `class C { constructor() { let v } }`},
		{Code: `class C { method() { return '' } }`},
		{Code: `class C { get value() { return '' } }`},
		{Code: `class C { constructor(a) { if (!a) { return } else { a() } } }`},
		{Code: `class C { constructor() { function fn() { return true } } }`},
		{Code: `class C { constructor() { this.fn = function () { return true } } }`},
		{Code: `class C { constructor() { this.fn = () => { return true } } }`},
		{Code: `class C { constructor() { return } }`},
		{Code: `class C { constructor() { { return } } }`},
	}, []InvalidTestCase{
		{
			Code: `class C { constructor() { return '' } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `class C { constructor(a) { if (!a) { return '' } else { a() } } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestGlobalRequireRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":5,\"sourceType\":\"script\"}}", "global-require", []ValidTestCase{
		{
			Code: `var x = require('y');`,
		},
		{
			Code: `if (x) { x.require('y'); }`,
		},
		{
			Code: `var x;
x = require('y');`,
		},
		{
			Code: `var x = 1, y = require('y');`,
		},
		{
			Code: `var x = require('y'), y = require('y'), z = require('z');`,
		},
		{
			Code: `var x = require('y').foo;`,
		},
		{
			Code: `require('y').foo();`,
		},
		{
			Code: `require('y');`,
		},
		{
			Code: `function x(){}


x();


if (x > y) {
	doSomething()

}

var x = require('y').foo;`,
		},
		{
			Code: `var logger = require(DEBUG ? 'dev-logger' : 'logger');`,
		},
		{
			Code: `var logger = DEBUG ? require('dev-logger') : require('logger');`,
		},
		{
			Code: `function localScopedRequire(require) { require('y'); }`,
		},
		{
			Code: `var someFunc = require('./someFunc'); someFunc(function(require) { return('bananas'); });`,
		},
		{
			Code:            `var x = require('y')?.foo;`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
		},
	}, []InvalidTestCase{
		{
			Code: `if (process.env.NODE_ENV === 'DEVELOPMENT') {
	require('debug');
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var x; if (y) { x = require('debug'); }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `var x; if (y) { x = require('debug').baz; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `function x() { require('y') }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `try { require('x'); } catch (e) { console.log(e); }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var getModule = x => require(x);`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code:            `var x = (x => require(x))('weird')`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
		{
			Code: `switch(x) { case '1': require('1'); break; }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
				},
			},
		},
	})
}

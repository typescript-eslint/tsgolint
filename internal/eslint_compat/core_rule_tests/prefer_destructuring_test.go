// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestPreferDestructuringRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":2022}}", "prefer-destructuring", []ValidTestCase{
		{Code: `var [foo] = array;`},
		{Code: `var { foo } = object;`},
		{Code: `var foo;`},
		{
			Code:    `var foo = object.bar;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}}]",
		},
		{
			Code:    `var foo = object.bar;`,
			Options: "[{\"object\":true}]",
		},
		{
			Code:    `var foo = object.bar;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `var foo = object.bar;`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `var foo = object['bar'];`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `var foo = object[bar];`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `var { bar: foo } = object;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `var { bar: foo } = object;`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `var { [bar]: foo } = object;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `var { [bar]: foo } = object;`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":false}}]",
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"array\":false}]",
		},
		{
			Code:    `var foo = object.foo;`,
			Options: "[{\"VariableDeclarator\":{\"object\":false}}]",
		},
		{
			Code:    `var foo = object['foo'];`,
			Options: "[{\"VariableDeclarator\":{\"object\":false}}]",
		},
		{Code: `({ foo } = object);`},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":false}},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"array\":false},{\"enforceForRenamedProperties\":true}]",
		},
		{Code: `[foo] = array;`},
		{Code: `foo += array[0]`},
		{
			Code:            `foo &&= array[0]`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
		},
		{Code: `foo += bar.foo`},
		{
			Code:            `foo ||= bar.foo`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
		},
		{
			Code:            `foo ??= bar['foo']`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
		},
		{
			Code:    `foo = object.foo;`,
			Options: "[{\"AssignmentExpression\":{\"object\":false}},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `foo = object.foo;`,
			Options: "[{\"AssignmentExpression\":{\"object\":false}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `foo = array[0];`,
			Options: "[{\"AssignmentExpression\":{\"array\":false}},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `foo = array[0];`,
			Options: "[{\"AssignmentExpression\":{\"array\":false}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":true},\"AssignmentExpression\":{\"array\":false}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":false},\"AssignmentExpression\":{\"array\":true}},{\"enforceForRenamedProperties\":false}]",
		},
		{
			Code:    `foo = object.foo;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true},\"AssignmentExpression\":{\"object\":false}}]",
		},
		{
			Code:    `var foo = object.foo;`,
			Options: "[{\"VariableDeclarator\":{\"object\":false},\"AssignmentExpression\":{\"object\":true}}]",
		},
		{Code: `class Foo extends Bar { static foo() {var foo = super.foo} }`},
		{Code: `foo = bar[foo];`},
		{Code: `var foo = bar[foo];`},
		{
			Code:    `var {foo: {bar}} = object;`,
			Options: "[{\"object\":true}]",
		},
		{
			Code:    `var {bar} = object.foo;`,
			Options: "[{\"object\":true}]",
		},
		{Code: `var foo = array?.[0];`},
		{Code: `var foo = object?.foo;`},
		{Code: `class C { #x; foo() { const x = this.#x; } }`},
		{Code: `class C { #x; foo() { x = this.#x; } }`},
		{Code: `class C { #x; foo(a) { x = a.#x; } }`},
		{
			Code:    `class C { #x; foo() { const x = this.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo() { const y = this.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo() { x = this.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo() { y = this.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo(a) { x = a.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo(a) { y = a.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
		{
			Code:    `class C { #x; foo() { x = this.a.#x; } }`,
			Options: "[{\"array\":true,\"object\":true},{\"enforceForRenamedProperties\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `var foo = array[0];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `foo = array[0];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.foo;`,
			Output: `var {foo} = object;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = (a, b).foo;`,
			Output: `var {foo} = (a, b);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var length = (() => {}).length;`,
			Output: `var {length} = () => {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = (a = b).foo;`,
			Output: `var {foo} = a = b;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = (a || b).foo;`,
			Output: `var {foo} = a || b;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = (f()).foo;`,
			Output: `var {foo} = f();`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.bar.foo;`,
			Output: `var {foo} = object.bar;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foobar = object.bar;`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foobar = object.bar;`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = object[bar];`,
			Options: "[{\"VariableDeclarator\":{\"object\":true}},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = object[bar];`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = object[foo];`,
			Options: "[{\"object\":true},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = object['foo'];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `foo = object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `foo = object['foo'];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":true}},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `foo = array[0];`,
			Options: "[{\"AssignmentExpression\":{\"array\":true}}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":true},\"AssignmentExpression\":{\"array\":false}},{\"enforceForRenamedProperties\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `var foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":true},\"AssignmentExpression\":{\"array\":false}}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `foo = array[0];`,
			Options: "[{\"VariableDeclarator\":{\"array\":false},\"AssignmentExpression\":{\"array\":true}}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:    `foo = object.foo;`,
			Options: "[{\"VariableDeclarator\":{\"array\":true,\"object\":false},\"AssignmentExpression\":{\"object\":true}}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `class Foo extends Bar { static foo() {var bar = super.foo.bar} }`,
			Output: `class Foo extends Bar { static foo() {var {bar} = super.foo} }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var /* comment */ foo = object.foo;`,
			Output: `var /* comment */ {foo} = object;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var a, /* comment */foo = object.foo;`,
			Output: `var a, /* comment */{foo} = object;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo /* comment */ = object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var a, foo /* comment */ = object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo /* comment */ = object.foo, a;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo // comment
 = object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = /* comment */ object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = // comment
 object.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = (/* comment */ object).foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = (object /* comment */).foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = bar(/* comment */).foo;`,
			Output: `var {foo} = bar(/* comment */);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = bar/* comment */.baz.foo;`,
			Output: `var {foo} = bar/* comment */.baz;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = bar[// comment
baz].foo;`,
			Output: `var {foo} = bar[// comment
baz];`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo // comment
 = bar(/* comment */).foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = bar/* comment */.baz/* comment */.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = object// comment
.foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = object./* comment */foo;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = (/* comment */ object.foo);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = (object.foo /* comment */);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.foo/* comment */;`,
			Output: `var {foo} = object/* comment */;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.foo// comment`,
			Output: `var {foo} = object// comment`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.foo/* comment */, a;`,
			Output: `var {foo} = object/* comment */, a;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code: `var foo = object.foo// comment
, a;`,
			Output: `var {foo} = object// comment
, a;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
		{
			Code:   `var foo = object.foo, /* comment */ a;`,
			Output: `var {foo} = object, /* comment */ a;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "preferDestructuring",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestMaxLenRule(t *testing.T) {
	RunRuleTester(t, "{}", "max-len", []ValidTestCase{
		{Code: `var x = 5;
var x = 2;`},
		{
			Code: `var x = 5;
var x = 2;`,
			Options: "[80,4]",
		},
		{
			Code: `			var i = 1;
			var j = 1;`,
			Options: "[15,1]",
		},
		{
			Code: `var one		= 1;
var three	= 3;`,
			Options: "[16,4]",
		},
		{
			Code: `	var one		= 1;
	var three	= 3;`,
			Options: "[20,4]",
		},
		{
			Code: `var i = 1;` + "\r" + `
var i = 1;
`,
			Options: "[10,4]",
		},
		{
			Code: `
// Blank line on top
var foo = module.exports = {};
`,
			Options: "[80,4]",
		},
		{Code: `
// Blank line on top
var foo = module.exports = {};
`},
		{
			Code:    `var foo = module.exports = {}; // really long trailing comment`,
			Options: "[40,4,{\"ignoreComments\":true}]",
		},
		{
			Code:    `foo(); 	// strips entire comment *and* trailing whitespace`,
			Options: "[6,4,{\"ignoreComments\":true}]",
		},
		{
			Code:    `// really long comment on its own line sitting here`,
			Options: "[40,4,{\"ignoreComments\":true}]",
		},
		{
			Code:    `var foo = module.exports = {}; /* inline some other comments */ //more`,
			Options: "[40,4,{\"ignoreComments\":true}]",
		},
		{Code: `var /*inline-comment*/ i = 1;`},
		{
			Code:    `var /*inline-comment*/ i = 1; // with really long trailing comment`,
			Options: "[40,4,{\"ignoreComments\":true}]",
		},
		{
			Code:    `foo('http://example.com/this/is/?a=longish&url=in#here');`,
			Options: "[40,4,{\"ignoreUrls\":true}]",
		},
		{
			Code:    `foo(bar(bazz('this is a long'), 'line of'), 'stuff');`,
			Options: "[40,4,{\"ignorePattern\":\"foo.+bazz\\\\(\"}]",
		},
		{
			Code: `/* hey there! this is a multiline
   comment with longish lines in various places
   but
   with a short line-length */`,
			Options: "[10,4,{\"ignoreComments\":true}]",
		},
		{
			Code: `// I like short comments
function butLongSourceLines() { weird(eh()) }`,
			Options: "[80,{\"tabWidth\":4,\"comments\":30}]",
		},
		{
			Code: `// I like longer comments and shorter code
function see() { odd(eh()) }`,
			Options: "[30,{\"tabWidth\":4,\"comments\":80}]",
		},
		{
			Code: `// Full line comment
someCode(); // With a long trailing comment.`,
			Options: "[{\"code\":30,\"tabWidth\":4,\"comments\":20,\"ignoreTrailingComments\":true}]",
		},
		{
			Code:    `var foo = module.exports = {}; // really long trailing comment`,
			Options: "[40,4,{\"ignoreTrailingComments\":true}]",
		},
		{
			Code:    `var foo = module.exports = {}; /* inline some other comments */ //more`,
			Options: "[40,4,{\"ignoreTrailingComments\":true}]",
		},
		{
			Code:    `var foo = module.exports = {}; // really long trailing comment`,
			Options: "[40,4,{\"ignoreComments\":true,\"ignoreTrailingComments\":false}]",
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = 'this is a very long string';`,
			Options: "[29,4,{\"ignoreStrings\":true}]",
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = "this is a very long string";`,
			Options: "[29,4,{\"ignoreStrings\":true}]",
		},
		{
			Code: `var str = "this is a very long string\
with continuation";`,
			Options: "[29,4,{\"ignoreStrings\":true}]",
		},
		{
			Code: `var str = "this is a very long string\
with continuation\
and with another very very long continuation\
and ending";`,
			Options: "[29,4,{\"ignoreStrings\":true}]",
		},
		{
			Code:            `var foo = <div className="this is a very long string"></div>;`,
			Options:         "[29,4,{\"ignoreStrings\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = ` + "`" + `this is a very long string` + "`" + `;`,
			Options:         "[29,4,{\"ignoreTemplateLiterals\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = ` + "`" + `this is a very long string
and this is another line that is very long` + "`" + `;`,
			Options:         "[29,4,{\"ignoreTemplateLiterals\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = ` + "`" + `this is a very long string
and this is another line that is very long
and here is another
 and another!` + "`" + `;`,
			Options:         "[29,4,{\"ignoreTemplateLiterals\":true}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `var foo = /this is a very long pattern/;`,
			Options: "[29,4,{\"ignoreRegExpLiterals\":true}]",
		},
		{
			Code: `function foo() {
//this line has 29 characters
}`,
			Options: "[40,4,{\"comments\":29}]",
		},
		{
			Code: `function foo() {
    //this line has 33 characters
}`,
			Options: "[40,4,{\"comments\":33}]",
		},
		{
			Code: `function foo() {
/*this line has 29 characters
and this one has 21*/
}`,
			Options: "[40,4,{\"comments\":29}]",
		},
		{
			Code: `function foo() {
    /*this line has 33 characters
    and this one has 25*/
}`,
			Options: "[40,4,{\"comments\":33}]",
		},
		{
			Code: `function foo() {
    var a; /*this line has 40 characters
    and this one has 36 characters*/
}`,
			Options: "[40,4,{\"comments\":36}]",
		},
		{
			Code: `function foo() {
    /*this line has 33 characters
    and this one has 43 characters*/ var a;
}`,
			Options: "[43,4,{\"comments\":33}]",
		},
		{Code: ``},
		{
			Code:    `'üôÇüòÄüòÜüòéüòäüòúüòâüëç'`,
			Options: "[10]",
		},
		{
			Code:    `var longNameLongName = 'ùåÜùåÜ'`,
			Options: "[5,{\"ignorePattern\":\"ùåÜ{2}\"}]",
		},
		{
			Code:    `	foo`,
			Options: "[4,{\"tabWidth\":0}]",
		},
		{
			Code: `var jsx = (<>
  { /* this line has 38 characters */}
</>)`,
			Options:         "[15,{\"comments\":38}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
		{ /* this line has 40 characters */}
</>)`,
			Options:         "[15,4,{\"comments\":44}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  <> text </>{ /* this line has 49 characters */}
</>)`,
			Options:         "[13,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line has 44 characters */}
</>)`,
			Options:         "[44,{\"comments\":37}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line has 44 characters */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = <Foo
         attr = {a && b/* this line has 57 characters */}
></Foo>;`,
			Options:         "[57]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = <Foo
         attr = {/* this line has 57 characters */a && b}
></Foo>;`,
			Options:         "[57]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = <Foo
         attr = 
          {a & b/* this line has 50 characters */}
></Foo>;`,
			Options:         "[50]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  <> </> {/* this line with two separate comments */} {/* have 80 characters */}
</>)`,
			Options:         "[80]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have 80 characters */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have 80 characters */}
</>)`,
			Options:         "[37,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have > 80 characters */ /* another comment in same braces */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have > 80 characters */ /* another comment in same braces */}
</>)`,
			Options:         "[37,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/*
       this line has 34 characters
   */}
</>)`,
			Options:         "[33,{\"comments\":34}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {/*
       this line has 34 characters
   */}
</>)`,
			Options:         "[33,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {a & b /* this line has 34 characters
   */}
</>)`,
			Options:         "[33,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
		{
			Code: `var jsx = (<>
  {a & b /* this line has 34 characters
   */}
</>)`,
			Options:         "[33,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
		},
	}, []InvalidTestCase{
		{
			Code: `																			var i = 1;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 30,
				},
			},
		},
		{
			Code:    `var x = 5, y = 2, z = 5;`,
			Options: "[10,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 25,
				},
			},
		},
		{
			Code:    `			var i = 1;`,
			Options: "[15,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 14,
				},
			},
		},
		{
			Code: `			var i = 1;
			var j = 1;`,
			Options: "[15,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 14,
				},
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 14,
				},
			},
		},
		{
			Code:    `var /*this is a long non-removed inline comment*/ i = 1;`,
			Options: "[20,4,{\"ignoreComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 57,
				},
			},
		},
		{
			Code: `var foobar = 'this line isn\'t matched by the regexp';
var fizzbuzz = 'but this one is matched by the regexp';
`,
			Options: "[20,4,{\"ignorePattern\":\"fizzbuzz\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 55,
				},
			},
		},
		{
			Code:    `var longLine = 'will trigger'; // even with a comment`,
			Options: "[10,4,{\"ignoreComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 31,
				},
			},
		},
		{
			Code:    `var foo = module.exports = {}; // really long trailing comment`,
			Options: "[40,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 63,
				},
			},
		},
		{
			Code:    `foo('http://example.com/this/is/?a=longish&url=in#here');`,
			Options: "[40,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 58,
				},
			},
		},
		{
			Code:    `foo(bar(bazz('this is a long'), 'line of'), 'stuff');`,
			Options: "[40,4]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 54,
				},
			},
		},
		{
			Code:    `// A comment that exceeds the max comment length.`,
			Options: "[80,4,{\"comments\":20}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 50,
				},
			},
		},
		{
			Code:    `// A comment that exceeds the max comment length and the max code length, but will fail for being too long of a comment`,
			Options: "[40,4,{\"comments\":80}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 120,
				},
			},
		},
		{
			Code:    `// A comment that exceeds the max comment length.`,
			Options: "[{\"code\":20}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 50,
				},
			},
		},
		{
			Code:    `//This is very long comment with more than 40 characters which is invalid`,
			Options: "[40,4,{\"ignoreTrailingComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 74,
				},
			},
		},
		{
			Code: `function foo() {
//this line has 29 characters
}`,
			Options: "[40,4,{\"comments\":28}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 30,
				},
			},
		},
		{
			Code: `function foo() {
    //this line has 33 characters
}`,
			Options: "[40,4,{\"comments\":32}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 34,
				},
			},
		},
		{
			Code: `function foo() {
/*this line has 29 characters
and this one has 32 characters*/
}`,
			Options: "[40,4,{\"comments\":28}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 30,
				},
				{
					MessageId: "maxComment",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 33,
				},
			},
		},
		{
			Code: `function foo() {
    /*this line has 33 characters
    and this one has 36 characters*/
}`,
			Options: "[40,4,{\"comments\":32}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 34,
				},
				{
					MessageId: "maxComment",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 37,
				},
			},
		},
		{
			Code: `function foo() {
    var a; /*this line has 40 characters
    and this one has 36 characters*/
}`,
			Options: "[39,4,{\"comments\":35}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 41,
				},
				{
					MessageId: "maxComment",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 37,
				},
			},
		},
		{
			Code: `function foo() {
    /*this line has 33 characters
    and this one has 43 characters*/ var a;
}`,
			Options: "[42,4,{\"comments\":32}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 34,
				},
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 44,
				},
			},
		},
		{
			Code: `// This commented line has precisely 51 characters.
var x = 'This line also has exactly 51 characters';`,
			Options: "[20,{\"ignoreComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 52,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = 'this is a very long string';`,
			Options: "[29,{\"ignoreStrings\":false,\"ignoreTemplateLiterals\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 40,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = /this is a very very long pattern/;`,
			Options: "[29,{\"ignoreStrings\":false,\"ignoreRegExpLiterals\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 46,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = new RegExp('this is a very very long pattern');`,
			Options: "[29,{\"ignoreStrings\":false,\"ignoreRegExpLiterals\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 58,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = "this is a very long string";`,
			Options: "[29,{\"ignoreStrings\":false,\"ignoreTemplateLiterals\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 40,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = ` + "`" + `this is a very long string` + "`" + `;`,
			Options:         "[29,{\"ignoreStrings\":false,\"ignoreTemplateLiterals\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 40,
				},
			},
		},
		{
			Code: `var foo = veryLongIdentifier;
var bar = ` + "`" + `this is a very long string
and this is another line that is very long` + "`" + `;`,
			Options:         "[29,{\"ignoreStrings\":false,\"ignoreTemplateLiterals\":false}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 38,
				},
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 45,
				},
			},
		},
		{
			Code:            `var foo = <div>this is a very very very long string</div>;`,
			Options:         "[29,4,{\"ignoreStrings\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 59,
				},
			},
		},
		{
			Code:    `'üôÅüòÅüòü‚òπÔ∏èüò£üòñüò©üò±üëé'`,
			Options: "[10]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 21,
				},
			},
		},
		{
			Code:    `a`,
			Options: "[0]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `var jsx = (<>
  { /* this line has 38 characters */}
</>)`,
			Options:         "[15,{\"comments\":37}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var jsx = (<>
		{ /* this line has 40 characters */}
</>)`,
			Options:         "[15,4,{\"comments\":40}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "maxComment",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var jsx = (<>
{ 38/* this line has 38 characters */}
</>)`,
			Options:         "[15,{\"comments\":38}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var jsx = (<>
{ 38/* this line has 38 characters */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var jsx = (<>
{ 38/* this line has 38 characters */}
</>)`,
			Options:         "[37,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 39,
				},
			},
		},
		{
			Code: `var jsx = (<>
   <> 50 </>{ 50/* this line has 50 characters */}
</>)`,
			Options:         "[49,{\"comments\":100}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 51,
				},
			},
		},
		{
			Code: `var jsx = (<>
         {/* this line has 44 characters */}
  <> </> {/* this line has 44 characters */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 45,
				},
			},
		},
		{
			Code: `var jsx = <Foo
         attr = {a && b/* this line has 57 characters */}
></Foo>;`,
			Options:         "[56]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 58,
				},
			},
		},
		{
			Code: `var jsx = <Foo
         attr = {/* this line has 57 characters */a && b}
></Foo>;`,
			Options:         "[56]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 58,
				},
			},
		},
		{
			Code: `var jsx = <Foo
         attr = {a & b/* this line has 56 characters */}
></Foo>;`,
			Options:         "[55,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 57,
				},
			},
		},
		{
			Code: `var jsx = <Foo
         attr = 
          {a & b /* this line has 51 characters */}
></Foo>;`,
			Options:         "[30,{\"comments\":44}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 52,
				},
			},
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have 80 characters */}
</>)`,
			Options:         "[79]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 81,
				},
			},
		},
		{
			Code: `var jsx = (<>
  <> </> {/* this line with two separate comments */} {/* have 87 characters */} <> </>
</>)`,
			Options:         "[85,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 88,
				},
			},
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have 87 characters */} <> </>
</>)`,
			Options:         "[37,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 88,
				},
			},
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this line with two separate comments */} {/* have > 80 characters */ /* another comment in same braces */}
</>)`,
			Options:         "[37]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 120,
				},
			},
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this is not treated as a comment */ a & b} {/* trailing */ /* comments */}
</>)`,
			Options:         "[37,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 56,
				},
			},
		},
		{
			Code: `var jsx = (<>
  {/* this line has 37 characters */}
  <> </> {/* this is not treated as a comment */ a & b} {/* trailing */ /* comments */}
</>)`,
			Options:         "[37,{\"ignoreComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 56,
				},
			},
		},
		{
			Code: `var jsx = (<>
12345678901234{/*
*/}
</>)`,
			Options:         "[14,{\"ignoreTrailingComments\":true}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `var jsx = (<>
{/*
this line has 31 characters */}
</>)`,
			Options:         "[30,{\"comments\":100}]",
			LanguageOptions: "{\"parserOptions\":{\"ecmaFeatures\":{\"jsx\":true}}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "max",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 32,
				},
			},
		},
	})
}

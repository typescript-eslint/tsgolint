// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestFuncNamesRule(t *testing.T) {
	RunRuleTester(t, "{}", "func-names", []ValidTestCase{
		{Code: `Foo.prototype.bar = function bar(){};`},
		{
			Code:            `Foo.prototype.bar = () => {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `function foo(){}`},
		{Code: `function test(d, e, f) {}`},
		{Code: `new function bar(){}`},
		{Code: `exports = { get foo() { return 1; }, set bar(val) { return val; } };`},
		{
			Code:            `({ foo() { return 1; } });`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class A { constructor(){} foo(){} get bar(){} set baz(value){} static qux(){}}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function foo() {}`,
			Options: "[\"always\"]",
		},
		{
			Code:    `var a = function foo() {};`,
			Options: "[\"always\"]",
		},
		{
			Code:            `class A { constructor(){} foo(){} get bar(){} set baz(value){} static qux(){}}`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({ foo() {} });`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `var foo = function(){};`,
			Options: "[\"as-needed\"]",
		},
		{
			Code:    `({foo: function(){}});`,
			Options: "[\"as-needed\"]",
		},
		{
			Code:    `(foo = function(){});`,
			Options: "[\"as-needed\"]",
		},
		{
			Code:            `({foo = function(){}} = {});`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({key: foo = function(){}} = {});`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[foo = function(){}] = [];`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `function fn(foo = function(){}) {}`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function foo() {}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `var a = function() {};`,
			Options: "[\"never\"]",
		},
		{
			Code:    `var a = function foo() { foo(); };`,
			Options: "[\"never\"]",
		},
		{
			Code:    `var foo = {bar: function() {}};`,
			Options: "[\"never\"]",
		},
		{
			Code:    `$('#foo').click(function() {});`,
			Options: "[\"never\"]",
		},
		{
			Code:    `Foo.prototype.bar = function() {};`,
			Options: "[\"never\"]",
		},
		{
			Code:            `class A { constructor(){} foo(){} get bar(){} set baz(value){} static qux(){}}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({ foo() {} });`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `export default function foo() {}`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
		},
		{
			Code:            `export default function foo() {}`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
		},
		{
			Code:            `export default function foo() {}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
		},
		{
			Code:            `export default function() {}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"always\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"always\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"always\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"as-needed\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"never\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"never\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"never\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"never\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"never\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"never\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"always\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"always\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"always\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"as-needed\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"as-needed\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class C { foo = function() {}; }`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { [foo] = function() {}; }`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { #foo = function() {}; }`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
	}, []InvalidTestCase{
		{
			Code: `Foo.prototype.bar = function() {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    21,
					EndColumn: 29,
				},
			},
		},
		{
			Code: `(function(){}())`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 10,
				},
			},
		},
		{
			Code: `f(function(){})`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    3,
					EndColumn: 11,
				},
			},
		},
		{
			Code: `var a = new Date(function() {});`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    18,
					EndColumn: 26,
				},
			},
		},
		{
			Code: `var test = function(d, e, f) {};`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    12,
					EndColumn: 20,
				},
			},
		},
		{
			Code: `new function() {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    5,
					EndColumn: 13,
				},
			},
		},
		{
			Code:    `Foo.prototype.bar = function() {};`,
			Options: "[\"as-needed\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    21,
					EndColumn: 29,
				},
			},
		},
		{
			Code:    `(function(){}())`,
			Options: "[\"as-needed\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 10,
				},
			},
		},
		{
			Code:    `f(function(){})`,
			Options: "[\"as-needed\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    3,
					EndColumn: 11,
				},
			},
		},
		{
			Code:    `var a = new Date(function() {});`,
			Options: "[\"as-needed\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    18,
					EndColumn: 26,
				},
			},
		},
		{
			Code:    `new function() {}`,
			Options: "[\"as-needed\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    5,
					EndColumn: 13,
				},
			},
		},
		{
			Code:            `var {foo} = function(){};`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    13,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `({ a: obj.prop = function(){} } = foo);`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    18,
					EndColumn: 26,
				},
			},
		},
		{
			Code:            `[obj.prop = function(){}] = foo;`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    13,
					EndColumn: 21,
				},
			},
		},
		{
			Code:            `var { a: [b] = function(){} } = foo;`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    16,
					EndColumn: 24,
				},
			},
		},
		{
			Code:            `function foo({ a } = function(){}) {};`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    22,
					EndColumn: 30,
				},
			},
		},
		{
			Code:    `var x = function foo() {};`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    9,
					EndColumn: 21,
				},
			},
		},
		{
			Code:    `Foo.prototype.bar = function foo() {};`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    21,
					EndColumn: 33,
				},
			},
		},
		{
			Code:    `({foo: function foo() {}})`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    3,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `export default function() {}`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    16,
					EndColumn: 24,
				},
			},
		},
		{
			Code:            `export default function() {}`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    16,
					EndColumn: 24,
				},
			},
		},
		{
			Code:            `export default (function(){});`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"sourceType\":\"module\",\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    17,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    11,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"always\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"always\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    11,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"always\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"always\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"always\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"as-needed\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    11,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"as-needed\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"as-needed\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"never\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `var foo = function*() {};`,
			Options:         "[\"never\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    11,
					EndColumn: 20,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"never\",{\"generators\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *() {});`,
			Options:         "[\"never\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    15,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `(function*() {}())`,
			Options:         "[\"never\",{\"generators\":\"as-needed\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Line:      1,
					Column:    2,
					EndColumn: 11,
				},
			},
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    15,
					EndColumn: 28,
				},
			},
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"never\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    15,
					EndColumn: 28,
				},
			},
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"always\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    15,
					EndColumn: 28,
				},
			},
		},
		{
			Code:            `var foo = bar(function *baz() {});`,
			Options:         "[\"as-needed\",{\"generators\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Line:      1,
					Column:    15,
					EndColumn: 28,
				},
			},
		},
		{
			Code:            `class C { foo = function() {} }`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    11,
					EndColumn: 25,
				},
			},
		},
		{
			Code:            `class C { [foo] = function() {} }`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    11,
					EndColumn: 27,
				},
			},
		},
		{
			Code:            `class C { #foo = function() {} }`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    11,
					EndColumn: 26,
				},
			},
		},
		{
			Code:            `class C { foo = bar(function() {}) }`,
			Options:         "[\"as-needed\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unnamed",
					Column:    21,
					EndColumn: 29,
				},
			},
		},
		{
			Code:            `class C { foo = function bar() {} }`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "named",
					Column:    11,
					EndColumn: 29,
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestSortImportsRule(t *testing.T) {
	RunRuleTester(t, "{\"languageOptions\":{\"ecmaVersion\":6,\"sourceType\":\"module\"}}", "sort-imports", []ValidTestCase{
		{Code: `import a from 'foo.js';
import b from 'bar.js';
import c from 'baz.js';
`},
		{Code: `import * as B from 'foo.js';
import A from 'bar.js';`},
		{Code: `import * as B from 'foo.js';
import {a, b} from 'bar.js';`},
		{Code: `import {b, c} from 'bar.js';
import A from 'foo.js';`},
		{
			Code: `import A from 'bar.js';
import {b, c} from 'foo.js';`,
			Options: "[{\"memberSyntaxSortOrder\":[\"single\",\"multiple\",\"none\",\"all\"]}]",
		},
		{Code: `import {a, b} from 'bar.js';
import {c, d} from 'foo.js';`},
		{Code: `import A from 'foo.js';
import B from 'bar.js';`},
		{Code: `import A from 'foo.js';
import a from 'bar.js';`},
		{Code: `import a, * as b from 'foo.js';
import c from 'bar.js';`},
		{Code: `import 'foo.js';
 import a from 'bar.js';`},
		{Code: `import B from 'foo.js';
import a from 'bar.js';`},
		{
			Code: `import a from 'foo.js';
import B from 'bar.js';`,
			Options: "[{\"ignoreCase\":true}]",
		},
		{Code: `import {a, b, c, d} from 'foo.js';`},
		{
			Code: `import a from 'foo.js';
import B from 'bar.js';`,
			Options: "[{\"ignoreDeclarationSort\":true}]",
		},
		{
			Code:    `import {b, A, C, d} from 'foo.js';`,
			Options: "[{\"ignoreMemberSort\":true}]",
		},
		{
			Code:    `import {B, a, C, d} from 'foo.js';`,
			Options: "[{\"ignoreMemberSort\":true}]",
		},
		{
			Code:    `import {a, B, c, D} from 'foo.js';`,
			Options: "[{\"ignoreCase\":true}]",
		},
		{Code: `import a, * as b from 'foo.js';`},
		{Code: `import * as a from 'foo.js';

import b from 'bar.js';`},
		{Code: `import * as bar from 'bar.js';
import * as foo from 'foo.js';`},
		{
			Code: `import 'foo';
import bar from 'bar';`,
			Options: "[{\"ignoreCase\":true}]",
		},
		{Code: `import React, {Component} from 'react';`},
		{
			Code: `import b from 'b';

import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import a from 'a';

import 'b';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import { b } from 'b';


import { a } from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import b from 'b';
// comment
import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import b from 'b';
foo();
import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import { b } from 'b';/*
 comment 
*/import { a } from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import b from
'b';

import
 a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import c from 'c';

import a from 'a';
import b from 'b';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
		{
			Code: `import c from 'c';

import b from 'b';

import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `import a from 'foo.js';
import A from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'foo.js';
import a from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import {b, c} from 'foo.js';
import {a, d} from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import * as foo from 'foo.js';
import * as bar from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import a from 'foo.js';
import {b, c} from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSyntaxOrder",
				},
			},
		},
		{
			Code: `import a from 'foo.js';
import * as b from 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSyntaxOrder",
				},
			},
		},
		{
			Code: `import a from 'foo.js';
import 'bar.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSyntaxOrder",
				},
			},
		},
		{
			Code: `import b from 'bar.js';
import * as a from 'foo.js';`,
			Options: "[{\"memberSyntaxSortOrder\":[\"all\",\"single\",\"multiple\",\"none\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSyntaxOrder",
				},
			},
		},
		{
			Code:   `import {b, a, d, c} from 'foo.js';`,
			Output: `import {a, b, c, d} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import {b, a, d, c} from 'foo.js';
import {e, f, g, h} from 'bar.js';`,
			Output: `import {a, b, c, d} from 'foo.js';
import {e, f, g, h} from 'bar.js';`,
			Options: "[{\"ignoreDeclarationSort\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code:   `import {a, B, c, D} from 'foo.js';`,
			Output: `import {B, D, a, c} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import {zzzzz, /* comment */ aaaaa} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import {zzzzz /* comment */, aaaaa} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import {/* comment */ zzzzz, aaaaa} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import {zzzzz, aaaaa /* comment */} from 'foo.js';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `
              import {
                boop,
                foo,
                zoo,
                baz as qux,
                bar,
                beep
              } from 'foo.js';
            `,
			Output: `
              import {
                bar,
                beep,
                boop,
                foo,
                baz as qux,
                zoo
              } from 'foo.js';
            `,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b';
import a from 'a';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b';

import a from 'a';`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b';
import a from 'a';`,
			Options: "[{}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b';
import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code:    `import b from 'b';import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code:    `import b from 'b'; /* comment */ import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b'; // comment
import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b from 'b'; // comment 1
/* comment 2 */import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import { b } from 'b'; /* comment line 1 
 comment line 2 */ import { a } from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import b
from 'b'; import a
from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import { b } from 
'b'; /* comment */ import
 { a } from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import { b } from 
'b';
import
 { a } from 'a';`,
			Options: "[{\"allowSeparatedGroups\":false}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
				},
			},
		},
		{
			Code: `import c from 'c';

import b from 'b';
import a from 'a';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortImportsAlphabetically",
					Line:      4,
				},
			},
		},
		{
			Code: `import b from 'b';

import { c, a } from 'c';`,
			Output: `import b from 'b';

import { a, c } from 'c';`,
			Options: "[{\"allowSeparatedGroups\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "sortMembersAlphabetically",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoRestrictedModulesRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-restricted-modules", []ValidTestCase{
		{
			Code:    `require("fs")`,
			Options: "[\"crypto\"]",
		},
		{
			Code:    `require("path")`,
			Options: "[\"crypto\",\"stream\",\"os\"]",
		},
		{Code: `require("fs ")`},
		{
			Code:    `require(2)`,
			Options: "[\"crypto\"]",
		},
		{
			Code:    `require(foo)`,
			Options: "[\"crypto\"]",
		},
		{
			Code:    `var foo = bar('crypto');`,
			Options: "[\"crypto\"]",
		},
		{
			Code:    `require("foo/bar");`,
			Options: "[\"foo\"]",
		},
		{
			Code:    `var withPaths = require("foo/bar");`,
			Options: "[{\"paths\":[\"foo\",\"bar\"]}]",
		},
		{
			Code:    `var withPatterns = require("foo/bar");`,
			Options: "[{\"patterns\":[\"foo/c*\"]}]",
		},
		{
			Code:    `var withPatternsAndPaths = require("foo/bar");`,
			Options: "[{\"paths\":[\"foo\"],\"patterns\":[\"foo/c*\"]}]",
		},
		{
			Code:    `var withGitignores = require("foo/bar");`,
			Options: "[{\"paths\":[\"foo\"],\"patterns\":[\"foo/*\",\"!foo/bar\"]}]",
		},
		{
			Code:            "require(`fs`)",
			Options:         "[\"crypto\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            "require(`foo${bar}`)",
			Options:         "[\"foo\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `var foo = require('foo');`,
			Options: "[\"../foo\"]",
		},
		{
			Code:    `var foo = require('foo');`,
			Options: "[{\"paths\":[\"../foo\"]}]",
		},
		{
			Code:    `var foo = require('foo');`,
			Options: "[{\"patterns\":[\"../foo\"]}]",
		},
		{
			Code:    `var foo = require('foo');`,
			Options: "[\"/foo\"]",
		},
		{
			Code:    `var foo = require('foo');`,
			Options: "[{\"paths\":[\"/foo\"]}]",
		},
		{Code: `var relative = require('../foo');`},
		{
			Code:    `var relative = require('../foo');`,
			Options: "[\"../notFoo\"]",
		},
		{
			Code:    `var relativeWithPaths = require('../foo');`,
			Options: "[{\"paths\":[\"../notFoo\"]}]",
		},
		{
			Code:    `var relativeWithPatterns = require('../foo');`,
			Options: "[{\"patterns\":[\"notFoo\"]}]",
		},
		{Code: `var absolute = require('/foo');`},
		{
			Code:    `var absolute = require('/foo');`,
			Options: "[\"/notFoo\"]",
		},
		{
			Code:    `var absoluteWithPaths = require('/foo');`,
			Options: "[{\"paths\":[\"/notFoo\"]}]",
		},
		{
			Code:    `var absoluteWithPatterns = require('/foo');`,
			Options: "[{\"patterns\":[\"notFoo\"]}]",
		},
	}, []InvalidTestCase{
		{
			Code:    `require("fs")`,
			Options: "[\"fs\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:    `require("os ")`,
			Options: "[\"fs\",\"crypto \",\"stream\",\"os\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:    `require("foo/bar");`,
			Options: "[\"foo/bar\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:    `var withPaths = require("foo/bar");`,
			Options: "[{\"paths\":[\"foo/bar\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:    `var withPatterns = require("foo/bar");`,
			Options: "[{\"patterns\":[\"foo/*\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "patternMessage",
				},
			},
		},
		{
			Code:    `var withPatternsAndPaths = require("foo/bar");`,
			Options: "[{\"patterns\":[\"foo/*\"],\"paths\":[\"foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "patternMessage",
				},
			},
		},
		{
			Code:    `var withGitignores = require("foo/bar");`,
			Options: "[{\"patterns\":[\"foo/*\",\"!foo/baz\"],\"paths\":[\"foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "patternMessage",
				},
			},
		},
		{
			Code:    `var withGitignores = require("foo");`,
			Options: "[{\"name\":\"foo\",\"message\":\"Please use 'bar' module instead.\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "customMessage",
				},
			},
		},
		{
			Code:    `var withGitignores = require("bar");`,
			Options: "[\"foo\",{\"name\":\"bar\",\"message\":\"Please use 'baz' module instead.\"},\"baz\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "customMessage",
				},
			},
		},
		{
			Code:    `var withGitignores = require("foo");`,
			Options: "[{\"paths\":[{\"name\":\"foo\",\"message\":\"Please use 'bar' module instead.\"}]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "customMessage",
				},
			},
		},
		{
			Code:            "require(`fs`)",
			Options:         "[\"fs\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:            "require(`crypt\\o`);",
			Options:         "[\"crypto\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "defaultMessage",
				},
			},
		},
		{
			Code:    `var relative = require('../foo');`,
			Options: "[\"../foo\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'../foo' module is restricted from being used.",
					Line:               1,
					Column:             16,
					EndColumn:          33,
				},
			},
		},
		{
			Code:    `var relativeWithPaths = require('../foo');`,
			Options: "[{\"paths\":[\"../foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'../foo' module is restricted from being used.",
					Line:               1,
					Column:             25,
					EndColumn:          42,
				},
			},
		},
		{
			Code:    `var relativeWithPatterns = require('../foo');`,
			Options: "[{\"patterns\":[\"../foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'../foo' module is restricted from being used by a pattern.",
					Line:               1,
					Column:             28,
					EndColumn:          45,
				},
			},
		},
		{
			Code:    `var absolute = require('/foo');`,
			Options: "[\"/foo\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'/foo' module is restricted from being used.",
					Line:               1,
					Column:             16,
					EndColumn:          31,
				},
			},
		},
		{
			Code:    `var absoluteWithPaths = require('/foo');`,
			Options: "[{\"paths\":[\"/foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'/foo' module is restricted from being used.",
					Line:               1,
					Column:             25,
					EndColumn:          40,
				},
			},
		},
		{
			Code:    `var absoluteWithPatterns = require('/foo');`,
			Options: "[{\"patterns\":[\"foo\"]}]",
			Errors: []InvalidTestCaseError{
				{
					MessageDescription: "'/foo' module is restricted from being used by a pattern.",
					Line:               1,
					Column:             28,
					EndColumn:          43,
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoSelfAssignRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-self-assign", []ValidTestCase{
		{Code: `var a = a`},
		{Code: `a = b`},
		{Code: `a += a`},
		{Code: `a = +a`},
		{Code: `a = [a]`},
		{Code: `a &= a`},
		{Code: `a |= a`},
		{
			Code:            `let a = a`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `const a = a`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a] = a`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a = 1] = [a]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a, b] = [b, a]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a,, b] = [, b, a]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[x, a] = [...x, a]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[...a] = [...a, 1]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a, ...b] = [0, ...b, 1]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `[a, b] = {a, b}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a} = a)`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a = 1} = {a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a: b} = {a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a} = {a: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a} = {a() {}})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a} = {[a]: a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({[a]: b} = {[a]: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({'foo': a, 1: a} = {'bar': a, 2: a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `({a, ...b} = {a, ...b})`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:    `a.b = a.c`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `a.b = c.b`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `a.b = a[b]`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `a[b] = a.b`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `a.b().c = a.b().c`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `b().c = b().c`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:            `a.null = a[/(?<zero>0)/]`,
			Options:         "[{\"props\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
		},
		{
			Code:    `a[b + 1] = a[b + 1]`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `a.b = a.b`,
			Options: "[{\"props\":false}]",
		},
		{
			Code:    `a.b.c = a.b.c`,
			Options: "[{\"props\":false}]",
		},
		{
			Code:    `a[b] = a[b]`,
			Options: "[{\"props\":false}]",
		},
		{
			Code:    `a['b'] = a['b']`,
			Options: "[{\"props\":false}]",
		},
		{
			Code: `a[
    'b'
] = a[
    'b'
]`,
			Options: "[{\"props\":false}]",
		},
		{
			Code:    `this.x = this.y`,
			Options: "[{\"props\":true}]",
		},
		{
			Code:    `this.x = this.x`,
			Options: "[{\"props\":false}]",
		},
		{
			Code:            `class C { #field; foo() { this['#field'] = this.#field; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `class C { #field; foo() { this.#field = this['#field']; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
	}, []InvalidTestCase{
		{
			Code: `a = a`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[a] = [a]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[a, b] = [a, b]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[a, b] = [a, c]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[a, b] = [, b]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[a, ...b] = [a, ...b]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `[[a], {b}] = [[a], {b}]`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a} = {a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a: b} = {a: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({'a': b} = {'a': b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a: b} = {'a': b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({'a': b} = {a: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({1: b} = {1: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({1: b} = {'1': b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({'1': b} = {1: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({['a']: b} = {a: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            "({'a': b} = {[`a`]: b})",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({1: b} = {[1]: b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a, b} = {a, b})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a, b} = {b, a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a, b} = {c, a})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a: {b}, c: [d]} = {a: {b}, c: [d]})`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `({a, b} = {a, ...x, b})`,
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a.b = a.b`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a.b.c = a.b.c`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a[b] = a[b]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a['b'] = a['b']`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a[
    'b'
] = a[
    'b'
]`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:    `a.b = a.b`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:    `a.b.c = a.b.c`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:    `a[b] = a[b]`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:    `a['b'] = a['b']`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code: `a[
    'b'
] = a[
    'b'
]`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:    `this.x = this.x`,
			Options: "[{\"props\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `a['/(?<zero>0)/'] = a[/(?<zero>0)/]`,
			Options:         "[{\"props\":true}]",
			LanguageOptions: "{\"ecmaVersion\":2018}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `(a?.b).c = (a?.b).c`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `a.b = a?.b`,
			LanguageOptions: "{\"ecmaVersion\":2020}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `class C { #field; foo() { this.#field = this.#field; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `class C { #field; foo() { [this.#field] = [this.#field]; } }`,
			LanguageOptions: "{\"ecmaVersion\":2022}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `a &&= a`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `a ||= a`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
		{
			Code:            `a ??= a`,
			LanguageOptions: "{\"ecmaVersion\":2021}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "selfAssignment",
				},
			},
		},
	})
}

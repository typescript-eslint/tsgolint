// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestMaxLinesRule(t *testing.T) {
	RunRuleTester(t, "{}", "max-lines", []ValidTestCase{
		{Code: `var x;`},
		{Code: `var xy;
var xy;`},
		{
			Code:    `A`,
			Options: "[1]",
		},
		{
			Code: `A
`,
			Options: "[1]",
		},
		{
			Code:    `A` + "\r" + ``,
			Options: "[1]",
		},
		{
			Code: `A` + "\r" + `
`,
			Options: "[1]",
		},
		{
			Code: `var xy;
var xy;`,
			Options: "[2]",
		},
		{
			Code: `var xy;
var xy;
`,
			Options: "[2]",
		},
		{
			Code: `var xy;
var xy;`,
			Options: "[{\"max\":2}]",
		},
		{
			Code: `// comment
`,
			Options: "[{\"max\":0,\"skipComments\":true}]",
		},
		{
			Code: `foo;
 /* comment */
`,
			Options: "[{\"max\":1,\"skipComments\":true}]",
		},
		{
			Code: `//a single line comment
var xy;
var xy;
 /* a multiline
 really really
 long comment*/ `,
			Options: "[{\"max\":2,\"skipComments\":true}]",
		},
		{
			Code: `var x; /* inline comment
 spanning multiple lines */ var z;`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
		},
		{
			Code: `var x; /* inline comment
 spanning multiple lines */
var z;`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
		},
		{
			Code: `var x;

	
	  
var y;`,
			Options: "[{\"max\":2,\"skipBlankLines\":true}]",
		},
		{
			Code: `//a single line comment
var xy;
 
var xy;
 
 /* a multiline
 really really
 long comment*/`,
			Options: "[{\"max\":2,\"skipComments\":true,\"skipBlankLines\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `var xyz;
var xyz;
var xyz;`,
			Options: "[2]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 9,
				},
			},
		},
		{
			Code: `/* a multiline comment
 that goes to many lines*/
var xy;
var xy;`,
			Options: "[2]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 8,
				},
			},
		},
		{
			Code: `//a single line comment
var xy;
var xy;`,
			Options: "[2]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 8,
				},
			},
		},
		{
			Code: `var x;



var y;`,
			Options: "[{\"max\":2}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   5,
					EndColumn: 7,
				},
			},
		},
		{
			Code: `//a single line comment
var xy;
 
var xy;
 
 /* a multiline
 really really
 long comment*/`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      4,
					Column:    1,
					EndLine:   8,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `var x; // inline comment
var y;
var z;`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 7,
				},
			},
		},
		{
			Code: `var x; /* inline comment
 spanning multiple lines */
var y;
var z;`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      4,
					Column:    1,
					EndLine:   4,
					EndColumn: 7,
				},
			},
		},
		{
			Code: `//a single line comment
var xy;
 
var xy;
 
 /* a multiline
 really really
 long comment*/`,
			Options: "[{\"max\":2,\"skipBlankLines\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      4,
					Column:    1,
					EndLine:   8,
					EndColumn: 16,
				},
			},
		},
		{
			Code: `AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA
AAAAAAAA`,
			Options: "[{}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      301,
					Column:    1,
					EndLine:   301,
					EndColumn: 9,
				},
			},
		},
		{
			Code:    ``,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    ` `,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `
`,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code:    `A`,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `A
`,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   2,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `A
 `,
			Options: "[{\"max\":0}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      1,
					Column:    1,
					EndLine:   2,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `A
 `,
			Options: "[{\"max\":1}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      2,
					Column:    1,
					EndLine:   2,
					EndColumn: 2,
				},
			},
		},
		{
			Code: `A

`,
			Options: "[{\"max\":1}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      2,
					Column:    1,
					EndLine:   3,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x
var c;
console.log`,
			Options: "[{\"max\":2}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 12,
				},
			},
		},
		{
			Code: `var a = 'a',
c,
x;` + "\r" + ``,
			Options: "[{\"max\":2}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a',
c,
x;
`,
			Options: "[{\"max\":2}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `

var a = 'a',
c,
x;
`,
			Options: "[{\"max\":2,\"skipBlankLines\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      5,
					Column:    1,
					EndLine:   6,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x
var c;
console.log
// some block 
// comments`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   6,
					EndColumn: 12,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x
var c;
console.log
/* block comments */`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   5,
					EndColumn: 21,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x
var c;
console.log
/* block comments */
`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   6,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x
var c;
console.log
/** block 

 comments */`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   7,
					EndColumn: 13,
				},
			},
		},
		{
			Code: `var a = 'a'; 


// comment`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      3,
					Column:    1,
					EndLine:   4,
					EndColumn: 11,
				},
			},
		},
		{
			Code: `var a = 'a'; 
var x


var c;
console.log

`,
			Options: "[{\"max\":2,\"skipBlankLines\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      5,
					Column:    1,
					EndLine:   8,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a'; 


var x
var c;
console.log

`,
			Options: "[{\"max\":2,\"skipBlankLines\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      5,
					Column:    1,
					EndLine:   8,
					EndColumn: 1,
				},
			},
		},
		{
			Code: `var a = 'a'; 
//
var x
var c;
console.log
//`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      4,
					Column:    1,
					EndLine:   6,
					EndColumn: 3,
				},
			},
		},
		{
			Code: `// hello world
/*hello
 world 2 */
var a,
b
// hh
c,
e,
f;`,
			Options: "[{\"max\":2,\"skipComments\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      7,
					Column:    1,
					EndLine:   9,
					EndColumn: 3,
				},
			},
		},
		{
			Code: `
var x = '';

// comment

var b = '',
c,
d,
e

// comment`,
			Options: "[{\"max\":2,\"skipComments\":true,\"skipBlankLines\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "exceed",
					Line:      7,
					Column:    1,
					EndLine:   11,
					EndColumn: 11,
				},
			},
		},
	})
}

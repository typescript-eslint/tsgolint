// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoDupeElseIfRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-dupe-else-if", []ValidTestCase{
		{Code: `if (a) {} else if (b) {}`},
		{Code: `if (a); else if (b); else if (c);`},
		{Code: `if (true) {} else if (false) {} else {}`},
		{Code: `if (1) {} else if (2) {}`},
		{Code: `if (f) {} else if (f()) {}`},
		{Code: `if (f(a)) {} else if (g(a)) {}`},
		{Code: `if (f(a)) {} else if (f(b)) {}`},
		{Code: `if (a === 1) {} else if (a === 2) {}`},
		{Code: `if (a === 1) {} else if (b === 1) {}`},
		{Code: `if (a) {}`},
		{Code: `if (a);`},
		{Code: `if (a) {} else {}`},
		{Code: `if (a) if (a) {}`},
		{Code: `if (a) if (a);`},
		{Code: `if (a) { if (a) {} }`},
		{Code: `if (a) {} else { if (a) {} }`},
		{Code: `if (a) {} if (a) {}`},
		{Code: `if (a); if (a);`},
		{Code: `while (a) if (a);`},
		{Code: `if (a); else a ? a : a;`},
		{Code: `if (a) { if (b) {} } else if (b) {}`},
		{Code: `if (a) if (b); else if (a);`},
		{Code: `if (a) {} else if (!!a) {}`},
		{Code: `if (a === 1) {} else if (a === (1)) {}`},
		{Code: `if (a || b) {} else if (c || d) {}`},
		{Code: `if (a || b) {} else if (a || c) {}`},
		{Code: `if (a) {} else if (a || b) {}`},
		{Code: `if (a) {} else if (b) {} else if (a || b || c) {}`},
		{Code: `if (a && b) {} else if (a) {} else if (b) {}`},
		{Code: `if (a && b) {} else if (b && c) {} else if (a && c) {}`},
		{Code: `if (a && b) {} else if (b || c) {}`},
		{Code: `if (a) {} else if (b && (a || c)) {}`},
		{Code: `if (a) {} else if (b && (c || d && a)) {}`},
		{Code: `if (a && b && c) {} else if (a && b && (c || d)) {}`},
	}, []InvalidTestCase{
		{
			Code: `if (a) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
			},
		},
		{
			Code: `if (a); else if (a);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    18,
				},
			},
		},
		{
			Code: `if (a) {} else if (a) {} else {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (a) {} else if (c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (c) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    50,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (b) {} else {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (c) {} else if (b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    50,
				},
			},
		},
		{
			Code: `if (a); else if (b); else if (c); else if (b); else if (d); else;`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    44,
				},
			},
		},
		{
			Code: `if (a); else if (b); else if (c); else if (d); else if (b); else if (e);`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    57,
				},
			},
		},
		{
			Code: `if (a) {} else if (a) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (a) {} else if (b) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
				{
					MessageId: "unexpected",
					Column:    50,
				},
				{
					MessageId: "unexpected",
					Column:    65,
				},
			},
		},
		{
			Code: `if (a) { if (b) {} } else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    31,
				},
			},
		},
		{
			Code: `if (a === 1) {} else if (a === 1) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    26,
				},
			},
		},
		{
			Code: `if (1 < a) {} else if (1 < a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    24,
				},
			},
		},
		{
			Code: `if (true) {} else if (true) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    23,
				},
			},
		},
		{
			Code: `if (a && b) {} else if (a && b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a && b || c)  {} else if (a && b || c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    31,
				},
			},
		},
		{
			Code: `if (f(a)) {} else if (f(a)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    23,
				},
			},
		},
		{
			Code: `if (a === 1) {} else if (a===1) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    26,
				},
			},
		},
		{
			Code: `if (a === 1) {} else if (a === /* comment */ 1) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    26,
				},
			},
		},
		{
			Code: `if (a === 1) {} else if ((a === 1)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    27,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (a) {} else if (b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
				{
					MessageId: "unexpected",
					Column:    40,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (b || a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (a || b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (c || d) {} else if (a || d) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    45,
				},
			},
		},
		{
			Code: `if ((a === b && fn(c)) || d) {} else if (fn(c) && a === b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    42,
				},
			},
		},
		{
			Code: `if (a) {} else if (a && b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
			},
		},
		{
			Code: `if (a && b) {} else if (b && a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a && b) {} else if (a && b && c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a || c) {} else if (a && b || c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (c && a || b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (c && (a || b)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b && c) {} else if (d && (a || e && c && b)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    40,
				},
			},
		},
		{
			Code: `if (a || b && c) {} else if (b && c && d) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    30,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (b && c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if ((a || b) && c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if ((a && (b || c)) || d) {} else if ((c || b) && e && a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    39,
				},
			},
		},
		{
			Code: `if (a && b || b && c) {} else if (a && b && c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (b && c) {} else if (d && (c && e && b || a)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    40,
				},
			},
		},
		{
			Code: `if (a || (b && (c || d))) {} else if ((d || c) && b) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    39,
				},
			},
		},
		{
			Code: `if (a || b) {} else if ((b || a) && c) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (c) {} else if (d) {} else if (b && (a || c)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    55,
				},
			},
		},
		{
			Code: `if (a || b || c) {} else if (a || (b && d) || (c && e)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    30,
				},
			},
		},
		{
			Code: `if (a || (b || c)) {} else if (a || (b && c)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    32,
				},
			},
		},
		{
			Code: `if (a || b) {} else if (c) {} else if (d) {} else if ((a || c) && (b || d)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    55,
				},
			},
		},
		{
			Code: `if (a) {} else if (b) {} else if (c && (a || d && b)) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    35,
				},
			},
		},
		{
			Code: `if (a) {} else if (a || a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
			},
		},
		{
			Code: `if (a || a) {} else if (a || a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a || a) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a) {} else if (a && a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    20,
				},
			},
		},
		{
			Code: `if (a && a) {} else if (a && a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
		{
			Code: `if (a && a) {} else if (a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpected",
					Column:    25,
				},
			},
		},
	})
}

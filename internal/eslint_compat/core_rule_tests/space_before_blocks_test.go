// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestSpaceBeforeBlocksRule(t *testing.T) {
	RunRuleTester(t, "{}", "space-before-blocks", []ValidTestCase{
		{Code: `if(a) {}`},
		{Code: `if(a)  {}`},
		{
			Code:    `if(a){}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `if(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a){ function b() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a) { function b(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{Code: `if(a)
{}`},
		{
			Code: `if(a)
{}`,
			Options: "[\"never\"]",
		},
		{Code: `if(a) {}else {}`},
		{
			Code:    `if(a){}else{}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `if(a){}else{}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a) {} else {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a){ function b() {} }else{}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `if(a) { function b(){} } else {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{Code: `function a() {}`},
		{
			Code:    `function a(){}`,
			Options: "[\"never\"]",
		},
		{
			Code:            `export default class{}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export default class {}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export default function a() {}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export default function a(){}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export function a(){}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:            `export function a() {}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:    `function a(){}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `function a() {}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `function a(){ if(b) {} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `function a() { if(b){} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{Code: `switch(a.b(c < d)) { case 'foo': foo(); break; default: if (a) { bar(); } }`},
		{Code: `switch(a) { }`},
		{Code: `switch(a)  {}`},
		{
			Code:    `switch(a.b(c < d)){ case 'foo': foo(); break; default: if (a){ bar(); } }`,
			Options: "[\"never\"]",
		},
		{
			Code:    `switch(a.b(c < d)){ case 'foo': foo(); break; default: if (a){ bar(); } }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `switch(a){}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `switch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `switch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{Code: `try {}catch(a) {}`},
		{
			Code:    `try{}catch(a){}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `try{}catch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `try {} catch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `try{ function b() {} }catch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `try { function b(){} } catch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{Code: `for(;;) {}`},
		{
			Code:    `for(;;){}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `for(;;){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `for(;;) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `for(;;){ function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `for(;;) { function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{Code: `while(a) {}`},
		{
			Code:    `while(a){}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `while(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `while(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:    `while(a){ function b() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:    `while(a) { function b(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
		},
		{
			Code:            `class test { constructor() {} }`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test { constructor(){} }`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{ constructor() {} }`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test {}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function a(){if(b) {}}`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"always\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a() {if(b) {}}`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"always\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a() {if(b){}}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"off\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a() {if(b) {}}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"off\",\"classes\":\"off\"}]",
		},
		{
			Code:            `class test { constructor(){if(a){}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test { constructor() {if(a){}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test { constructor(){if(a) {}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test { constructor() {if(a) {}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:    `function a(){if(b){}}`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"never\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a() {if(b){}}`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"never\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a(){if(b){}}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"off\",\"classes\":\"off\"}]",
		},
		{
			Code:    `function a(){if(b) {}}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"off\",\"classes\":\"off\"}]",
		},
		{
			Code:            `class test{ constructor(){if(a){}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{ constructor() {if(a){}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{ constructor(){if(a) {}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `class test{ constructor() {if(a) {}} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `()=>{};`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{
			Code:            `() => {};`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
		},
		{Code: `if(a) {}else{}`},
		{
			Code:    `if(a){}else {}`,
			Options: "[\"never\"]",
		},
		{
			Code:    `try {}catch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
		},
		{
			Code:            `export default class{}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
		},
		{
			Code:    `switch(x) { case 9:{ break; } }`,
			Options: "[\"always\"]",
		},
		{
			Code:    `switch(x){ case 9: { break; } }`,
			Options: "[\"never\"]",
		},
		{
			Code:    `switch(x) { case (9):{ break; } }`,
			Options: "[\"always\"]",
		},
		{
			Code:    `switch(x){ case (9): { break; } }`,
			Options: "[\"never\"]",
		},
		{
			Code:    `switch(x) { default:{ break; } }`,
			Options: "[\"always\"]",
		},
		{
			Code:    `switch(x){ default: { break; } }`,
			Options: "[\"never\"]",
		},
		{
			Code:            `(class{ static{} })`,
			Options:         "[\"always\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
		{
			Code:            `(class { static {} })`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":2022}",
		},
	}, []InvalidTestCase{
		{
			Code:   `if(a){}`,
			Output: `if(a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
					Line:      1,
					Column:    6,
				},
			},
		},
		{
			Code:    `if(a){}`,
			Output:  `if(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `if(a) {}`,
			Output:  `if(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `if(a) { function a() {} }`,
			Output:  `if(a){ function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
					Line:      1,
					Column:    7,
				},
			},
		},
		{
			Code:    `if(a) { function a() {} }`,
			Output:  `if(a) { function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
					Line:      1,
					Column:    22,
				},
			},
		},
		{
			Code:    `if(a) {}`,
			Output:  `if(a){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:   `function a(){}`,
			Output: `function a() {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `function a() {}`,
			Output:  `function a(){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `function a()    {}`,
			Output:  `function a(){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `function a(){ if (a){} }`,
			Output:  `function a() { if (a){} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
					Line:      1,
					Column:    13,
				},
			},
		},
		{
			Code:    `function a() { if (a) {} }`,
			Output:  `function a(){ if (a) {} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
					Line:      1,
					Column:    14,
				},
			},
		},
		{
			Code:    `function a(){}`,
			Output:  `function a() {}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `function a() {}`,
			Output:  `function a(){}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:   `switch(a){}`,
			Output: `switch(a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(a) {}`,
			Output:  `switch(a){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `switch(a){}`,
			Output:  `switch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(a) {}`,
			Output:  `switch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:   `switch(a.b()){ case 'foo': foo(); break; default: if (a) { bar(); } }`,
			Output: `switch(a.b()) { case 'foo': foo(); break; default: if (a) { bar(); } }`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(a.b()) { case 'foo': foo(); break; default: if (a){ bar(); } }`,
			Output:  `switch(a.b()){ case 'foo': foo(); break; default: if (a){ bar(); } }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:   `try{}catch(a){}`,
			Output: `try{}catch(a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `try {}catch(a) {}`,
			Output:  `try {}catch(a){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `try {} catch(a){}`,
			Output:  `try {} catch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `try { function b() {} } catch(a) {}`,
			Output:  `try { function b(){} } catch(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
					Line:      1,
					Column:    20,
				},
			},
		},
		{
			Code:    `try{ function b(){} }catch(a){}`,
			Output:  `try{ function b() {} }catch(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
					Line:      1,
					Column:    18,
				},
			},
		},
		{
			Code:   `for(;;){}`,
			Output: `for(;;) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `for(;;) {}`,
			Output:  `for(;;){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `for(;;){}`,
			Output:  `for(;;) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `for(;;) {}`,
			Output:  `for(;;){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `for(;;){ function a(){} }`,
			Output:  `for(;;){ function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `for(;;) { function a() {} }`,
			Output:  `for(;;) { function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:   `while(a){}`,
			Output: `while(a) {}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `while(a) {}`,
			Output:  `while(a){}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `while(a){}`,
			Output:  `while(a) {}`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `while(a) {}`,
			Output:  `while(a){}`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `while(a){ function a(){} }`,
			Output:  `while(a){ function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `while(a) { function a() {} }`,
			Output:  `while(a) { function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `export function a() { if(b) {} }`,
			Output:          `export function a() { if(b){} }`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `export function a(){ if(b){} }`,
			Output:          `export function a(){ if(b) {} }`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `export function a(){}`,
			Output:          `export function a() {}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `export default function (a) {}`,
			Output:          `export default function (a){}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `export function a() {}`,
			Output:          `export function a(){}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"always\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6,\"sourceType\":\"module\"}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class test{}`,
			Output:          `class test {}`,
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `class test{}`,
			Output:          `class test {}`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `class test{ constructor(){} }`,
			Output:          `class test{ constructor() {} }`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `class test { constructor() {} }`,
			Output:          `class test { constructor(){} }`,
			Options:         "[{\"functions\":\"never\",\"keywords\":\"never\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class test {}`,
			Output:          `class test{}`,
			Options:         "[{\"functions\":\"always\",\"keywords\":\"never\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class test {}`,
			Output:          `class test{}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `if(a){ function a(){} }`,
			Output:  `if(a){ function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"off\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `if(a) { function a(){} }`,
			Output:  `if(a) { function a() {} }`,
			Options: "[{\"functions\":\"always\",\"keywords\":\"off\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `if(a){ function a(){} }`,
			Output:  `if(a) { function a(){} }`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"always\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `if(a){ function a() {} }`,
			Output:  `if(a) { function a() {} }`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"always\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `class test{ constructor(){} }`,
			Output:          `class test { constructor(){} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `class test{ constructor() {} }`,
			Output:          `class test { constructor() {} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"always\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `if(a){ function a() {} }`,
			Output:  `if(a){ function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"off\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `if(a) { function a() {} }`,
			Output:  `if(a) { function a(){} }`,
			Options: "[{\"functions\":\"never\",\"keywords\":\"off\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `if(a) { function a(){} }`,
			Output:  `if(a){ function a(){} }`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"never\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `if(a) { function a() {} }`,
			Output:  `if(a){ function a() {} }`,
			Options: "[{\"functions\":\"off\",\"keywords\":\"never\",\"classes\":\"off\"}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class test { constructor(){} }`,
			Output:          `class test{ constructor(){} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class test { constructor() {} }`,
			Output:          `class test{ constructor() {} }`,
			Options:         "[{\"functions\":\"off\",\"keywords\":\"off\",\"classes\":\"never\"}]",
			LanguageOptions: "{\"ecmaVersion\":6}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:            `class A { foo(bar: string): void{} }`,
			Output:          `class A { foo(bar: string): void {} }`,
			LanguageOptions: "{\"parser\":{}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:            `function foo(): null {}`,
			Output:          `function foo(): null{}`,
			Options:         "[\"never\"]",
			LanguageOptions: "{\"parser\":{}}",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `label:{}`,
			Output:  `label: {}`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `label: {}`,
			Output:  `label:{}`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `switch(x) { case 9: label:{ break; } }`,
			Output:  `switch(x) { case 9: label: { break; } }`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(x){ case 9: label: { break; } }`,
			Output:  `switch(x){ case 9: label:{ break; } }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `switch(x) { case 9: if(y){ break; } }`,
			Output:  `switch(x) { case 9: if(y) { break; } }`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(x){ case 9: if(y) { break; } }`,
			Output:  `switch(x){ case 9: if(y){ break; } }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `switch(x) { case 9: y;{ break; } }`,
			Output:  `switch(x) { case 9: y; { break; } }`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(x){ case 9: y; { break; } }`,
			Output:  `switch(x){ case 9: y;{ break; } }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
		{
			Code:    `switch(x) { case 9: switch(y){} }`,
			Output:  `switch(x) { case 9: switch(y) {} }`,
			Options: "[\"always\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "missingSpace",
				},
			},
		},
		{
			Code:    `switch(x){ case 9: switch(y) {} }`,
			Output:  `switch(x){ case 9: switch(y){} }`,
			Options: "[\"never\"]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedSpace",
				},
			},
		},
	})
}

// Code generated by gen-eslint-core-rule-tests.ts. DO NOT EDIT.

package core_rule_tests

import (
	"testing"
)

func TestNoTabsRule(t *testing.T) {
	RunRuleTester(t, "{}", "no-tabs", []ValidTestCase{
		{Code: `function test(){
}`},
		{Code: `function test(){
  //   sdfdsf 
}`},
		{
			Code:    `	doSomething();`,
			Options: "[{\"allowIndentationTabs\":true}]",
		},
		{
			Code:    `	// comment`,
			Options: "[{\"allowIndentationTabs\":true}]",
		},
	}, []InvalidTestCase{
		{
			Code: `function test(){	}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 18,
				},
			},
		},
		{
			Code: `/** 	 comment test */`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    5,
					EndLine:   1,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `function test(){
  //	sdfdsf 
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      2,
					Column:    5,
					EndLine:   2,
					EndColumn: 6,
				},
			},
		},
		{
			Code: `function	test(){
  //sdfdsf 
}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    9,
					EndLine:   1,
					EndColumn: 10,
				},
			},
		},
		{
			Code: `function test(){
  //	sdfdsf 
	}`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      2,
					Column:    5,
					EndLine:   2,
					EndColumn: 6,
				},
				{
					MessageId: "unexpectedTab",
					Line:      3,
					Column:    1,
					EndLine:   3,
					EndColumn: 2,
				},
			},
		},
		{
			Code:    `	// Comment with leading tab 	 and inline tab`,
			Options: "[{\"allowIndentationTabs\":true}]",
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    30,
					EndLine:   1,
					EndColumn: 31,
				},
			},
		},
		{
			Code: `		a =			b +	c		;		`,
			Errors: []InvalidTestCaseError{
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    1,
					EndLine:   1,
					EndColumn: 3,
				},
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    6,
					EndLine:   1,
					EndColumn: 9,
				},
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    12,
					EndLine:   1,
					EndColumn: 13,
				},
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    14,
					EndLine:   1,
					EndColumn: 16,
				},
				{
					MessageId: "unexpectedTab",
					Line:      1,
					Column:    17,
					EndLine:   1,
					EndColumn: 19,
				},
			},
		},
	})
}
